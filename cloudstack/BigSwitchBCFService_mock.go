//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ./cloudstack/BigSwitchBCFService.go

// Package cloudstack is a generated GoMock package.
package cloudstack

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBigSwitchBCFServiceIface is a mock of BigSwitchBCFServiceIface interface.
type MockBigSwitchBCFServiceIface struct {
	ctrl     *gomock.Controller
	recorder *MockBigSwitchBCFServiceIfaceMockRecorder
}

// MockBigSwitchBCFServiceIfaceMockRecorder is the mock recorder for MockBigSwitchBCFServiceIface.
type MockBigSwitchBCFServiceIfaceMockRecorder struct {
	mock *MockBigSwitchBCFServiceIface
}

// NewMockBigSwitchBCFServiceIface creates a new mock instance.
func NewMockBigSwitchBCFServiceIface(ctrl *gomock.Controller) *MockBigSwitchBCFServiceIface {
	mock := &MockBigSwitchBCFServiceIface{ctrl: ctrl}
	mock.recorder = &MockBigSwitchBCFServiceIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBigSwitchBCFServiceIface) EXPECT() *MockBigSwitchBCFServiceIfaceMockRecorder {
	return m.recorder
}

// AddBigSwitchBcfDevice mocks base method.
func (m *MockBigSwitchBCFServiceIface) AddBigSwitchBcfDevice(p *AddBigSwitchBcfDeviceParams) (*AddBigSwitchBcfDeviceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddBigSwitchBcfDevice", p)
	ret0, _ := ret[0].(*AddBigSwitchBcfDeviceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddBigSwitchBcfDevice indicates an expected call of AddBigSwitchBcfDevice.
func (mr *MockBigSwitchBCFServiceIfaceMockRecorder) AddBigSwitchBcfDevice(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBigSwitchBcfDevice", reflect.TypeOf((*MockBigSwitchBCFServiceIface)(nil).AddBigSwitchBcfDevice), p)
}

// DeleteBigSwitchBcfDevice mocks base method.
func (m *MockBigSwitchBCFServiceIface) DeleteBigSwitchBcfDevice(p *DeleteBigSwitchBcfDeviceParams) (*DeleteBigSwitchBcfDeviceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBigSwitchBcfDevice", p)
	ret0, _ := ret[0].(*DeleteBigSwitchBcfDeviceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteBigSwitchBcfDevice indicates an expected call of DeleteBigSwitchBcfDevice.
func (mr *MockBigSwitchBCFServiceIfaceMockRecorder) DeleteBigSwitchBcfDevice(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBigSwitchBcfDevice", reflect.TypeOf((*MockBigSwitchBCFServiceIface)(nil).DeleteBigSwitchBcfDevice), p)
}

// ListBigSwitchBcfDevices mocks base method.
func (m *MockBigSwitchBCFServiceIface) ListBigSwitchBcfDevices(p *ListBigSwitchBcfDevicesParams) (*ListBigSwitchBcfDevicesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBigSwitchBcfDevices", p)
	ret0, _ := ret[0].(*ListBigSwitchBcfDevicesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBigSwitchBcfDevices indicates an expected call of ListBigSwitchBcfDevices.
func (mr *MockBigSwitchBCFServiceIfaceMockRecorder) ListBigSwitchBcfDevices(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBigSwitchBcfDevices", reflect.TypeOf((*MockBigSwitchBCFServiceIface)(nil).ListBigSwitchBcfDevices), p)
}

// NewAddBigSwitchBcfDeviceParams mocks base method.
func (m *MockBigSwitchBCFServiceIface) NewAddBigSwitchBcfDeviceParams(hostname string, nat bool, password, physicalnetworkid, username string) *AddBigSwitchBcfDeviceParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewAddBigSwitchBcfDeviceParams", hostname, nat, password, physicalnetworkid, username)
	ret0, _ := ret[0].(*AddBigSwitchBcfDeviceParams)
	return ret0
}

// NewAddBigSwitchBcfDeviceParams indicates an expected call of NewAddBigSwitchBcfDeviceParams.
func (mr *MockBigSwitchBCFServiceIfaceMockRecorder) NewAddBigSwitchBcfDeviceParams(hostname, nat, password, physicalnetworkid, username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAddBigSwitchBcfDeviceParams", reflect.TypeOf((*MockBigSwitchBCFServiceIface)(nil).NewAddBigSwitchBcfDeviceParams), hostname, nat, password, physicalnetworkid, username)
}

// NewDeleteBigSwitchBcfDeviceParams mocks base method.
func (m *MockBigSwitchBCFServiceIface) NewDeleteBigSwitchBcfDeviceParams(bcfdeviceid string) *DeleteBigSwitchBcfDeviceParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDeleteBigSwitchBcfDeviceParams", bcfdeviceid)
	ret0, _ := ret[0].(*DeleteBigSwitchBcfDeviceParams)
	return ret0
}

// NewDeleteBigSwitchBcfDeviceParams indicates an expected call of NewDeleteBigSwitchBcfDeviceParams.
func (mr *MockBigSwitchBCFServiceIfaceMockRecorder) NewDeleteBigSwitchBcfDeviceParams(bcfdeviceid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDeleteBigSwitchBcfDeviceParams", reflect.TypeOf((*MockBigSwitchBCFServiceIface)(nil).NewDeleteBigSwitchBcfDeviceParams), bcfdeviceid)
}

// NewListBigSwitchBcfDevicesParams mocks base method.
func (m *MockBigSwitchBCFServiceIface) NewListBigSwitchBcfDevicesParams() *ListBigSwitchBcfDevicesParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListBigSwitchBcfDevicesParams")
	ret0, _ := ret[0].(*ListBigSwitchBcfDevicesParams)
	return ret0
}

// NewListBigSwitchBcfDevicesParams indicates an expected call of NewListBigSwitchBcfDevicesParams.
func (mr *MockBigSwitchBCFServiceIfaceMockRecorder) NewListBigSwitchBcfDevicesParams() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListBigSwitchBcfDevicesParams", reflect.TypeOf((*MockBigSwitchBCFServiceIface)(nil).NewListBigSwitchBcfDevicesParams))
}
