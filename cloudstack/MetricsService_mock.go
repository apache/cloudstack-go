//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ./cloudstack/MetricsService.go

// Package cloudstack is a generated GoMock package.
package cloudstack

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetricsServiceIface is a mock of MetricsServiceIface interface.
type MockMetricsServiceIface struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsServiceIfaceMockRecorder
}

// MockMetricsServiceIfaceMockRecorder is the mock recorder for MockMetricsServiceIface.
type MockMetricsServiceIfaceMockRecorder struct {
	mock *MockMetricsServiceIface
}

// NewMockMetricsServiceIface creates a new mock instance.
func NewMockMetricsServiceIface(ctrl *gomock.Controller) *MockMetricsServiceIface {
	mock := &MockMetricsServiceIface{ctrl: ctrl}
	mock.recorder = &MockMetricsServiceIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsServiceIface) EXPECT() *MockMetricsServiceIfaceMockRecorder {
	return m.recorder
}

// ListInfrastructure mocks base method.
func (m *MockMetricsServiceIface) ListInfrastructure(p *ListInfrastructureParams) (*ListInfrastructureResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInfrastructure", p)
	ret0, _ := ret[0].(*ListInfrastructureResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInfrastructure indicates an expected call of ListInfrastructure.
func (mr *MockMetricsServiceIfaceMockRecorder) ListInfrastructure(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInfrastructure", reflect.TypeOf((*MockMetricsServiceIface)(nil).ListInfrastructure), p)
}

// NewListInfrastructureParams mocks base method.
func (m *MockMetricsServiceIface) NewListInfrastructureParams() *ListInfrastructureParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListInfrastructureParams")
	ret0, _ := ret[0].(*ListInfrastructureParams)
	return ret0
}

// NewListInfrastructureParams indicates an expected call of NewListInfrastructureParams.
func (mr *MockMetricsServiceIfaceMockRecorder) NewListInfrastructureParams() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListInfrastructureParams", reflect.TypeOf((*MockMetricsServiceIface)(nil).NewListInfrastructureParams))
}
