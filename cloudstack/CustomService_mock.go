//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ./cloudstack/CustomService.go

// Package cloudstack is a generated GoMock package.
package cloudstack

import (
	gomock "github.com/golang/mock/gomock"
)

// MockCustomServiceIface is a mock of CustomServiceIface interface.
type MockCustomServiceIface struct {
	ctrl     *gomock.Controller
	recorder *MockCustomServiceIfaceMockRecorder
}

// MockCustomServiceIfaceMockRecorder is the mock recorder for MockCustomServiceIface.
type MockCustomServiceIfaceMockRecorder struct {
	mock *MockCustomServiceIface
}

// NewMockCustomServiceIface creates a new mock instance.
func NewMockCustomServiceIface(ctrl *gomock.Controller) *MockCustomServiceIface {
	mock := &MockCustomServiceIface{ctrl: ctrl}
	mock.recorder = &MockCustomServiceIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomServiceIface) EXPECT() *MockCustomServiceIfaceMockRecorder {
	return m.recorder
}
