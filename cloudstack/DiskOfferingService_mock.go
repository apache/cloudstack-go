//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ./cloudstack/DiskOfferingService.go

// Package cloudstack is a generated GoMock package.
package cloudstack

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDiskOfferingServiceIface is a mock of DiskOfferingServiceIface interface.
type MockDiskOfferingServiceIface struct {
	ctrl     *gomock.Controller
	recorder *MockDiskOfferingServiceIfaceMockRecorder
}

// MockDiskOfferingServiceIfaceMockRecorder is the mock recorder for MockDiskOfferingServiceIface.
type MockDiskOfferingServiceIfaceMockRecorder struct {
	mock *MockDiskOfferingServiceIface
}

// NewMockDiskOfferingServiceIface creates a new mock instance.
func NewMockDiskOfferingServiceIface(ctrl *gomock.Controller) *MockDiskOfferingServiceIface {
	mock := &MockDiskOfferingServiceIface{ctrl: ctrl}
	mock.recorder = &MockDiskOfferingServiceIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiskOfferingServiceIface) EXPECT() *MockDiskOfferingServiceIfaceMockRecorder {
	return m.recorder
}

// CreateDiskOffering mocks base method.
func (m *MockDiskOfferingServiceIface) CreateDiskOffering(p *CreateDiskOfferingParams) (*CreateDiskOfferingResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDiskOffering", p)
	ret0, _ := ret[0].(*CreateDiskOfferingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDiskOffering indicates an expected call of CreateDiskOffering.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) CreateDiskOffering(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDiskOffering", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).CreateDiskOffering), p)
}

// DeleteDiskOffering mocks base method.
func (m *MockDiskOfferingServiceIface) DeleteDiskOffering(p *DeleteDiskOfferingParams) (*DeleteDiskOfferingResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDiskOffering", p)
	ret0, _ := ret[0].(*DeleteDiskOfferingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDiskOffering indicates an expected call of DeleteDiskOffering.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) DeleteDiskOffering(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDiskOffering", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).DeleteDiskOffering), p)
}

// GetDiskOfferingByID mocks base method.
func (m *MockDiskOfferingServiceIface) GetDiskOfferingByID(id string, opts ...OptionFunc) (*DiskOffering, int, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{id}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDiskOfferingByID", varargs...)
	ret0, _ := ret[0].(*DiskOffering)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetDiskOfferingByID indicates an expected call of GetDiskOfferingByID.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) GetDiskOfferingByID(id interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{id}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskOfferingByID", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).GetDiskOfferingByID), varargs...)
}

// GetDiskOfferingByName mocks base method.
func (m *MockDiskOfferingServiceIface) GetDiskOfferingByName(name string, opts ...OptionFunc) (*DiskOffering, int, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{name}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDiskOfferingByName", varargs...)
	ret0, _ := ret[0].(*DiskOffering)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetDiskOfferingByName indicates an expected call of GetDiskOfferingByName.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) GetDiskOfferingByName(name interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{name}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskOfferingByName", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).GetDiskOfferingByName), varargs...)
}

// GetDiskOfferingID mocks base method.
func (m *MockDiskOfferingServiceIface) GetDiskOfferingID(name string, opts ...OptionFunc) (string, int, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{name}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDiskOfferingID", varargs...)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetDiskOfferingID indicates an expected call of GetDiskOfferingID.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) GetDiskOfferingID(name interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{name}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskOfferingID", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).GetDiskOfferingID), varargs...)
}

// ListDiskOfferings mocks base method.
func (m *MockDiskOfferingServiceIface) ListDiskOfferings(p *ListDiskOfferingsParams) (*ListDiskOfferingsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDiskOfferings", p)
	ret0, _ := ret[0].(*ListDiskOfferingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDiskOfferings indicates an expected call of ListDiskOfferings.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) ListDiskOfferings(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDiskOfferings", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).ListDiskOfferings), p)
}

// NewCreateDiskOfferingParams mocks base method.
func (m *MockDiskOfferingServiceIface) NewCreateDiskOfferingParams(displaytext, name string) *CreateDiskOfferingParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewCreateDiskOfferingParams", displaytext, name)
	ret0, _ := ret[0].(*CreateDiskOfferingParams)
	return ret0
}

// NewCreateDiskOfferingParams indicates an expected call of NewCreateDiskOfferingParams.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) NewCreateDiskOfferingParams(displaytext, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewCreateDiskOfferingParams", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).NewCreateDiskOfferingParams), displaytext, name)
}

// NewDeleteDiskOfferingParams mocks base method.
func (m *MockDiskOfferingServiceIface) NewDeleteDiskOfferingParams(id string) *DeleteDiskOfferingParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDeleteDiskOfferingParams", id)
	ret0, _ := ret[0].(*DeleteDiskOfferingParams)
	return ret0
}

// NewDeleteDiskOfferingParams indicates an expected call of NewDeleteDiskOfferingParams.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) NewDeleteDiskOfferingParams(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDeleteDiskOfferingParams", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).NewDeleteDiskOfferingParams), id)
}

// NewListDiskOfferingsParams mocks base method.
func (m *MockDiskOfferingServiceIface) NewListDiskOfferingsParams() *ListDiskOfferingsParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewListDiskOfferingsParams")
	ret0, _ := ret[0].(*ListDiskOfferingsParams)
	return ret0
}

// NewListDiskOfferingsParams indicates an expected call of NewListDiskOfferingsParams.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) NewListDiskOfferingsParams() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewListDiskOfferingsParams", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).NewListDiskOfferingsParams))
}

// NewUpdateDiskOfferingParams mocks base method.
func (m *MockDiskOfferingServiceIface) NewUpdateDiskOfferingParams(id string) *UpdateDiskOfferingParams {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewUpdateDiskOfferingParams", id)
	ret0, _ := ret[0].(*UpdateDiskOfferingParams)
	return ret0
}

// NewUpdateDiskOfferingParams indicates an expected call of NewUpdateDiskOfferingParams.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) NewUpdateDiskOfferingParams(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewUpdateDiskOfferingParams", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).NewUpdateDiskOfferingParams), id)
}

// UpdateDiskOffering mocks base method.
func (m *MockDiskOfferingServiceIface) UpdateDiskOffering(p *UpdateDiskOfferingParams) (*UpdateDiskOfferingResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDiskOffering", p)
	ret0, _ := ret[0].(*UpdateDiskOfferingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDiskOffering indicates an expected call of UpdateDiskOffering.
func (mr *MockDiskOfferingServiceIfaceMockRecorder) UpdateDiskOffering(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDiskOffering", reflect.TypeOf((*MockDiskOfferingServiceIface)(nil).UpdateDiskOffering), p)
}
