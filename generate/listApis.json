{
  "api": [
    {
      "description": "Lists the resource icon for the specified resource(s)",
      "isasync": false,
      "name": "listResourceIcon",
      "params": [
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "list of resources to upload the icon/image for",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "resource type",
          "name": "resourcetype",
          "type": "resourceobjecttype"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "base64 representation of resource icon",
          "name": "base64image",
          "type": "string"
        }
      ],
      "since": "4.16.0.0"
    },
    {
      "description": "Creates VPC offering",
      "isasync": true,
      "name": "createVPCOffering",
      "params": [
        {
          "description": "the ID of the service offering for the VPC router appliance",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the display text of the vpc offering",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "desired service capabilities as part of vpc offering",
          "length": 255,
          "name": "servicecapabilitylist",
          "required": false,
          "since": "4.4",
          "type": "map"
        },
        {
          "description": "the ID of the containing domain(s), null for public offerings",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "list"
        },
        {
          "description": "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network",
          "length": 255,
          "name": "serviceproviderlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "The internet protocol of the offering. Options are ipv4 and dualstack. Default is ipv4. dualstack will create an offering that supports both IPv4 and IPv6",
          "length": 255,
          "name": "internetprotocol",
          "required": false,
          "since": "4.17.0",
          "type": "string"
        },
        {
          "description": "the name of the vpc offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "set to true if the offering is to be enabled during creation. Default is false",
          "length": 255,
          "name": "enable",
          "required": false,
          "since": "4.16",
          "type": "boolean"
        },
        {
          "description": "the ID of the containing zone(s), null for public offerings",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "since": "4.13",
          "type": "list"
        },
        {
          "description": "services supported by the vpc offering",
          "length": 255,
          "name": "supportedservices",
          "required": true,
          "type": "list"
        }
      ],
      "related": "updateVPCOffering,listVPCOfferings",
      "response": [
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the internet protocol of the vpc offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": " indicates if the vpc offering supports distributed router for one-hop forwarding",
          "name": "distributedvpcrouter",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": " indicated if the offering can support region level vpc",
          "name": "supportsregionLevelvpc",
          "type": "boolean"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates a new Pod.",
      "isasync": false,
      "name": "createPod",
      "params": [
        {
          "description": "the name of the Pod",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the starting IP address for the Pod",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID in which the Pod will be created",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the netmask for the Pod",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway for the Pod",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IP address for the Pod",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this Pod for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listPods,updatePod,createManagementNetworkIpRange",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "indicates Vlan ID for the range. This parameter is deprecated, please use 'vlanid' from ipranges parameter.",
          "name": "vlanid",
          "type": "list"
        },
        {},
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "indicates if range is dedicated for CPVM and SSVM. This parameter is deprecated, please use 'forsystemvms' from ipranges parameter.",
          "name": "forsystemvms",
          "type": "list"
        },
        {
          "description": "the ending IP for the Pod. This parameter is deprecated, please use 'endip' from ipranges parameter.",
          "name": "endip",
          "type": "list"
        },
        {},
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting IP for the Pod. This parameter is deprecated, please use 'startip' from ipranges parameter.",
          "name": "startip",
          "type": "list"
        },
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the IP ranges for the Pod",
          "name": "ipranges",
          "response": [
            {
              "description": "the starting IP for the range",
              "name": "startip",
              "type": "string"
            },
            {
              "description": "the CIDR for the range",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the ending IP for the range",
              "name": "endip",
              "type": "string"
            },
            {
              "description": "indicates if range is dedicated for CPVM and SSVM",
              "name": "forsystemvms",
              "type": "string"
            },
            {
              "description": "the gateway for the range",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "indicates Vlan ID for the range",
              "name": "vlanid",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Creates an account from an LDAP user",
      "isasync": false,
      "name": "ldapCreateAccount",
      "params": [
        {
          "description": "Account UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "accountid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "Type of the account. Specify 0 for user, 1 for root admin, and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Network domain for the account's networks",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the account under the specified role.",
          "length": 255,
          "name": "roleid",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "Creates the user under the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Unique username.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createAccount,disableAccount,enableAccount,lockAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
      "response": [
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {},
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {},
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Safely removes raw records from cloud_usage table",
      "isasync": false,
      "name": "removeRawUsageRecords",
      "params": [
        {
          "description": "Specify the number of days (greater than zero) to remove records that are older than those number of days from today. For example, specifying 10 would result in removing all the records created before 10 days from today",
          "length": 255,
          "name": "interval",
          "required": true,
          "type": "integer"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Copies an iso from one zone to another.",
      "isasync": true,
      "name": "copyIso",
      "params": [
        {
          "description": "ID of the zone the template is being copied to.",
          "length": 255,
          "name": "destzoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is currently hosted on. If not specified and template is cross-zone, then we will sync this template to region wide image store.",
          "length": 255,
          "name": "sourcezoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "A list of IDs of the zones that the template needs to be copied to.Specify this list if the template needs to copied to multiple zones in one go. Do not specify destzoneid and destzoneids together, however one of them is required.",
          "length": 255,
          "name": "destzoneids",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "list"
        },
        {
          "description": "Template ID.",
          "length": 255,
          "name": "id",
          "related": "prepareTemplate,copyIso,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {},
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Deletes a autoscale vm profile.",
      "isasync": true,
      "name": "deleteAutoScaleVmProfile",
      "params": [
        {
          "description": "the ID of the autoscale profile",
          "length": 255,
          "name": "id",
          "related": "createAutoScaleVmProfile,listAutoScaleVmProfiles,updateAutoScaleVmProfile",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Issues and propagates client certificate on a connected host/agent using configured CA plugin",
      "isasync": true,
      "name": "provisionCertificate",
      "params": [
        {
          "description": "The host/agent uuid to which the certificate has to be provisioned (issued and propagated)",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,listHosts,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Whether to attempt reconnection with host/agent after successful deployment of certificate. When option is not provided, configured global setting is used",
          "length": 255,
          "name": "reconnect",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Name of the CA service provider, otherwise the default configured provider plugin will be used",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "4.11.0"
    },
    {
      "description": "Lists VM metrics",
      "isasync": false,
      "name": "listVirtualMachinesMetrics",
      "params": [
        {
          "description": "state of the virtual machine. Possible values are: Running, Stopped, Present, Destroyed, Expunged. Present is used for the state equal not destroyed.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,listHosts,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network type; true if need to list vms using Virtual Network, false otherwise",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list vms by ssh keypair name",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "the group ID",
          "length": 255,
          "name": "groupid",
          "related": "createInstanceGroup,listInstanceGroups,updateInstanceGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,listNetworks,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the user ID that created the VM and is under the account that owns the VM",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list vms by iso",
          "length": 255,
          "name": "isoid",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by the High Availability offering; true if filtering VMs with HA enabled; false for VMs with HA disabled",
          "length": 255,
          "name": "haenable",
          "required": false,
          "since": "4.15",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list vms by vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by the service offering",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,updateStoragePool,syncStoragePool,updateStorageCapabilities,listVsphereStoragePolicyCompatiblePools",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by the backup offering",
          "length": 255,
          "name": "backupofferingid",
          "required": false,
          "since": "4.17",
          "type": "uuid"
        },
        {
          "description": "the pod ID",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Accumulates the VM metrics data instead of returning only the most recent data collected. The default behavior is set by the global configuration vm.stats.increment.metrics.",
          "length": 255,
          "name": "accumulate",
          "required": false,
          "since": "4.17.0",
          "type": "boolean"
        },
        {
          "description": "list vms by template",
          "length": 255,
          "name": "templateid",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list vms by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "createAffinityGroup,listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the resource icon for VMs",
          "length": 255,
          "name": "showicon",
          "required": false,
          "since": "4.16.0.0",
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,listClusters,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the virtual machine (a substring match is made against the parameter value, data for all matching VMs will be returned)",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, diskoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "the security group ID",
          "length": 255,
          "name": "securitygroupid",
          "related": "createSecurityGroup,listSecurityGroups,updateSecurityGroup",
          "required": false,
          "since": "4.15",
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the virtual machines, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "since": "4.4",
          "type": "list"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of AutoScaling VM Group",
          "length": 255,
          "name": "autoscalevmgroupid",
          "related": "createAutoScaleVmGroup,disableAutoScaleVmGroup,enableAutoScaleVmGroup,listAutoScaleVmGroups,updateAutoScaleVmGroup",
          "required": false,
          "since": "4.18.0",
          "type": "uuid"
        },
        {
          "description": "Whether to return the VMs' user data or not. By default, user data will not be returned.",
          "length": 255,
          "name": "userdata",
          "required": false,
          "since": "4.18.0.0",
          "type": "boolean"
        }
      ],
      "related": "listVirtualMachinesMetrics",
      "response": [
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the total disk iops",
          "name": "diskiopstotal",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "disk write in MiB",
          "name": "diskwrite",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "network read in MiB",
          "name": "networkread",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "network write in MiB",
          "name": "networkwrite",
          "type": "string"
        },
        {
          "description": "the total memory capacity in GiB",
          "name": "memorytotal",
          "type": "string"
        },
        {
          "description": "the VM's primary IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "disk read in MiB",
          "name": "diskread",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the total cpu capacity in Ghz",
          "name": "cputotal",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {},
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists hosts.",
      "isasync": false,
      "name": "listHosts",
      "params": [
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists hosts in the same cluster as this VM and flag hosts with enough CPU/RAm to host this VM",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list hosts by resource state. Resource state represents current state determined by admin of host, value can be one of [Enabled, Disabled, Unmanaged, PrepareForMaintenance, ErrorInMaintenance, Maintenance, Error]",
          "length": 255,
          "name": "resourcestate",
          "required": false,
          "type": "string"
        },
        {
          "description": "list hosts for which out-of-band management is enabled",
          "length": 255,
          "name": "outofbandmanagementenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "if true, list only hosts dedicated to HA",
          "length": 255,
          "name": "hahost",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the host type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list hosts by its out-of-band management interface's power state. Its value can be one of [On, Off, Unknown]",
          "length": 255,
          "name": "outofbandmanagementpowerstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the host",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,listHosts,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the host",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the state of the host",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma separated list of host details requested, value can be a list of [ min, all, capacity, events, stats]",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "the Zone ID for the host",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "hypervisor type of host: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists hosts existing in particular cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,listClusters,updateCluster",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
      "response": [
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {},
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {},
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Deletes a storage pool.",
      "isasync": false,
      "name": "deleteStoragePool",
      "params": [
        {
          "description": "Force destroy storage pool (force expunge volumes in Destroyed state as a part of pool removal)",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Storage pool id",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,updateStoragePool,syncStoragePool,updateStorageCapabilities,listVsphereStoragePolicyCompatiblePools",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List storage pools compatible with a vSphere storage policy",
      "isasync": false,
      "name": "listVsphereStoragePolicyCompatiblePools",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "ID of the storage policy",
          "length": 255,
          "name": "policyid",
          "related": "importVsphereStoragePolicies,listVsphereStoragePolicies",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,updateStoragePool,syncStoragePool,updateStorageCapabilities",
      "response": [
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an existing guest network IPv6 prefix.",
      "isasync": true,
      "name": "deleteGuestNetworkIpv6Prefix",
      "params": [
        {
          "description": "Id of the guest network IPv6 prefix",
          "length": 255,
          "name": "id",
          "related": "createGuestNetworkIpv6Prefix,listGuestNetworkIpv6Prefixes",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ],
      "since": "4.17.0.0"
    },
    {
      "description": "Updates a storage pool.",
      "isasync": false,
      "name": "updateStoragePool",
      "params": [
        {
          "description": "Change the name of the storage pool",
          "length": 255,
          "name": "name",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,updateStoragePool,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "since": "4.15",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacityiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "bytes CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacitybytes",
          "required": false,
          "type": "long"
        },
        {
          "description": "comma-separated list of tags for the storage pool",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "list"
        },
        {
          "description": "false to disable the pool for allocation of new volumes, true to enable it back.",
          "length": 255,
          "name": "enabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the Id of the storage pool",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,updateStoragePool,syncStoragePool,updateStorageCapabilities",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {},
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {},
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Reboots a system VM.",
      "isasync": true,
      "name": "rebootSystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "destroySystemVm,listSystemVms,migrateSystemVm,rebootSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm,scaleSystemVm",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Force reboot the system VM (System VM is Stopped and then Started)",
          "length": 255,
          "name": "forced",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        }
      ],
      "related": "destroySystemVm,listSystemVms,migrateSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm,scaleSystemVm",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {},
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {},
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Tungsten-Fabric tags",
      "isasync": false,
      "name": "listTungstenFabricTag",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "tthe uuid of Tungsten-Fabric nic",
          "length": 255,
          "name": "nicuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric vm",
          "length": 255,
          "name": "vmuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric network",
          "length": 255,
          "name": "networkuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric tag",
          "length": 255,
          "name": "taguuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createTungstenFabricTag,applyTungstenFabricTag,removeTungstenFabricTag",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy",
          "name": "policy",
          "type": "list"
        },
        {},
        {
          "description": "list Tungsten-Fabric nic",
          "name": "nic",
          "type": "list"
        },
        {
          "description": "list Tungsten-Fabric network",
          "name": "network",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "list Tungsten-Fabric vm",
          "name": "vm",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric tag name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Import LDAP users",
      "isasync": false,
      "name": "importLdapUsers",
      "params": [
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies the group name from which the ldap users are to be imported. If no group is specified, all the users will be imported.",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Creates the account under the specified role.",
          "length": 255,
          "name": "roleid",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Specifies the domain to which the ldap users are to be imported. If no domain is specified, a domain will created using group parameter. If the group is also not specified, a domain name based on the OU information will be created. If no OU hierarchy exists, will be defaulted to ROOT domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        }
      ],
      "related": "searchLdap,listLdapUsers",
      "response": [
        {
          "description": "The user's firstname",
          "name": "firstname",
          "type": "string"
        },
        {},
        {
          "description": "The authentication source for this user as known to the system or empty if the user is not yet in cloudstack.",
          "name": "conflictingusersource",
          "type": "string"
        },
        {
          "description": "The user's username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "The user's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The user's principle",
          "name": "principal",
          "type": "string"
        },
        {},
        {
          "description": "The user's email",
          "name": "email",
          "type": "string"
        },
        {
          "description": "The user's lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.3.0"
    },
    {
      "description": "Lists all available networks.",
      "isasync": false,
      "name": "listNetworks",
      "params": [
        {
          "description": "list networks supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "true if need to list only networks which support specifying IP ranges",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the zone ID of the network",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks by restartRequired",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list networks available for VM deployment",
          "length": 255,
          "name": "canusefordeploy",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list networks by physical network id",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List networks by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "type of the traffic",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks by ACL (access control list) type. Supported values are account and domain",
          "length": 255,
          "name": "acltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list networks by network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "createNetworkOffering,updateNetworkOffering,listNetworkOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the network belongs to VPC",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "true if network is system, false otherwise",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list networks by ID",
          "length": 255,
          "name": "id",
          "related": "createNetwork,listNetworks,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "possible values are \"account\", \"domain\", \"accountdomain\",\"shared\", and \"all\". Default value is \"all\".* account : account networks that have been registered for or created by the calling user. * domain : domain networks that have been registered for or created by the calling user. * accountdomain : account and domain networks that have been registered for or created by the calling user. * shared : networks that have been granted to the calling user by another user. * all : all networks (account, domain and shared).",
          "length": 255,
          "name": "networkfilter",
          "required": false,
          "since": "4.17.0",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "flag to display the resource icon for networks",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID or VID of the network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "since": "4.17.0",
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List networks by associated networks. Only available if create a Shared network.",
          "length": 255,
          "name": "associatednetworkid",
          "related": "createNetwork,listNetworks,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "since": "4.17.0",
          "type": "uuid"
        },
        {
          "description": "the type of the network. Supported values are: isolated, l2, shared and all",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
      "response": [
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        }
      ]
    },
    {
      "description": "List dedicated zones.",
      "isasync": false,
      "name": "listDedicatedZones",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the domain associated with the zone",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list dedicated zones by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "createAffinityGroup,listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the account associated with the zone. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "dedicateZone",
      "response": [
        {},
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Dedication Affinity Group ID of the zone",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain ID to which the Zone is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the Name of the Zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Zone is dedicated",
          "name": "accountid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists the pools of elastistor",
      "isasync": false,
      "name": "listElastistorPool",
      "params": [
        {
          "description": "the ID of the Pool",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "available iops of the pool",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "default gateway of the pool",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the current available space of the pool",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "string"
        },
        {
          "description": "controller of the pool",
          "name": "controllerid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Releases an IP address from the account.",
      "isasync": false,
      "name": "releaseIpAddress",
      "params": [
        {
          "description": "the ID of the public IP address to release",
          "length": 255,
          "name": "id",
          "related": "associateIpAddress,reserveIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {}
      ],
      "since": "4.17"
    },
    {
      "description": "Updates a management network IP range. Only allowed when no IPs are allocated.",
      "isasync": true,
      "name": "updatePodManagementNetworkIpRange",
      "params": [
        {
          "description": "The current ending IP address.",
          "length": 255,
          "name": "currentendip",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of POD, where the IP range belongs to.",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The new ending IP address.",
          "length": 255,
          "name": "newendip",
          "required": false,
          "type": "string"
        },
        {
          "description": "The new starting IP address.",
          "length": 255,
          "name": "newstartip",
          "required": false,
          "type": "string"
        },
        {
          "description": "The current starting IP address.",
          "length": 255,
          "name": "currentstartip",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "4.16.0.0"
    },
    {
      "description": "list Tungsten-Fabric LB health monitor",
      "isasync": false,
      "name": "listTungstenFabricLBHealthMonitor",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of lb rule",
          "length": 255,
          "name": "lbruleid",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateTungstenFabricLBHealthMonitor",
      "response": [
        {
          "description": "the health monitor UUID",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the health monitor url path",
          "name": "urlpath",
          "type": "string"
        },
        {
          "description": "the health monitor http method",
          "name": "httpmethod",
          "type": "string"
        },
        {
          "description": "the health monitor ID",
          "name": "id",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the health monitor retry",
          "name": "retry",
          "type": "int"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the health monitor type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {},
        {
          "description": "the health monitor interval",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the health monitor expected code",
          "name": "expectedcode",
          "type": "string"
        },
        {
          "description": "the health monitor timeout",
          "name": "timeout",
          "type": "int"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates firewall rule ",
      "isasync": true,
      "name": "updateFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "createEgressFirewallRule,createFirewallRule,listEgressFirewallRules,listFirewallRules,updateEgressFirewallRule",
      "response": [
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic to. Multiple entries are separated by a single comma character (,).",
          "name": "destcidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {},
        {
          "description": "the traffic type for the firewall rule",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {},
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Return true if the plugin is enabled",
      "isasync": false,
      "name": "quotaIsEnabled",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is quota service enabled",
          "name": "isenabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {}
      ],
      "since": "4.7.0"
    },
    {
      "description": "Deletes account from the project",
      "isasync": true,
      "name": "deleteAccountFromProject",
      "params": [
        {
          "description": "ID of the project to remove the account from",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name of the account to be removed from the project",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "List hypervisors",
      "isasync": false,
      "name": "listHypervisors",
      "params": [
        {
          "description": "the zone id for listing hypervisors.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Hypervisor name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates the information about Guest OS",
      "isasync": true,
      "name": "updateGuestOs",
      "params": [
        {
          "description": "UUID of the Guest OS",
          "length": 255,
          "name": "id",
          "related": "listOsTypes,addGuestOs,updateGuestOs",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Map of (key/value pairs)",
          "length": 255,
          "name": "details",
          "required": true,
          "type": "map"
        },
        {
          "description": "Unique display name for Guest OS",
          "length": 255,
          "name": "osdisplayname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listOsTypes,addGuestOs",
      "response": [
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "is the guest OS user defined",
          "name": "isuserdefined",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Lists all guest vlans",
      "isasync": false,
      "name": "listGuestVlans",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list guest vlan by physical network",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "limits search results to allocated guest vlan. false by default.",
          "length": 255,
          "name": "allocatedonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list guest vlan by id",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list guest vlan by vnet",
          "length": 255,
          "name": "vnet",
          "required": false,
          "type": "string"
        },
        {
          "description": "list guest vlan by zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the zone name of the guest VLAN range",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account of the guest VLAN range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the guest VLAN",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "true if the guest VLAN is dedicated to the account",
          "name": "isdedicated",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of networks who use this guest VLAN",
          "name": "network",
          "type": "list"
        },
        {
          "description": "the project name of the guest VLAN range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the allocation state of the guest VLAN",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the guest VLAN id",
          "name": "id",
          "type": "long"
        },
        {
          "description": "date the guest VLAN was taken",
          "name": "taken",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the zone ID of the guest VLAN range",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the guest VLAN range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the physical network name of the guest VLAN range",
          "name": "physicalnetworkname",
          "type": "string"
        },
        {
          "description": "the domain ID of the guest VLAN range",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the domain name of the guest VLAN range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the physical network ID of the guest VLAN range",
          "name": "physicalnetworkid",
          "type": "string"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Updates resource limits for an account or domain.",
      "isasync": false,
      "name": "updateResourceLimit",
      "params": [
        {
          "description": "Update resource limits for all accounts in specified domain. If used with the account parameter, updates resource limits for a specified account in specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "  Maximum resource limit.",
          "length": 255,
          "name": "max",
          "required": false,
          "type": "long"
        },
        {
          "description": "Update resource limits for project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Update resource for a specified account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Type of resource to update. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create. 3 - Snapshot. Number of snapshots a user can create. 4 - Template. Number of templates that a user can register/create. 6 - Network. Number of guest network a user can create. 7 - VPC. Number of VPC a user can create. 8 - CPU. Total number of CPU cores a user can use. 9 - Memory. Total Memory (in MB) a user can use. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listResourceLimits",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account of the resource limit",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the resource limit",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
          "name": "max",
          "type": "long"
        },
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the project id of the resource limit",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the resource limit",
          "name": "project",
          "type": "string"
        },
        {
          "description": "resource type name. Values include user_vm, public_ip, volume, snapshot, template, project, network, vpc, cpu, memory, primary_storage, secondary_storage.",
          "name": "resourcetypename",
          "type": "string"
        },
        {
          "description": "the domain ID of the resource limit",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a static route",
      "isasync": true,
      "name": "deleteStaticRoute",
      "params": [
        {
          "description": "the ID of the static route",
          "length": 255,
          "name": "id",
          "related": "createStaticRoute,listStaticRoutes",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists hosts metrics",
      "isasync": false,
      "name": "listHostsMetrics",
      "params": [
        {
          "description": "the state of the host",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists hosts in the same cluster as this VM and flag hosts with enough CPU/RAm to host this VM",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list hosts by its out-of-band management interface's power state. Its value can be one of [On, Off, Unknown]",
          "length": 255,
          "name": "outofbandmanagementpowerstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the host",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list hosts by resource state. Resource state represents current state determined by admin of host, value can be one of [Enabled, Disabled, Unmanaged, PrepareForMaintenance, ErrorInMaintenance, Maintenance, Error]",
          "length": 255,
          "name": "resourcestate",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "comma separated list of host details requested, value can be a list of [ min, all, capacity, events, stats]",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "the id of the host",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "hypervisor type of host: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Zone ID for the host",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if true, list only hosts dedicated to HA",
          "length": 255,
          "name": "hahost",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists hosts existing in particular cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,listClusters,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list hosts for which out-of-band management is enabled",
          "length": 255,
          "name": "outofbandmanagementenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the host type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the total cpu used in Ghz",
          "name": "cpuusedghz",
          "type": "string"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "out-of-band management power state",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "cpu usage notification threshold exceeded",
          "name": "cputhreshold",
          "type": "boolean"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "memory usage disable threshold exceeded",
          "name": "memorydisablethreshold",
          "type": "boolean"
        },
        {
          "description": "cpu usage disable threshold exceeded",
          "name": "cpudisablethreshold",
          "type": "boolean"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {},
        {
          "description": "the total memory used in GiB",
          "name": "memoryusedgb",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the total memory allocated in GiB",
          "name": "memoryallocatedgb",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "cpu allocated disable threshold exceeded",
          "name": "cpuallocateddisablethreshold",
          "type": "boolean"
        },
        {
          "description": "cpu allocated notification threshold exceeded",
          "name": "cpuallocatedthreshold",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "memory allocated notification threshold exceeded",
          "name": "memoryallocatedthreshold",
          "type": "boolean"
        },
        {
          "description": "memory usage notification threshold exceeded",
          "name": "memorythreshold",
          "type": "boolean"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "memory allocated disable threshold exceeded",
          "name": "memoryallocateddisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the total memory capacity in GiB",
          "name": "memorytotalgb",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "network read in GiB",
          "name": "networkread",
          "type": "string"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the total cpu allocated in Ghz",
          "name": "cpuallocatedghz",
          "type": "string"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "network write in GiB",
          "name": "networkwrite",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total cpu capacity in Ghz",
          "name": "cputotalghz",
          "type": "string"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            },
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the average cpu load the last minute",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "instances on the host",
          "name": "instances",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        }
      ],
      "since": "4.9.3"
    },
    {
      "description": "get load balancer certificate",
      "isasync": false,
      "name": "getLoadBalancerSslCertificate",
      "params": [
        {
          "description": "the ID of Lb",
          "length": 255,
          "name": "id",
          "related": "getLoadBalancerSslCertificate",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "key",
          "name": "key",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "crt",
          "name": "crt",
          "type": "string"
        },
        {},
        {
          "description": "chain",
          "name": "chain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Release the dedication for the pod",
      "isasync": true,
      "name": "releaseDedicatedPod",
      "params": [
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists affinity groups",
      "isasync": false,
      "name": "listAffinityGroups",
      "params": [
        {
          "description": "lists affinity groups by virtual machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists affinity groups by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists affinity groups by type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list the affinity group by the ID provided",
          "length": 255,
          "name": "id",
          "related": "createAffinityGroup,listAffinityGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createAffinityGroup",
      "response": [
        {},
        {
          "description": "the domain ID of the affinity group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project ID of the affinity group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the affinity group",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the domain name of the affinity group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the affinity group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account owning the affinity group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the affinity group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the affinity group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "virtual machine IDs associated with this affinity group",
          "name": "virtualmachineIds",
          "type": "list"
        }
      ]
    },
    {
      "description": "Register a public key in a keypair under a certain name",
      "isasync": false,
      "name": "registerSSHKeyPair",
      "params": [
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Public key material of the keypair",
          "length": 5120,
          "name": "publickey",
          "required": true,
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listSSHKeyPairs",
      "response": [
        {
          "description": "the project id of the keypair owner",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain id of the keypair owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the keypair owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the owner of the keypair",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "ID of the ssh keypair",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "the project name of the keypair owner",
          "name": "project",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Destroys a l2tp/ipsec remote access vpn",
      "isasync": true,
      "name": "deleteRemoteAccessVpn",
      "params": [
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress,reserveIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Start rolling maintenance",
      "isasync": true,
      "name": "startRollingMaintenance",
      "params": [
        {
          "description": "if rolling mechanism should continue in case of an error",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the IDs of the zones to start maintenance on",
          "length": 255,
          "name": "zoneids",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "list"
        },
        {
          "description": "optional operation timeout (in seconds) that overrides the global timeout setting",
          "length": 255,
          "name": "timeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the hosts to start maintenance on",
          "length": 255,
          "name": "hostids",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
          "required": false,
          "type": "list"
        },
        {
          "description": "the IDs of the pods to start maintenance on",
          "length": 255,
          "name": "podids",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "list"
        },
        {
          "description": "the command to execute while hosts are on maintenance",
          "length": 255,
          "name": "payload",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the clusters to start maintenance on",
          "length": 255,
          "name": "clusterids",
          "related": "addCluster,listClusters,updateCluster",
          "required": false,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the hosts updated",
          "name": "hostsupdated",
          "response": [
            {
              "description": "start date of the update on the host",
              "name": "startdate",
              "type": "string"
            },
            {
              "description": "the name of the updated host",
              "name": "hostname",
              "type": "string"
            },
            {
              "description": "end date of the update on the host",
              "name": "enddate",
              "type": "string"
            },
            {
              "description": "output of the maintenance script on the host",
              "name": "output",
              "type": "string"
            },
            {
              "description": "the ID of the updated host",
              "name": "hostid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "in case of failure, details are displayed",
          "name": "details",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the hosts skipped",
          "name": "hostsskipped",
          "response": [
            {
              "description": "the ID of the skipped host",
              "name": "hostid",
              "type": "string"
            },
            {
              "description": "the name of the skipped host",
              "name": "hostname",
              "type": "string"
            },
            {
              "description": "the reason to skip the host",
              "name": "reason",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "indicates if the rolling maintenance operation was successful",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "list Tungsten-Fabric application policy set",
      "isasync": false,
      "name": "listTungstenFabricApplicationPolicySet",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createTungstenFabricApplicationPolicySet",
      "response": [
        {
          "description": "Tungsten-Fabric application policy uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "list Tungsten-Fabric firewall policy",
          "name": "firewallpolicy",
          "type": "list"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "list Tungsten-Fabric tag",
          "name": "tag",
          "type": "list"
        }
      ]
    },
    {
      "description": "Updates network ACL list",
      "isasync": true,
      "name": "updateNetworkACLList",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Name of the network ACL list",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the list to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "Description of the network ACL list",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ],
      "since": "4.4"
    },
    {
      "description": "Reserve a public IP to an account.",
      "isasync": false,
      "name": "reserveIpAddress",
      "params": [
        {
          "description": "the account to reserve with this IP address",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the IP to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the public IP address to reserve",
          "length": 255,
          "name": "id",
          "related": "associateIpAddress,reserveIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the project to reserve with this IP address",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the domain to reserve with this IP address",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "VPC id the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the name of the Network where ip belongs to",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "virtual machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {},
        {
          "description": "virtual machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "VPC name the ip belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "virtual machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "virtual machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        }
      ],
      "since": "4.17"
    },
    {
      "description": "Restore a VM to original template/ISO or new template/ISO",
      "isasync": true,
      "name": "restoreVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional template Id to restore vm from the new template. This can be an ISO id in case of restore vm deployed using ISO",
          "length": 255,
          "name": "templateid",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {},
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {},
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {},
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Delete one or more events.",
      "isasync": false,
      "name": "deleteEvents",
      "params": [
        {
          "description": "start date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the IDs of the events",
          "length": 255,
          "name": "ids",
          "related": "listEvents",
          "required": false,
          "type": "list"
        },
        {
          "description": "end date range to delete events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "delete by event type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": " delete a nicira nvp device",
      "isasync": true,
      "name": "deleteNiciraNvpDevice",
      "params": [
        {
          "description": "Nicira device ID",
          "length": 255,
          "name": "nvpdeviceid",
          "related": "addNiciraNvpDevice,listNiciraNvpDevices",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Notify provision has been done on a host. This api is for baremetal virtual router service, not for end user",
      "isasync": true,
      "name": "notifyBaremetalProvisionDone",
      "params": [
        {
          "description": "mac of the nic used for provision",
          "length": 255,
          "name": "mac",
          "required": true,
          "type": "object"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "List ucs blades",
      "isasync": false,
      "name": "listUcsBlades",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "ucs manager id",
          "length": 255,
          "name": "ucsmanagerid",
          "related": "listUcsManagers,addUcsManager",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "associateUcsProfileToBlade",
      "response": [
        {
          "description": "ucs blade id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "cloudstack host id this blade associates to",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "ucs blade dn",
          "name": "bladedn",
          "type": "string"
        },
        {
          "description": "ucs manager id",
          "name": "ucsmanagerid",
          "type": "string"
        },
        {
          "description": "associated ucs profile dn",
          "name": "profiledn",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Get Volume Snapshot Details",
      "isasync": false,
      "name": "getVolumeSnapshotDetails",
      "params": [
        {
          "description": "CloudStack Snapshot UUID",
          "length": 255,
          "name": "snapshotid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "getVolumeiScsiName",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Volume iSCSI Name",
          "name": "volumeiScsiName",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Deletes an ISO file.",
      "isasync": true,
      "name": "deleteIso",
      "params": [
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone of the ISO file. If not specified, the ISO will be deleted from all the zones",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates a host.",
      "isasync": false,
      "name": "updateHost",
      "params": [
        {
          "description": "Change the name of host",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.15",
          "type": "string"
        },
        {
          "description": "Add an annotation to this host",
          "length": 255,
          "name": "annotation",
          "required": false,
          "since": "4.11",
          "type": "string"
        },
        {
          "description": "the new uri for the secondary storage: nfs://host/path",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the host to update",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,updateHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the id of Os category to update the host with",
          "length": 255,
          "name": "oscategoryid",
          "related": "listOsCategories",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Change resource state of host, valid values are [Enable, Disable]. Operation may failed if host in states not allowing Enable/Disable",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "list of tags to be added to the host",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "list"
        }
      ],
      "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
      "response": [
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {},
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a egress firewall rule for a given network ",
      "isasync": true,
      "name": "createEgressFirewallRule",
      "params": [
        {
          "description": "the network id of the port forwarding rule",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ending port of firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of firewallrule: system/user",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic to. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "destcidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        }
      ],
      "related": "createFirewallRule,listEgressFirewallRules,listFirewallRules,updateEgressFirewallRule",
      "response": [
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the cidr list to forward traffic to. Multiple entries are separated by a single comma character (,).",
          "name": "destcidrlist",
          "type": "string"
        },
        {},
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the traffic type for the firewall rule",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists VPC offerings",
      "isasync": false,
      "name": "listVPCOfferings",
      "params": [
        {
          "description": "id of zone VPC offering is associated with",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "since": "4.13",
          "type": "uuid"
        },
        {
          "description": "list VPC offerings by id",
          "length": 255,
          "name": "id",
          "related": "updateVPCOffering,listVPCOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list VPC offerings by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPC offerings supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "list VPC offerings available for VPC creation in specific domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "since": "4.18",
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list VPC offerings by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if need to list only default VPC offerings. Default value is false",
          "length": 255,
          "name": "isdefault",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list VPC offerings by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateVPCOffering",
      "response": [
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the internet protocol of the vpc offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": " indicates if the vpc offering supports distributed router for one-hop forwarding",
          "name": "distributedvpcrouter",
          "type": "boolean"
        },
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": " indicated if the offering can support region level vpc",
          "name": "supportsregionLevelvpc",
          "type": "boolean"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Get the SF volume size including Hypervisor Snapshot Reserve",
      "isasync": false,
      "name": "getSolidFireVolumeSize",
      "params": [
        {
          "description": "Volume UUID",
          "length": 255,
          "name": "volumeid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "SolidFire Volume Size Including Hypervisor Snapshot Reserve",
          "name": "solidFireVolumeSize",
          "type": "long"
        }
      ]
    },
    {
      "description": "Uploads a data disk.",
      "isasync": true,
      "name": "uploadVolume",
      "params": [
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk offering. This must be a custom sized offering since during uploadVolume volume size is unknown.",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,updateDiskOffering,listDiskOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone the volume is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the URL of where the volume is hosted. Possible URL include http:// and https://",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Image store uuid",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the volume. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "Upload volume for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the checksum value of this volume. The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the volume",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,destroyVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
      "response": [
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {},
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists security groups",
      "isasync": false,
      "name": "listSecurityGroups",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists security groups by name",
          "length": 255,
          "name": "securitygroupname",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list the security group by the id provided",
          "length": 255,
          "name": "id",
          "related": "createSecurityGroup,listSecurityGroups,updateSecurityGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists security groups by virtual machine id",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createSecurityGroup,updateSecurityGroup",
      "response": [
        {
          "description": "the list of egress rules associated with the security group",
          "name": "egressrule",
          "response": [
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the description of the security group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of virtualmachine ids associated with this securitygroup",
          "name": "virtualmachineids",
          "type": "set"
        },
        {
          "description": "the domain name of the security group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the list of ingress rules associated with the security group",
          "name": "ingressrule",
          "response": [
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the security group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the security group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain ID of the security group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account owning the security group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the number of virtualmachines associated with this securitygroup",
          "name": "virtualmachinecount",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Configures a host's out-of-band management interface",
      "isasync": false,
      "name": "configureOutOfBandManagement",
      "params": [
        {
          "description": "the host management interface password",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "the host management interface user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the host management interface driver, for example: ipmitool",
          "length": 255,
          "name": "driver",
          "required": true,
          "type": "string"
        },
        {
          "description": "the host management interface IP address",
          "length": 255,
          "name": "address",
          "required": true,
          "type": "string"
        },
        {
          "description": "the host management interface port",
          "length": 255,
          "name": "port",
          "required": true,
          "type": "string"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForHost,enableOutOfBandManagementForCluster,disableOutOfBandManagementForCluster,enableOutOfBandManagementForZone,disableOutOfBandManagementForZone,issueOutOfBandManagementPowerAction,changeOutOfBandManagementPassword",
      "response": [
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Lists storage tags",
      "isasync": false,
      "name": "listStorageTags",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the pool ID of the storage tag",
          "name": "poolid",
          "type": "long"
        },
        {},
        {
          "description": "the name of the storage tag",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the storage tag",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Delete Service Package",
      "isasync": false,
      "name": "deleteServicePackageOffering",
      "params": [
        {
          "description": "the service offering ID",
          "length": 255,
          "name": "id",
          "related": "registerNetscalerServicePackage,listRegisteredServicePackages",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "List template visibility and all accounts that have permissions to view this template.",
      "isasync": false,
      "name": "listTemplatePermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsoPermissions,listTemplatePermissions,listTemplatePermissions,listIsoPermissions",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsoPermissions,listTemplatePermissions,listIsoPermissions",
      "response": [
        {},
        {},
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of projects the template is available for",
          "name": "projectids",
          "type": "list"
        },
        {
          "description": "the list of accounts the template is available for",
          "name": "account",
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists annotations.",
      "isasync": false,
      "name": "listAnnotations",
      "params": [
        {
          "description": "optional: the id of the user of the annotation",
          "length": 255,
          "name": "userid",
          "required": false,
          "since": "4.16.0",
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "possible values are \"self\" and \"all\". * self : annotations that have been created by the calling user. * all : all the annotations the calling user can access",
          "length": 255,
          "name": "annotationfilter",
          "required": false,
          "since": "4.16.0",
          "type": "string"
        },
        {
          "description": "the entity type",
          "length": 255,
          "name": "entitytype",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of the annotation",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the entity for which to show annotations",
          "length": 255,
          "name": "entityid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addAnnotation,removeAnnotation,updateAnnotationVisibility",
      "response": [
        {
          "description": "the removal timestamp for this annotation",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the contents of the annotation",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the (uu)id of the entity to which this annotation pertains",
          "name": "entityid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the entity to which this annotation pertains",
          "name": "entityname",
          "type": "string"
        },
        {
          "description": "The (uu)id of the user that entered the annotation",
          "name": "userid",
          "type": "string"
        },
        {},
        {
          "description": "The username of the user that entered the annotation",
          "name": "username",
          "type": "string"
        },
        {
          "description": "True if the annotation is available for admins only",
          "name": "adminsonly",
          "type": "boolean"
        },
        {
          "description": "the creation timestamp for this annotation",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the type of the annotated entity",
          "name": "entitytype",
          "type": "string"
        },
        {
          "description": "the (uu)id of the annotation",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "Destroys a system virtual machine.",
      "isasync": true,
      "name": "destroySystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "destroySystemVm,listSystemVms,migrateSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm,scaleSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,migrateSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm,scaleSystemVm",
      "response": [
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {},
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds Swift.",
      "isasync": false,
      "name": "addSwift",
      "params": [
        {
          "description": "the URL for swift",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": " key for the user for swift",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "the account for swift",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username for swift",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,createSecondaryStagingStore,listSecondaryStagingStores,updateCloudToUseObjectStore",
      "response": [
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Archive one or more events.",
      "isasync": false,
      "name": "archiveEvents",
      "params": [
        {
          "description": "start date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "archive by event type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the events",
          "length": 255,
          "name": "ids",
          "related": "listEvents",
          "required": false,
          "type": "list"
        },
        {
          "description": "end date range to archive events (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Deletes a secondary staging store .",
      "isasync": false,
      "name": "deleteSecondaryStagingStore",
      "params": [
        {
          "description": "the staging store ID",
          "length": 255,
          "name": "id",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,createSecondaryStagingStore,listSecondaryStagingStores,updateCloudToUseObjectStore",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "List registered userdatas",
      "isasync": false,
      "name": "listUserData",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Userdata name to look for",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Userdata",
          "length": 255,
          "name": "id",
          "related": "listUserData",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain id of the userdata owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "params",
          "type": "string"
        },
        {},
        {
          "description": "the owner id of the userdata",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the owner of the userdata",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the userdata owner",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "base64 encoded userdata content",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Name of the userdata",
          "name": "name",
          "type": "string"
        },
        {
          "description": "ID of the ssh keypair",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        }
      ],
      "since": "4.18"
    },
    {
      "description": "Updates an internal load balancer",
      "isasync": true,
      "name": "updateLoadBalancer",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the load balancer",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createLoadBalancer,listLoadBalancers",
      "response": [
        {
          "description": "the domain of the Load Balancer",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the description of the Load Balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the Load Balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain ID of the Load Balancer",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account of the Load Balancer",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project id of the Load Balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of instances associated with the Load Balancer",
          "name": "loadbalancerinstance",
          "response": [
            {
              "description": "the name of the instance",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the state of the instance",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the ip address of the instance",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the instance ID",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Load Balancer source ip network id",
          "name": "sourceipaddressnetworkid",
          "type": "string"
        },
        {
          "description": "the Load Balancer ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Load Balancer source ip",
          "name": "sourceipaddress",
          "type": "string"
        },
        {
          "description": "the name of the Load Balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Load Balancer network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the Load Balancer",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {},
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the list of rules associated with the Load Balancer",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "instance port of the load balancer rule",
              "name": "instanceport",
              "type": "integer"
            },
            {
              "description": "source port of the load balancer rule",
              "name": "sourceport",
              "type": "integer"
            },
            {
              "description": "the state of the load balancer rule",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Scale the service offering for a system vm (console proxy or secondary storage). The system vm must be in a \"Stopped\" state for this command to take effect.",
      "isasync": true,
      "name": "scaleSystemVm",
      "params": [
        {
          "description": "the service offering ID to apply to the system vm",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name value pairs of custom parameters for cpuspeed, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "The ID of the system vm",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,migrateSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm,scaleSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listSystemVms,migrateSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm",
      "response": [
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {},
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {},
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists snapshot policies.",
      "isasync": false,
      "name": "listSnapshotPolicies",
      "params": [
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,destroyVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the snapshot policy",
          "length": 255,
          "name": "id",
          "related": "createSnapshotPolicy,updateSnapshotPolicy,listSnapshotPolicies",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createSnapshotPolicy,updateSnapshotPolicy",
      "response": [
        {
          "description": "the time zone of the snapshot policy",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "maximum number of snapshots retained",
          "name": "maxsnaps",
          "type": "int"
        },
        {
          "description": "the interval type of the snapshot policy",
          "name": "intervaltype",
          "type": "short"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "time the snapshot is scheduled to be taken.",
          "name": "schedule",
          "type": "string"
        },
        {
          "description": "is this policy for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "the ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "the ID of the snapshot policy",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Update site to site vpn customer gateway",
      "isasync": true,
      "name": "updateVpnCustomerGateway",
      "params": [
        {
          "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "esplifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "ESP policy of the customer gateway",
          "length": 255,
          "name": "esppolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway. Cannot contain newline or double quotes.",
          "length": 255,
          "name": "ipsecpsk",
          "required": true,
          "type": "string"
        },
        {
          "description": "For IKEv2, whether to split multiple right subnet cidrs into multiple connection statements.",
          "length": 255,
          "name": "splitconnections",
          "required": false,
          "since": "4.15.1",
          "type": "boolean"
        },
        {
          "description": "guest cidr of the customer gateway. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": true,
          "type": "string"
        },
        {
          "description": "Force encapsulation for Nat Traversal",
          "length": 255,
          "name": "forceencap",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnCustomerGateway,listVpnCustomerGateways,updateVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account associated with the gateway. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "ikelifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "If DPD is enabled for VPN connection",
          "length": 255,
          "name": "dpd",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "IKE policy of the customer gateway",
          "length": 255,
          "name": "ikepolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2.Connections marked with 'ike' will use 'ikev2' when initiating, but accept any protocol version when responding. Defaults to ike",
          "length": 255,
          "name": "ikeversion",
          "required": false,
          "since": "4.15.1",
          "type": "string"
        },
        {
          "description": "name of this customer gateway",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVpnCustomerGateway,listVpnCustomerGateways",
      "response": [
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "For IKEv2, whether to split multiple right subnet cidrs into multiple connection statements.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {},
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        }
      ]
    },
    {
      "description": "apply Tungsten-Fabric tag",
      "isasync": true,
      "name": "applyTungstenFabricTag",
      "params": [
        {
          "description": "the uuid of networks",
          "length": 255,
          "name": "networkuuid",
          "required": false,
          "type": "list"
        },
        {
          "description": "the uuid of nics",
          "length": 255,
          "name": "nicuuid",
          "required": false,
          "type": "list"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of vms",
          "length": 255,
          "name": "vmuuid",
          "required": false,
          "type": "list"
        },
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric tag",
          "length": 255,
          "name": "taguuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createTungstenFabricTag,removeTungstenFabricTag",
      "response": [
        {
          "description": "list Tungsten-Fabric network",
          "name": "network",
          "type": "list"
        },
        {
          "description": "list Tungsten-Fabric policy",
          "name": "policy",
          "type": "list"
        },
        {},
        {
          "description": "Tungsten-Fabric tag name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric nic",
          "name": "nic",
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "list Tungsten-Fabric vm",
          "name": "vm",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "This deprecated function used to locks an account. Look for the API DisableAccount instead",
      "isasync": false,
      "name": "lockAccount",
      "params": [
        {
          "description": "Locks the specified account.",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        },
        {
          "description": "Locks the specified account on this domain.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
      "response": [
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {},
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {},
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a router.",
      "isasync": true,
      "name": "stopRouter",
      "params": [
        {
          "description": "Force stop the VM. The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,rebootRouter,startRouter,stopRouter,changeServiceForRouter,stopInternalLoadBalancerVM,startInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter,listRouters,rebootRouter,startRouter,changeServiceForRouter,stopInternalLoadBalancerVM,startInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
      "response": [
        {},
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {},
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists clusters.",
      "isasync": false,
      "name": "listClusters",
      "params": [
        {
          "description": "lists clusters by hypervisor type",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists clusters by the cluster ID",
          "length": 255,
          "name": "id",
          "related": "addCluster,listClusters,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists clusters by cluster type",
          "length": 255,
          "name": "clustertype",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the capacity of the clusters",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "length": 255,
          "name": "managedstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by allocation state",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists clusters by the cluster name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by Pod ID",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addCluster,updateCluster",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        },
        {
          "description": "Ovm3 VIP to use for pooling and/or clustering",
          "name": "ovm3vip",
          "type": "string"
        },
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        },
        {},
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {},
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Deletes project invitation",
      "isasync": true,
      "name": "deleteProjectInvitation",
      "params": [
        {
          "description": "id of the invitation",
          "length": 255,
          "name": "id",
          "related": "listProjectInvitations",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists project invitations and provides detailed information for listed invitations",
      "isasync": false,
      "name": "listProjectInvitations",
      "params": [
        {
          "description": "list invitation by user ID",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list invitations by id",
          "length": 255,
          "name": "id",
          "related": "listProjectInvitations",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list invitations by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true, list only active invitations - having Pending state and ones that are not timed out yet",
          "length": 255,
          "name": "activeonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by project id",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the User ID",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the invitation state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account name of the project's owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the invitation",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the email the invitation was sent to",
          "name": "email",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "create Tungsten-Fabric firewall policy",
      "isasync": true,
      "name": "createTungstenFabricFirewallPolicy",
      "params": [
        {
          "description": "Tungsten-Fabric firewall policy name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the sequence of Tungsten-Fabric firewall policy",
          "length": 255,
          "name": "sequence",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listTungstenFabricFirewallPolicy",
      "response": [
        {
          "description": "list Tungsten-Fabric firewall rule",
          "name": "firewallrule",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall policy name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric firewall policy uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists all egress firewall rules for network ID.",
      "isasync": false,
      "name": "listEgressFirewallRules",
      "params": [
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the network ID for the egress firewall services",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of IP address of the firewall services",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createFirewallRule,listFirewallRules,updateEgressFirewallRule",
      "response": [
        {},
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic to. Multiple entries are separated by a single comma character (,).",
          "name": "destcidrlist",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the traffic type for the firewall rule",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {},
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a region",
      "isasync": false,
      "name": "updateRegion",
      "params": [
        {
          "description": "Id of region to update",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "integer"
        },
        {
          "description": "updates region with this name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "updates region with this end point",
          "length": 255,
          "name": "endpoint",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addRegion,listRegions",
      "response": [
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "true if GSLB service is enabled in the region, false otherwise",
          "name": "gslbserviceenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "portableipserviceenabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Deletes traffic type of a physical network",
      "isasync": true,
      "name": "deleteTrafficType",
      "params": [
        {
          "description": "traffic type id",
          "length": 255,
          "name": "id",
          "related": "addTrafficType,updateTrafficType",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists clusters metrics",
      "isasync": false,
      "name": "listClustersMetrics",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists clusters by allocation state",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by the cluster name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the capacity of the clusters",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "lists clusters by the cluster ID",
          "length": 255,
          "name": "id",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "length": 255,
          "name": "managedstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by hypervisor type",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists clusters by Pod ID",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists clusters by cluster type",
          "length": 255,
          "name": "clustertype",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "memory allocated disable threshold exceeded",
          "name": "memoryallocateddisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the total cpu capacity in Ghz",
          "name": "cputotal",
          "type": "string"
        },
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "state of the cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "memory usage disable threshold exceeded",
          "name": "memorydisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the total cpu capacity in GiB",
          "name": "memorytotal",
          "type": "string"
        },
        {
          "description": "the total cpu used in GiB",
          "name": "memoryused",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "cpu usage disable threshold exceeded",
          "name": "cpudisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "cpu usage notification threshold exceeded",
          "name": "cputhreshold",
          "type": "boolean"
        },
        {
          "description": "memory allocated notification threshold exceeded",
          "name": "memoryallocatedthreshold",
          "type": "boolean"
        },
        {
          "description": "memory usage notification threshold exceeded",
          "name": "memorythreshold",
          "type": "boolean"
        },
        {
          "description": "the total cpu allocated in GiB",
          "name": "memoryallocated",
          "type": "string"
        },
        {
          "description": "the maximum memory deviation",
          "name": "memorymaxdeviation",
          "type": "string"
        },
        {
          "description": "the total cpu used in Ghz",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "running / total hosts in the cluster",
          "name": "hosts",
          "type": "string"
        },
        {
          "description": "Ovm3 VIP to use for pooling and/or clustering",
          "name": "ovm3vip",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "cpu allocated notification threshold exceeded",
          "name": "cpuallocatedthreshold",
          "type": "boolean"
        },
        {
          "description": "cpu allocated disable threshold exceeded",
          "name": "cpuallocateddisablethreshold",
          "type": "boolean"
        },
        {},
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the maximum cpu deviation",
          "name": "cpumaxdeviation",
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        },
        {
          "description": "the total cpu allocated in Ghz",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        }
      ],
      "since": "4.9.3"
    },
    {
      "description": "Lists a project's project role permissions",
      "isasync": false,
      "name": "listProjectRolePermissions",
      "params": [
        {
          "description": "ID of the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the project role",
          "length": 255,
          "name": "projectroleid",
          "related": "createProjectRole,listProjectRoles,updateProjectRole",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createProjectRolePermission",
      "response": [
        {
          "description": "the permission type of the api name or wildcard rule, allow/deny",
          "name": "permission",
          "type": "string"
        },
        {
          "description": "the ID of the project role to which the role permission belongs",
          "name": "projectroleid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the description of the role permission",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the project",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the project role to which the role permission belongs",
          "name": "projectrolename",
          "type": "string"
        },
        {
          "description": "the ID of the project role permission",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the api name or wildcard rule",
          "name": "rule",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Lists all LDAP configurations",
      "isasync": false,
      "name": "listLdapConfigurations",
      "params": [
        {
          "description": "linked domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to true,  and no domainid specified, list all LDAP configurations irrespective of the linked domain",
          "length": 255,
          "name": "listall",
          "required": false,
          "since": "4.13.2",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Hostname",
          "length": 255,
          "name": "hostname",
          "required": false,
          "type": "string"
        },
        {
          "description": "Port",
          "length": 255,
          "name": "port",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addLdapConfiguration,deleteLdapConfiguration",
      "response": [
        {
          "description": "linked domain",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "port teh ldap server is running on",
          "name": "port",
          "type": "int"
        },
        {
          "description": "name of the host running the ldap server",
          "name": "hostname",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists secondary staging stores.",
      "isasync": false,
      "name": "listSecondaryStagingStores",
      "params": [
        {
          "description": "the name of the staging store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the staging store provider",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Zone ID for the staging store",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the staging store",
          "length": 255,
          "name": "id",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,createSecondaryStagingStore,listSecondaryStagingStores,updateCloudToUseObjectStore",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the staging store protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,createSecondaryStagingStore,updateCloudToUseObjectStore",
      "response": [
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Creates a l2tp/ipsec remote access vpn",
      "isasync": true,
      "name": "createRemoteAccessVpn",
      "params": [
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. Has value true by default",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional account for the VPN. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the range of ip addresses to allocate to vpn clients. The first ip in the range will be taken by the vpn server",
          "length": 255,
          "name": "iprange",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the VPN. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listRemoteAccessVpns,updateRemoteAccessVpn",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "is vpn for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Starts a router.",
      "isasync": true,
      "name": "startRouter",
      "params": [
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,rebootRouter,startRouter,changeServiceForRouter,stopInternalLoadBalancerVM,startInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter,listRouters,rebootRouter,changeServiceForRouter,stopInternalLoadBalancerVM,startInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
      "response": [
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            }
          ],
          "type": "list"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "(This API is deprecated, use scaleVirtualMachine API)Changes the service offering for a virtual machine. The virtual machine must be in a \"Stopped\" state for this command to take effect.",
      "isasync": false,
      "name": "changeServiceForVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Verify OK to Shrink",
          "length": 255,
          "name": "shrinkok",
          "required": false,
          "since": "4.17",
          "type": "boolean"
        },
        {
          "description": "Flag for automatic migration of the root volume with new compute offering whenever migration is required to apply the offering",
          "length": 255,
          "name": "automigrate",
          "required": false,
          "since": "4.17",
          "type": "boolean"
        },
        {
          "description": "the service offering ID to apply to the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name value pairs of custom parameters for cpuspeed, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "New maximum number of IOPS for the custom disk offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "since": "4.17",
          "type": "long"
        },
        {
          "description": "New minimum number of IOPS for the custom disk offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "since": "4.17",
          "type": "long"
        }
      ],
      "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {},
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resets a configuration. The configuration will be set to default value for global setting, and removed from account_details or domain_details for Account/Domain settings",
      "isasync": false,
      "name": "resetConfiguration",
      "params": [
        {
          "description": "the ID of the Cluster to reset the parameter value for corresponding cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Zone to reset the parameter value for corresponding zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the configuration",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the Account to reset the parameter value for corresponding account",
          "length": 255,
          "name": "accountid",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Storage pool to reset the parameter value for corresponding storage pool",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Image Store to reset the parameter value for corresponding image store",
          "length": 255,
          "name": "imagestoreid",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,createSecondaryStagingStore,updateCloudToUseObjectStore",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Domain to reset the parameter value for corresponding domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listConfigurations,updateConfiguration",
      "response": [
        {},
        {
          "description": "the description of the configuration",
          "name": "description",
          "type": "string"
        },
        {
          "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "value",
          "type": "string"
        },
        {},
        {
          "description": "the component of the configuration",
          "name": "component",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the configuration",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the category of the configuration",
          "name": "category",
          "type": "string"
        },
        {
          "description": "the type of the configuration value",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the subgroup of the configuration",
          "name": "subgroup",
          "type": "string"
        },
        {
          "description": "the display text of the configuration",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "id",
          "type": "long"
        },
        {
          "description": "the group of the configuration",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the name of the parent configuration",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "the possible options of the configuration value",
          "name": "options",
          "type": "string"
        },
        {
          "description": "true if the configuration is dynamic",
          "name": "isdynamic",
          "type": "boolean"
        },
        {
          "description": "the default value of the configuration",
          "name": "defaultvalue",
          "type": "string"
        }
      ],
      "since": "4.16.0"
    },
    {
      "description": "Lists all available OS mappings for given hypervisor",
      "isasync": false,
      "name": "listGuestOsMapping",
      "params": [
        {
          "description": "list mapping by its UUID",
          "length": 255,
          "name": "id",
          "related": "listGuestOsMapping,addGuestOsMapping,updateGuestOsMapping",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Guest OS mapping by hypervisor version. Must be used with hypervisor parameter",
          "length": 255,
          "name": "hypervisorversion",
          "required": false,
          "type": "string"
        },
        {
          "description": "list Guest OS mapping by hypervisor",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "list mapping by Guest OS Type UUID",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes,addGuestOs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addGuestOsMapping,updateGuestOsMapping",
      "response": [
        {
          "description": "standard display name for the Guest OS",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "version of the hypervisor for mapping",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "is the mapping user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "hypervisor specific name for the Guest OS",
          "name": "osnameforhypervisor",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the Guest OS type",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the Guest OS mapping",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hypervisor",
          "name": "hypervisor",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "List all public, private, and privileged templates.",
      "isasync": false,
      "name": "listTemplates",
      "params": [
        {
          "description": "If set to true, list only unique templates across zones",
          "length": 255,
          "name": "showunique",
          "required": false,
          "since": "4.13.2",
          "type": "boolean"
        },
        {
          "description": "flag to display the resource image for the templates",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "list templates by zoneId",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list datadisk templates by parent template id",
          "length": 255,
          "name": "parenttemplateid",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
          "length": 255,
          "name": "templatefilter",
          "required": true,
          "type": "string"
        },
        {
          "description": "the template name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "show removed templates as well",
          "length": 255,
          "name": "showremoved",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the templates, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "since": "4.9",
          "type": "list"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,listTemplates,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "comma separated list of template details requested, value can be a list of [ all, min]",
          "length": 255,
          "name": "details",
          "required": false,
          "since": "4.15",
          "type": "list"
        }
      ],
      "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {},
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates an autoscale policy for a provision or deprovision action, the action is taken when the all the conditions evaluates to true for the specified duration. The policy is in effect once it is attached to a autscale vm group.",
      "isasync": true,
      "name": "createAutoScalePolicy",
      "params": [
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "length": 255,
          "name": "conditionids",
          "related": "createCondition,listConditions",
          "required": true,
          "type": "list"
        },
        {
          "description": "the cool down period in which the policy should not be evaluated after the action has been taken",
          "length": 255,
          "name": "quiettime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "length": 255,
          "name": "action",
          "required": true,
          "type": "string"
        },
        {
          "description": "the duration in which the conditions have to be true before action is taken",
          "length": 255,
          "name": "duration",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the name of the autoscale policy",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        }
      ],
      "related": "listAutoScalePolicies,updateAutoScalePolicy",
      "response": [
        {},
        {
          "description": "the project id autoscale policy",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "name": "quiettime",
          "type": "integer"
        },
        {
          "description": "the domain name of the autoscale policy",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "name": "conditions",
          "type": "list"
        },
        {
          "description": "the account owning the autoscale policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID of the autoscale policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the project name of the autoscale policy",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "name": "duration",
          "type": "integer"
        },
        {
          "description": "name of the autoscale policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the autoscale policy ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes stratosphere ssp server",
      "isasync": false,
      "name": "deleteStratosphereSsp",
      "params": [
        {
          "description": "the host ID of ssp server",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "create Tungsten-Fabric policy",
      "isasync": true,
      "name": "createTungstenFabricPolicy",
      "params": [
        {
          "description": "Tungsten-Fabric policy name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listTungstenFabricPolicy,removeTungstenFabricPolicyRule,applyTungstenFabricPolicy,removeTungstenFabricPolicy",
      "response": [
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Lists Usage Server metrics",
      "isasync": false,
      "name": "listUsageServerMetrics",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the last time a usage job successfully completed",
          "name": "lastsuccessfuljob",
          "type": "date"
        },
        {},
        {
          "description": "the time these statistics were collected",
          "name": "collectiontime",
          "type": "date"
        },
        {
          "description": "the state of the usage server",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the name of the active usage server",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the last time this Usage Server checked for jobs",
          "name": "lastheartbeat",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ],
      "since": "4.17.0"
    },
    {
      "description": "Lists physical networks",
      "isasync": false,
      "name": "listPhysicalNetworks",
      "params": [
        {
          "description": "search by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the physical network",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list physical network by id",
          "length": 255,
          "name": "id",
          "related": "createPhysicalNetwork,listPhysicalNetworks,updatePhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createPhysicalNetwork,updatePhysicalNetwork",
      "response": [
        {
          "description": "the vlan of the physical network",
          "name": "vlan",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Broadcast domain range of the physical network",
          "name": "broadcastdomainrange",
          "type": "string"
        },
        {
          "description": "comma separated tag",
          "name": "tags",
          "type": "string"
        },
        {},
        {
          "description": "state of the physical network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "zone id of the physical network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the uuid of the physical network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain id of the physical network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the physical network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "isolation methods",
          "name": "isolationmethods",
          "type": "string"
        },
        {
          "description": "the speed of the physical network",
          "name": "networkspeed",
          "type": "string"
        },
        {
          "description": "zone name of the physical network",
          "name": "zonename",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Enables HA for a zone",
      "isasync": true,
      "name": "enableHAForZone",
      "params": [
        {
          "description": "ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "4.11"
    },
    {
      "description": "Lists all firewall rules for an IP address.",
      "isasync": false,
      "name": "listFirewallRules",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of IP address of the firewall services",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list firewall rules for certain network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createFirewallRule,updateEgressFirewallRule",
      "response": [
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {},
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic to. Multiple entries are separated by a single comma character (,).",
          "name": "destcidrlist",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the traffic type for the firewall rule",
          "name": "traffictype",
          "type": "string"
        },
        {},
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Cleanups VM reservations in the database.",
      "isasync": true,
      "name": "cleanVMReservations",
      "params": [],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": " delete a Brocade VCS Switch",
      "isasync": true,
      "name": "deleteBrocadeVcsDevice",
      "params": [
        {
          "description": "Brocade Switch ID",
          "length": 255,
          "name": "vcsdeviceid",
          "related": "addBrocadeVcsDevice,listBrocadeVcsDevices",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Extracts an ISO",
      "isasync": true,
      "name": "extractIso",
      "params": [
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        },
        {
          "description": "the URL to which the ISO would be extracted",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone where the ISO is originally located",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "extractTemplate,extractVolume",
      "response": [
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        }
      ]
    },
    {
      "description": "create secondary staging store.",
      "isasync": false,
      "name": "createSecondaryStagingStore",
      "params": [
        {
          "description": "the staging store provider name",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL for the staging store",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Zone ID for the staging store",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the details for the staging store",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the scope of the staging store: zone only for now",
          "length": 255,
          "name": "scope",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        }
      ]
    },
    {
      "description": "Creates an affinity/anti-affinity group",
      "isasync": true,
      "name": "createAffinityGroup",
      "params": [
        {
          "description": "Type of the affinity group from the available affinity/anti-affinity group types",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "create affinity group for project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "optional description of the affinity group",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the affinity group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an account for the affinity group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "domainId of the account owning the affinity group",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project ID of the affinity group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the affinity group",
          "name": "name",
          "type": "string"
        },
        {},
        {},
        {
          "description": "virtual machine IDs associated with this affinity group",
          "name": "virtualmachineIds",
          "type": "list"
        },
        {
          "description": "the description of the affinity group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain name of the affinity group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the affinity group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the affinity group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the account owning the affinity group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project name of the affinity group",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Remove a VMware datacenter from a zone.",
      "isasync": false,
      "name": "removeVmwareDc",
      "params": [
        {
          "description": "The id of Zone from which VMware datacenter has to be removed.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Lists all available Internal Load Balancer elements.",
      "isasync": false,
      "name": "listInternalLoadBalancerElements",
      "params": [
        {
          "description": "list internal load balancer elements by id",
          "length": 255,
          "name": "id",
          "related": "createInternalLoadBalancerElement,configureInternalLoadBalancerElement,listInternalLoadBalancerElements",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list internal load balancer elements by network service provider id",
          "length": 255,
          "name": "nspid",
          "related": "addNetworkServiceProvider,listNetworkServiceProviders,updateNetworkServiceProvider,listTrafficTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list internal load balancer elements by enabled state",
          "length": 255,
          "name": "enabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createInternalLoadBalancerElement,configureInternalLoadBalancerElement",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Enabled/Disabled the element",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the id of the internal load balancer element",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network service provider id of the element",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {}
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates load balancer health check policy",
      "isasync": true,
      "name": "updateLBHealthCheckPolicy",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the policy to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "ID of load balancer health check policy",
          "length": 255,
          "name": "id",
          "related": "createLBHealthCheckPolicy,listLBHealthCheckPolicies,updateLBHealthCheckPolicy",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createLBHealthCheckPolicy,listLBHealthCheckPolicies",
      "response": [
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            }
          ],
          "type": "list"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "remove Tungsten-Fabric policy",
      "isasync": true,
      "name": "removeTungstenFabricPolicyRule",
      "params": [
        {
          "description": "the Uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the Uuid of Tungsten-Fabric policy rule",
          "length": 255,
          "name": "ruleuuid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listTungstenFabricPolicy,applyTungstenFabricPolicy,removeTungstenFabricPolicy",
      "response": [
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Create Tungsten-Fabric provider in cloudstack",
      "isasync": false,
      "name": "createTungstenFabricProvider",
      "params": [
        {
          "description": "Tungsten-Fabric provider name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider gateway",
          "length": 255,
          "name": "tungstengateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider introspect port",
          "length": 255,
          "name": "tungstenproviderintrospectport",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider vrouter port",
          "length": 255,
          "name": "tungstenprovidervrouterport",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider hostname",
          "length": 255,
          "name": "tungstenproviderhostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric provider port",
          "length": 255,
          "name": "tungstenproviderport",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listTungstenFabricProviders",
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider introspect port",
          "name": "tungstenproviderintrospectport",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider vrouter port",
          "name": "tungstenprovidervrouterport",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric provider uuid",
          "name": "tungstenprovideruuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider port",
          "name": "tungstenproviderport",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider hostname",
          "name": "tungstenproviderhostname",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider gateway",
          "name": "tungstengateway",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Reboots a virtual machine.",
      "isasync": true,
      "name": "rebootVirtualMachine",
      "params": [
        {
          "description": "Boot into hardware setup menu or not",
          "length": 255,
          "name": "bootintosetup",
          "required": false,
          "since": "4.15.0.0",
          "type": "boolean"
        },
        {
          "description": "Force reboot the VM (VM is Stopped and then Started)",
          "length": 255,
          "name": "forced",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,rebootVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {},
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {},
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            }
          ],
          "type": "set"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        }
      ]
    },
    {
      "description": "Enables HA cluster-wide",
      "isasync": true,
      "name": "enableHAForCluster",
      "params": [
        {
          "description": "ID of the cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "4.11"
    },
    {
      "description": "Creates a load balancer rule",
      "isasync": true,
      "name": "createLoadBalancerRule",
      "params": [
        {
          "description": "zone where the load balancer is going to be created. This parameter is required when LB service provider is ElasticLoadBalancerVm",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": true,
          "type": "string"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. If not specified 1) defaulted to false when LB rule is being created for VPC guest network 2) in all other cases defaulted to true",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The guest network this rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The protocol for the LB such as tcp, udp or tcp-proxy.",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,). By default, all CIDRs are allowed.",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "since": "4.18.0.0",
          "type": "list"
        },
        {
          "description": "the private port of the private IP address/virtual machine where the network traffic will be load balanced to",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the account associated with the load balancer. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "public IP address ID from where the network traffic will be load balanced from",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the load balancer",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the public port from where the network traffic will be load balanced from",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listLoadBalancerRules,updateLoadBalancerRule",
      "response": [
        {
          "description": "the protocol of the loadbalanacer rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the zone the load balancer rule belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {},
        {
          "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "list Tungsten-Fabric logical router",
      "isasync": false,
      "name": "listTungstenFabricLogicalRouter",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric logical router",
          "length": 255,
          "name": "logicalrouteruuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric network",
          "length": 255,
          "name": "networkuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createTungstenFabricLogicalRouter,addTungstenFabricNetworkGatewayToLogicalRouter,removeTungstenFabricNetworkGatewayFromLogicalRouter",
      "response": [
        {
          "description": "Tungsten-Fabric logical router name",
          "name": "name",
          "type": "string"
        },
        {},
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric logical router uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Import vSphere storage policies",
      "isasync": false,
      "name": "importVsphereStoragePolicies",
      "params": [
        {
          "description": "ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listVsphereStoragePolicies",
      "response": [
        {
          "description": "the name of the Storage Policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the identifier of the Storage Policy in vSphere DataCenter",
          "name": "policyid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the Zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the description of the Storage Policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the Storage Policy",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a guest OS name to hypervisor OS name mapping",
      "isasync": true,
      "name": "addGuestOsMapping",
      "params": [
        {
          "description": "Display Name of Guest OS standard type. Either Display Name or UUID must be passed",
          "length": 255,
          "name": "osdisplayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "OS name specific to the hypervisor",
          "length": 255,
          "name": "osnameforhypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of Guest OS type. Either the UUID or Display Name must be passed",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes,addGuestOs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Hypervisor type. One of : XenServer, KVM, VMWare",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "Hypervisor version to create the mapping for. Use 'default' for default versions",
          "length": 255,
          "name": "hypervisorversion",
          "required": true,
          "type": "string"
        }
      ],
      "related": "updateGuestOsMapping",
      "response": [
        {
          "description": "is the mapping user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS type",
          "name": "ostypeid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the hypervisor",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the Guest OS mapping",
          "name": "id",
          "type": "string"
        },
        {
          "description": "hypervisor specific name for the Guest OS",
          "name": "osnameforhypervisor",
          "type": "string"
        },
        {
          "description": "standard display name for the Guest OS",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "version of the hypervisor for mapping",
          "name": "hypervisorversion",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Disables out-of-band management for a zone",
      "isasync": true,
      "name": "disableOutOfBandManagementForZone",
      "params": [
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForHost,enableOutOfBandManagementForCluster,disableOutOfBandManagementForCluster,enableOutOfBandManagementForZone,issueOutOfBandManagementPowerAction,changeOutOfBandManagementPassword",
      "response": [
        {},
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Updates a network offering.",
      "isasync": false,
      "name": "updateNetworkOffering",
      "params": [
        {
          "description": "update state for the network offering",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the network offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain(s) as comma separated string, public for public offerings",
          "length": 255,
          "name": "domainid",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true keepalive will be turned on in the loadbalancer. At the time of writing this has only an effect on haproxy; the mode http and httpclose options are unset in the haproxy conf file.",
          "length": 255,
          "name": "keepaliveenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the tags for the network offering.",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the network offering",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "maximum number of concurrent connections supported by the network offering",
          "length": 255,
          "name": "maxconnections",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the containing zone(s) as comma separated string, all for all zones offerings",
          "length": 4096,
          "name": "zoneid",
          "required": false,
          "since": "4.13",
          "type": "string"
        },
        {
          "description": "the availability of network offering. Default value is Required for Guest Virtual network offering; Optional for Guest Direct network offering",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the network offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of the network offering",
          "length": 255,
          "name": "id",
          "related": "createNetworkOffering,updateNetworkOffering,listNetworkOfferings",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createNetworkOffering,listNetworkOfferings",
      "response": [
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if network offering supports network that span multiple zones",
          "name": "supportsstrechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {},
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        },
        {
          "description": "true if network offering supports public access for guest networks",
          "name": "supportspublicaccess",
          "type": "boolean"
        },
        {
          "description": "the internet protocol of the network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "true if network offering can be used by Tungsten-Fabric networks only",
          "name": "fortungsten",
          "type": "boolean"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a system VM.",
      "isasync": true,
      "name": "stopSystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,migrateSystemVm,startSystemVm,stopSystemVm,changeServiceForSystemVm",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Force stop the VM.  The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listSystemVms,migrateSystemVm,startSystemVm,changeServiceForSystemVm",
      "response": [
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {},
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an egress firewall rule",
      "isasync": true,
      "name": "deleteEgressFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates a VPC",
      "isasync": true,
      "name": "updateVPC",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the vpc to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the name of the VPC",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "length": 255,
          "name": "id",
          "related": "createVPC,listVPCs,updateVPC,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "MTU to be configured on the network VR's public facing interfaces",
          "length": 255,
          "name": "publicmtu",
          "required": false,
          "since": "4.18.0",
          "type": "integer"
        }
      ],
      "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
      "response": [
        {
          "description": "MTU configured on the public interfaces of the VPC VR",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the first IPv4 DNS for the VPC",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "vpc offering name the VPC is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the VPC",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the VPC",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "type": "list"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if VPC is region level",
          "name": "regionlevelvpc",
          "type": "boolean"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is VPC uses distributed router for one hop forwarding and host based network ACL's",
          "name": "distributedvpcrouter",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the VPC",
          "name": "dns2",
          "type": "string"
        }
      ]
    },
    {
      "description": "Changes out-of-band management interface password on the host and updates the interface configuration in CloudStack if the operation succeeds, else reverts the old password",
      "isasync": true,
      "name": "changeOutOfBandManagementPassword",
      "params": [
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the new host management interface password of maximum length 16, if none is provided a random password would be used",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForHost,enableOutOfBandManagementForCluster,disableOutOfBandManagementForCluster,enableOutOfBandManagementForZone,issueOutOfBandManagementPowerAction",
      "response": [
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {}
      ],
      "since": "4.9.0"
    },
    {
      "description": "Lists all IPv6 firewall rules",
      "isasync": false,
      "name": "listIpv6FirewallRules",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list ipv6 firewall rules by network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list ipv6 firewall rules by traffic type - ingress or egress",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists ipv6 firewall rule with the specified ID",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,listIpv6FirewallRules,updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
      "response": [
        {},
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {},
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        }
      ]
    },
    {
      "description": "List resource detail(s)",
      "isasync": false,
      "name": "listResourceDetails",
      "params": [
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by resource id",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by key",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "if set to true, only details marked with display=true, are returned. False by default",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.3",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by key, value. Needs to be passed only along with key",
          "length": 255,
          "name": "value",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listTags",
      "response": [
        {
          "description": "customer associated with the tag",
          "name": "customer",
          "type": "string"
        },
        {
          "description": "id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "the domain associated with the tag",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "tag value",
          "name": "value",
          "type": "string"
        },
        {
          "description": "resource type",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account associated with the tag",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the tag",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name where tag belongs to",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project id the tag belongs to",
          "name": "projectid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "tag key name",
          "name": "key",
          "type": "string"
        }
      ],
      "since": "4.2"
    },
    {
      "description": "Attempts to live patch systemVMs - CPVM, SSVM ",
      "isasync": true,
      "name": "patchSystemVm",
      "params": [
        {
          "description": "If true, initiates copy of scripts and restart of the agent, even if the scripts version matches.To be used with ID parameter only",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "patches systemVM - CPVM/SSVM with the specified ID",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,migrateSystemVm,startSystemVm,changeServiceForSystemVm",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Creates a network offering.",
      "isasync": false,
      "name": "createNetworkOffering",
      "params": [
        {
          "description": "desired service capabilities as part of network offering",
          "length": 255,
          "name": "servicecapabilitylist",
          "required": false,
          "type": "map"
        },
        {
          "description": "provider to service mapping. If not specified, the provider for the service will be mapped to the default provider on the physical network",
          "length": 255,
          "name": "serviceproviderlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "true if network offering is meant to be used for VPC, false otherwise.",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "maximum number of concurrent connections supported by the network offering",
          "length": 255,
          "name": "maxconnections",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the service offering ID used by virtual router provider",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "set to true if the offering is to be enabled during creation. Default is false",
          "length": 255,
          "name": "enable",
          "required": false,
          "since": "4.16",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports specifying ip ranges; defaulted to false if not specified",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "data transfer rate in megabits per second allowed",
          "length": 255,
          "name": "networkrate",
          "required": false,
          "type": "integer"
        },
        {
          "description": "services supported by the network offering",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "The internet protocol of network offering. Options are ipv4 and dualstack. Default is ipv4. dualstack will create a network offering that supports both IPv4 and IPv6",
          "length": 255,
          "name": "internetprotocol",
          "required": false,
          "since": "4.17.0",
          "type": "string"
        },
        {
          "description": "the display text of the network offering",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "the traffic type for the network offering. Supported type in current release is GUEST only",
          "length": 255,
          "name": "traffictype",
          "required": true,
          "type": "string"
        },
        {
          "description": "guest type of the network offering: Shared or Isolated",
          "length": 255,
          "name": "guestiptype",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if network offering is meant to be used for Tungsten-Fabric, false otherwise.",
          "length": 255,
          "name": "fortungsten",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the containing zone(s), null for public offerings",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "since": "4.13",
          "type": "list"
        },
        {
          "description": "true if the network offering is IP conserve mode enabled",
          "length": 255,
          "name": "conservemode",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if network offering supports vlans",
          "length": 255,
          "name": "specifyvlan",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the containing domain(s), null for public offerings",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "list"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "length": 255,
          "name": "egressdefaultpolicy",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if network offering supports persistent networks; defaulted to false if not specified",
          "length": 255,
          "name": "ispersistent",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Network offering details in key/value pairs. Supported keys are internallbprovider/publiclbprovider with service provider as a value, and promiscuousmode/macaddresschanges/forgedtransmits with true/false as value to accept/reject the security settings if available for a nic/portgroup",
          "length": 255,
          "name": "details",
          "required": false,
          "since": "4.2.0",
          "type": "map"
        },
        {
          "description": "the availability of network offering. Default value is Optional",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the network offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the tags for the network offering.",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true keepalive will be turned on in the loadbalancer. At the time of writing this has only an effect on haproxy; the mode http and httpclose options are unset in the haproxy conf file.",
          "length": 255,
          "name": "keepaliveenabled",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listNetworkOfferings",
      "response": [
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the internet protocol of the network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports public access for guest networks",
          "name": "supportspublicaccess",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports network that span multiple zones",
          "name": "supportsstrechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "true if network offering can be used by Tungsten-Fabric networks only",
          "name": "fortungsten",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "Dedicate an existing cluster",
      "isasync": true,
      "name": "dedicateCluster",
      "params": [
        {
          "description": "the ID of the Cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listDedicatedClusters",
      "response": [
        {
          "description": "the domain ID of the cluster",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the cluster",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the cluster",
          "name": "affinitygroupid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the Account ID of the cluster",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the cluster",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates an IP forwarding rule",
      "isasync": true,
      "name": "createIpForwardingRule",
      "params": [
        {
          "description": "the public IP address ID of the forwarding rule, already associated via associateIp",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the start port for the rule",
          "length": 255,
          "name": "startport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the end port for the rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the CIDR list to forward traffic from. Multiple entries must be separated by a single comma character (,). This parameter is deprecated. Do not use.",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. Has value true by default",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
      "response": [
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists volume metrics",
      "isasync": false,
      "name": "listVolumesMetrics",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list volumes by disk offering",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,updateDiskOffering,listDiskOfferings",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "state of the volume. Possible values are: Ready, Allocated, Destroy, Expunging, Expunged.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the type of disk volume",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,destroyVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the pod id the disk volume belongs to",
          "length": 255,
          "name": "podid",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVmNicIp,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list volumes on specified host",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list system VMs; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "listsystemvms",
          "required": false,
          "since": "4.18",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the volumes, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,destroyVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": false,
          "since": "4.9",
          "type": "list"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the cluster id the disk volume belongs to",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the storage pool, available to ROOT admin only",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "since": "4.3",
          "type": "string"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {},
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "disk size in GiB",
          "name": "sizegb",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the total disk iops",
          "name": "diskiopstotal",
          "type": "long"
        },
        {},
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        }
      ],
      "since": "4.9.3"
    },
    {
      "description": "Lists the network Interfaces of elastistor",
      "isasync": false,
      "name": "listElastistorInterface",
      "params": [
        {
          "description": "controller id",
          "length": 255,
          "name": "controllerid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listElastistorVolume",
      "response": [
        {},
        {
          "description": "deduplication",
          "name": "deduplication",
          "type": "string"
        },
        {
          "description": "the id of the volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "syncronization",
          "name": "sync",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "compression",
          "name": "compression",
          "type": "string"
        },
        {
          "description": "graceallowed",
          "name": "graceallowed",
          "type": "string"
        },
        {
          "description": "the name of the volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Lists all possible details and their options for a resource type such as a VM or a template",
      "isasync": false,
      "name": "listDetailOptions",
      "params": [
        {
          "description": "the UUID of the resource (optional)",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the resource type such as UserVm, Template etc.",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Map of all possible details and their possible list of values",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {}
      ],
      "since": "4.13"
    },
    {
      "description": "Lists SSL certificates",
      "isasync": false,
      "name": "listSslCerts",
      "params": [
        {
          "description": "Load balancer rule ID",
          "length": 255,
          "name": "lbruleid",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Project that owns the SSL certificate",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "ID of SSL certificate",
          "length": 255,
          "name": "certid",
          "related": "uploadSslCert,listSslCerts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Account ID",
          "length": 255,
          "name": "accountid",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "uploadSslCert",
      "response": [
        {
          "description": "certificate chain",
          "name": "certchain",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "SSL certificate ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "account for the certificate",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the certificate",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "certificate",
          "name": "certificate",
          "type": "string"
        },
        {
          "description": "List of loabalancers this certificate is bound to",
          "name": "loadbalancerrulelist",
          "type": "list"
        },
        {
          "description": "the project name of the certificate",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "certificate fingerprint",
          "name": "fingerprint",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "List private gateways",
      "isasync": false,
      "name": "listPrivateGateways",
      "params": [
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list gateways by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list private gateway by id",
          "length": 255,
          "name": "id",
          "related": "createPrivateGateway,listPrivateGateways,createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list gateways by vlan",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list gateways by vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list gateways by ip address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createPrivateGateway,createPrivateGateway",
      "response": [
        {
          "description": "ACL name set for private gateway",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "zone id of the private gateway",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "VPC id the private gateway belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "State of the gateway, can be Creating, Ready, Deleting",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account associated with the private gateway",
          "name": "account",
          "type": "string"
        },
        {
          "description": "ACL Id set for private gateway",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the private gateway",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain associated with the private gateway",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the zone the private gateway belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the private gateway's ip address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project name of the private gateway",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Source Nat enable status",
          "name": "sourcenatsupported",
          "type": "boolean"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the private gateway's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "VPC name the private gateway belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the network implementation uri for the private gateway",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the id of the private gateway",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the private gateway",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the gateway",
          "name": "gateway",
          "type": "string"
        }
      ]
    },
    {
      "description": "Update the default Ip of a VM Nic",
      "isasync": true,
      "name": "updateVmNicIp",
      "params": [
        {
          "description": "the ID of the nic to which you want to assign private IP",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Secondary IP Address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        }
      ],
      "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {},
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {},
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {},
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates load balancer stickiness policy",
      "isasync": true,
      "name": "updateLBStickinessPolicy",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "id of lb stickiness policy",
          "length": 255,
          "name": "id",
          "related": "createLBStickinessPolicy,listLBStickinessPolicies,updateLBStickinessPolicy",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the policy to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "createLBStickinessPolicy,listLBStickinessPolicies",
      "response": [
        {},
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Lists all Pods.",
      "isasync": false,
      "name": "listPods",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list Pods by Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list pods by allocation state",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "list Pods by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the capacity of the pods",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list Pods by ID",
          "length": 255,
          "name": "id",
          "related": "listPods,updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "updatePod,createManagementNetworkIpRange",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the starting IP for the Pod. This parameter is deprecated, please use 'startip' from ipranges parameter.",
          "name": "startip",
          "type": "list"
        },
        {
          "description": "indicates Vlan ID for the range. This parameter is deprecated, please use 'vlanid' from ipranges parameter.",
          "name": "vlanid",
          "type": "list"
        },
        {
          "description": "the ending IP for the Pod. This parameter is deprecated, please use 'endip' from ipranges parameter.",
          "name": "endip",
          "type": "list"
        },
        {},
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        },
        {
          "description": "indicates if range is dedicated for CPVM and SSVM. This parameter is deprecated, please use 'forsystemvms' from ipranges parameter.",
          "name": "forsystemvms",
          "type": "list"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the IP ranges for the Pod",
          "name": "ipranges",
          "response": [
            {
              "description": "the CIDR for the range",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the gateway for the range",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ending IP for the range",
              "name": "endip",
              "type": "string"
            },
            {
              "description": "indicates if range is dedicated for CPVM and SSVM",
              "name": "forsystemvms",
              "type": "string"
            },
            {
              "description": "the starting IP for the range",
              "name": "startip",
              "type": "string"
            },
            {
              "description": "indicates Vlan ID for the range",
              "name": "vlanid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Starts an existing internal lb vm.",
      "isasync": true,
      "name": "startInternalLoadBalancerVM",
      "params": [
        {
          "description": "the ID of the internal lb vm",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,rebootRouter,changeServiceForRouter,stopInternalLoadBalancerVM,startInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter,listRouters,rebootRouter,changeServiceForRouter,stopInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
      "response": [
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {},
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            }
          ],
          "type": "list"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {},
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a disk offering.",
      "isasync": false,
      "name": "updateDiskOffering",
      "params": [
        {
          "description": "sort key of the disk offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the containing domain(s) as comma separated string, public for public offerings",
          "length": 4096,
          "name": "domainid",
          "required": false,
          "since": "4.13",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriterate",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "iopswriteratemaxlength",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriterate",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "comma-separated list of tags for the disk offering, tags should match with existing storage pool tags",
          "length": 255,
          "name": "tags",
          "required": false,
          "since": "4.15",
          "type": "string"
        },
        {
          "description": "updates alternate display text of the disk offering with this value",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "createDiskOffering,updateDiskOffering,listDiskOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "iopsreadratemaxlength",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "burst requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadratemax",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "byteswriteratemaxlength",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "updates name of the disk offering with this value",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadratemax",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriteratemax",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "the ID of the containing zone(s) as comma separated string, all for all zones offerings",
          "length": 255,
          "name": "zoneid",
          "required": false,
          "since": "4.13",
          "type": "string"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriteratemax",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "bytesreadratemaxlength",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "an optional field, whether to display the offering to the end user or not.",
          "length": 255,
          "name": "displayoffering",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadrate",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "the cache mode to use for this disk offering",
          "length": 255,
          "name": "cachemode",
          "required": false,
          "since": "4.15",
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadrate",
          "required": false,
          "since": "4.15",
          "type": "long"
        }
      ],
      "related": "createDiskOffering,listDiskOfferings",
      "response": [
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "burst io requests read rate of the disk offering",
          "name": "diskIopsReadRateMax",
          "type": "long"
        },
        {
          "description": "Whether disks using this offering will be encrypted on primary storage",
          "name": "encrypt",
          "type": "boolean"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with this disk offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskIopsWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "name": "diskBytesReadRateMax",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "name": "diskIopsWriteRateMax",
          "type": "long"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "name": "diskBytesWriteRateMax",
          "type": "long"
        },
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the vsphere storage policy tagged to the disk offering in case of VMware",
          "name": "vspherestoragepolicy",
          "type": "string"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "length (in second) of the burst",
          "name": "diskIopsReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "To allow or disallow the resize operation on the disks created from this disk offering, if the flag is true then resize is not allowed",
          "name": "disksizestrictness",
          "type": "boolean"
        },
        {},
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "delete Tungsten-Fabric address group",
      "isasync": true,
      "name": "deleteTungstenFabricAddressGroup",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric address group",
          "length": 255,
          "name": "addressgroupuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a running Kubernetes cluster",
      "isasync": true,
      "name": "stopKubernetesCluster",
      "params": [
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "createKubernetesCluster,startKubernetesCluster,listKubernetesClusters,scaleKubernetesCluster,upgradeKubernetesCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Adds account to a project",
      "isasync": true,
      "name": "addAccountToProject",
      "params": [
        {
          "description": "name of the account to be added to the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Project role type to be assigned to the user - Admin/Regular; default: Regular",
          "length": 255,
          "name": "roletype",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the project to add the account to",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "email to which invitation to the project is going to be sent",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the project role",
          "length": 255,
          "name": "projectroleid",
          "related": "createProjectRole,listProjectRoles,updateProjectRole",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all available snapshots for the account.",
      "isasync": false,
      "name": "listSnapshots",
      "params": [
        {
          "description": "valid values are MANUAL or RECURRING.",
          "length": 255,
          "name": "snapshottype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,destroyVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists snapshot by snapshot ID",
          "length": 255,
          "name": "id",
          "related": "createSnapshot,createSnapshotFromVMSnapshot,archiveSnapshot,listSnapshots,revertSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list snapshots by zone id",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists snapshot by snapshot name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the IDs of the snapshots, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "createSnapshot,createSnapshotFromVMSnapshot,archiveSnapshot,listSnapshots,revertSnapshot",
          "required": false,
          "since": "4.9",
          "type": "list"
        },
        {
          "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY.",
          "length": 255,
          "name": "intervaltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createSnapshot,createSnapshotFromVMSnapshot,archiveSnapshot,revertSnapshot",
      "response": [
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "valid location types are primary and secondary.",
          "name": "locationtype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "display name of the os on volume",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "id of the os on volume",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "virtual size of backedup snapshot on image store",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        }
      ]
    },
    {
      "description": "delete Tungsten-Fabric logical router",
      "isasync": true,
      "name": "deleteTungstenFabricLogicalRouter",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric logical router",
          "length": 255,
          "name": "logicalrouteruuid",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Reset site to site vpn connection",
      "isasync": true,
      "name": "resetVpnConnection",
      "params": [
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "createVpnConnection,listVpnConnections,resetVpnConnection,updateVpnConnection",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional account for connection. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for connection. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createVpnConnection,listVpnConnections,updateVpnConnection",
      "response": [
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {},
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Split multiple remote networks into multiple phase 2 SAs. Often used with Cisco some products.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Lists Kubernetes clusters",
      "isasync": false,
      "name": "listKubernetesClusters",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "state of the Kubernetes cluster",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "createKubernetesCluster,startKubernetesCluster,listKubernetesClusters,scaleKubernetesCluster,upgradeKubernetesCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "name of the Kubernetes cluster (a substring match is made against the parameter value, data for all matching Kubernetes clusters will be returned)",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createKubernetesCluster,startKubernetesCluster,scaleKubernetesCluster,upgradeKubernetesCluster",
      "response": [
        {
          "description": "the ID of the network of the Kubernetes cluster",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionid",
          "type": "string"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the state of the Kubernetes cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the memory the Kubernetes cluster",
          "name": "memory",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the Kubernetes cluster",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the id of the Kubernetes cluster",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the Kubernetes cluster exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes cluster",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the Kubernetes cluster",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of virtualmachine associated with this Kubernetes cluster",
          "name": "virtualmachines",
          "type": "list"
        },
        {
          "description": "the description of the Kubernetes cluster",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Maximum size of the cluster",
          "name": "maxsize",
          "type": "long"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Public IP Address ID of the cluster",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the cpu cores of the Kubernetes cluster",
          "name": "cpunumber",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "the account associated with the Kubernetes cluster",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Minimum size of the cluster",
          "name": "minsize",
          "type": "long"
        },
        {
          "description": "the ID of the template of the Kubernetes cluster",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the network of the Kubernetes cluster",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Public IP Address of the cluster",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the size (worker nodes count) of the Kubernetes cluster",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the Kubernetes cluster exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionname",
          "type": "string"
        },
        {
          "description": "keypair details",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the project name of the Kubernetes cluster",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Whether autoscaling is enabled for the cluster",
          "name": "autoscalingenabled",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster dashboard UI",
          "name": "consoleendpoint",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the master nodes count for the Kubernetes cluster. This parameter is deprecated, please use 'controlnodes' parameter.",
          "name": "masternodes",
          "type": "long"
        },
        {
          "description": "the control nodes count for the Kubernetes cluster",
          "name": "controlnodes",
          "type": "long"
        },
        {
          "description": "the date when this Kubernetes cluster was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the service offering of the Kubernetes cluster",
          "name": "serviceofferingname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a keypair by name",
      "isasync": false,
      "name": "deleteSSHKeyPair",
      "params": [
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the keypair",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the project associated with keypair",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account associated with the keypair. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
      "isasync": true,
      "name": "createAutoScaleVmGroup",
      "params": [
        {
          "description": "the name of the autoscale vmgroup",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the frequency in which the performance counters to be collected",
          "length": 255,
          "name": "interval",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list of scaledown autoscale policies",
          "length": 255,
          "name": "scaledownpolicyids",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": true,
          "type": "list"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "length": 255,
          "name": "minmembers",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "length": 255,
          "name": "vmprofileid",
          "related": "createAutoScaleVmProfile,listAutoScaleVmProfiles,updateAutoScaleVmProfile",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "length": 255,
          "name": "maxmembers",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the group to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list of scaleup autoscale policies",
          "length": 255,
          "name": "scaleuppolicyids",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": true,
          "type": "list"
        }
      ],
      "related": "disableAutoScaleVmGroup,enableAutoScaleVmGroup,listAutoScaleVmGroups,updateAutoScaleVmGroup",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is group for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the date when this vm group was created",
          "name": "created",
          "type": "date"
        },
        {},
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the name of the guest network the lb rule belongs to",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the domain name of the vm group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the account owning the vm group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the autoscale vm group ",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "the lb provider of the guest network the lb rule belongs to",
          "name": "lbprovider",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the vm group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the number of available virtual machines (in Running, Starting, Stopping or Migrating state) in the vmgroup",
          "name": "availablevirtualmachinecount",
          "type": "int"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the vm group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Searches LDAP based on the username attribute",
      "isasync": false,
      "name": "searchLdap",
      "params": [
        {
          "description": "query to search using",
          "length": 255,
          "name": "query",
          "related": "searchLdap,listLdapUsers",
          "required": true,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listLdapUsers",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "The user's email",
          "name": "email",
          "type": "string"
        },
        {
          "description": "The user's principle",
          "name": "principal",
          "type": "string"
        },
        {
          "description": "The user's lastname",
          "name": "lastname",
          "type": "string"
        },
        {},
        {
          "description": "The user's username",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "The authentication source for this user as known to the system or empty if the user is not yet in cloudstack.",
          "name": "conflictingusersource",
          "type": "string"
        },
        {
          "description": "The user's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The user's firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a load balancer rule.",
      "isasync": true,
      "name": "deleteLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "add a baremetal ping pxe server",
      "isasync": true,
      "name": "addBaremetalPxePingServer",
      "params": [
        {
          "description": "type of pxe device",
          "length": 255,
          "name": "pxeservertype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach external pxe device",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Username of PING storage server",
          "length": 255,
          "name": "pingcifsusername",
          "required": false,
          "type": "string"
        },
        {
          "description": "PING storage server ip",
          "length": 255,
          "name": "pingstorageserverip",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach external pxe device",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,updatePhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Password of PING storage server",
          "length": 255,
          "name": "pingcifspassword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Root directory on PING storage server",
          "length": 255,
          "name": "pingdir",
          "required": true,
          "type": "string"
        },
        {
          "description": "Pod Id",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "URL of the external pxe device",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tftp root directory of PXE server",
          "length": 255,
          "name": "tftpdir",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "device id of ",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Tftp root directory of PXE server",
          "name": "tftpdir",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the physical network to which this external dhcp device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "Root directory on PING storage server",
          "name": "pingdir",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "url",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "PING storage server ip",
          "name": "pingstorageserverip",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "create Tungsten-Fabric logical router",
      "isasync": true,
      "name": "createTungstenFabricLogicalRouter",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric logical router name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "addTungstenFabricNetworkGatewayToLogicalRouter,removeTungstenFabricNetworkGatewayFromLogicalRouter",
      "response": [
        {
          "description": "Tungsten-Fabric logical router uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric logical router name",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "create Tungsten-Fabric firewall",
      "isasync": true,
      "name": "createTungstenFabricFirewallRule",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric firewall policy",
          "length": 255,
          "name": "firewallpolicyuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule tag type uuid",
          "length": 255,
          "name": "tagtypeuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric destination network",
          "length": 255,
          "name": "destnetworkuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule source address group uuid",
          "length": 255,
          "name": "srcaddressgroupuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule action",
          "length": 255,
          "name": "action",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule direction",
          "length": 255,
          "name": "direction",
          "required": true,
          "type": "string"
        },
        {
          "description": "the sequence of Tungsten-Fabric firewall rule",
          "length": 255,
          "name": "sequence",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric firewall rule source tag uuid",
          "length": 255,
          "name": "srctaguuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination tag uuid",
          "length": 255,
          "name": "desttaguuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination address group uuid",
          "length": 255,
          "name": "destaddressgroupuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule service group uuid",
          "length": 255,
          "name": "servicegroupuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric source network",
          "length": 255,
          "name": "srcnetworkuuid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listTungstenFabricFirewallRule",
      "response": [
        {
          "description": "Tungsten-Fabric firewall rule source tag",
          "name": "srctag",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule service group",
          "name": "servicegroup",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {},
        {
          "description": "Tungsten-Fabric firewall rule name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule source network",
          "name": "srcnetwork",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination tag",
          "name": "desttag",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule source address group",
          "name": "srcaddressgroup",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule tag type",
          "name": "tagtype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric firewall rule uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric firewall rule destination address group",
          "name": "destaddressgroup",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule action",
          "name": "action",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule direction",
          "name": "direction",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination network",
          "name": "destnetwork",
          "type": "string"
        }
      ]
    },
    {
      "description": "list portable IP ranges",
      "isasync": false,
      "name": "listPortableIpRanges",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Id of the portable ip range",
          "length": 255,
          "name": "id",
          "related": "createPortableIpRange,listPortableIpRanges",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Id of a Region",
          "length": 255,
          "name": "regionid",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createPortableIpRange",
      "response": [
        {
          "description": "the end ip of the portable IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "portable IP range ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Region Id in which portable ip range is provisioned",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "List of portable IP and association with zone/network/vpc details that are part of GSLB rule",
          "name": "portableipaddress",
          "response": [
            {
              "description": "public IP address",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the physical network this belongs to",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "date the portal IP address was acquired",
              "name": "allocated",
              "type": "date"
            },
            {
              "description": "the ID of the zone the public IP address belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the ID of the Network where ip belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "VPC the ip belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the domain ID the portable IP address is associated with",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account ID the portable IP address is associated with",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "Region Id in which global load balancer is created",
              "name": "regionid",
              "type": "integer"
            },
            {
              "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the start ip of the portable IP range",
          "name": "startip",
          "type": "string"
        },
        {},
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        }
      ]
    },
    {
      "description": "Returns user data associated with the VM",
      "isasync": false,
      "name": "getVirtualMachineUserData",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Base 64 encoded VM user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Updates network permissions.",
      "isasync": false,
      "name": "createNetworkPermissions",
      "params": [
        {
          "description": "the network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "a comma delimited list of projects within owner's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "list"
        },
        {
          "description": "a comma delimited list of account IDs within owner's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accountids",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "a comma delimited list of accounts within owner's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Lists all configurations.",
      "isasync": false,
      "name": "listConfigurations",
      "params": [
        {
          "description": "lists configurations by category",
          "length": 255,
          "name": "category",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Domain to update the parameter value for corresponding domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists configuration by group name (primarily used for UI)",
          "length": 255,
          "name": "group",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists configuration by subgroup name (primarily used for UI)",
          "length": 255,
          "name": "subgroup",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the ID of the Zone to update the parameter value for corresponding zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Storage pool to update the parameter value for corresponding storage pool",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Cluster to update the parameter value for corresponding cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists configuration by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Image Store to update the parameter value for corresponding image store",
          "length": 255,
          "name": "imagestoreuuid",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Account to update the parameter value for corresponding account",
          "length": 255,
          "name": "accountid",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists configuration by parent name (primarily used for UI)",
          "length": 255,
          "name": "parent",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateConfiguration",
      "response": [
        {
          "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the category of the configuration",
          "name": "category",
          "type": "string"
        },
        {
          "description": "the type of the configuration value",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the configuration is dynamic",
          "name": "isdynamic",
          "type": "boolean"
        },
        {
          "description": "the component of the configuration",
          "name": "component",
          "type": "string"
        },
        {
          "description": "the description of the configuration",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "the value of the configuration",
          "name": "id",
          "type": "long"
        },
        {
          "description": "the possible options of the configuration value",
          "name": "options",
          "type": "string"
        },
        {
          "description": "the display text of the configuration",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the name of the configuration",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the name of the parent configuration",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the default value of the configuration",
          "name": "defaultvalue",
          "type": "string"
        },
        {
          "description": "the subgroup of the configuration",
          "name": "subgroup",
          "type": "string"
        },
        {
          "description": "the group of the configuration",
          "name": "group",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disables static rule for given IP address",
      "isasync": true,
      "name": "disableStaticNat",
      "params": [
        {
          "description": "the public IP address ID for which static NAT feature is being disabled",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Assigns secondary IP to NIC",
      "isasync": true,
      "name": "addIpToNic",
      "params": [
        {
          "description": "the ID of the nic to which you want to assign private IP",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Secondary IP Address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Secondary IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the nic",
          "name": "nicid",
          "type": "string"
        },
        {
          "description": "the ID of the secondary private IP addr",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the vm",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the list of Secondary ipv4 addr of nic",
          "name": "secondaryip",
          "type": "list"
        },
        {
          "description": "the ID of the network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Scales a created, running or stopped Kubernetes cluster",
      "isasync": true,
      "name": "scaleKubernetesCluster",
      "params": [
        {
          "description": "the ID of the service offering for the virtual machines in the cluster.",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "number of Kubernetes cluster nodes",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "Maximum number of worker nodes in the cluster",
          "length": 255,
          "name": "maxsize",
          "required": false,
          "type": "long"
        },
        {
          "description": "Minimum number of worker nodes in the cluster",
          "length": 255,
          "name": "minsize",
          "required": false,
          "type": "long"
        },
        {
          "description": "Whether autoscaling is enabled for the cluster",
          "length": 255,
          "name": "autoscalingenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the IDs of the nodes to be removed",
          "length": 255,
          "name": "nodeids",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "list"
        },
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "createKubernetesCluster,startKubernetesCluster,scaleKubernetesCluster,upgradeKubernetesCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createKubernetesCluster,startKubernetesCluster,upgradeKubernetesCluster",
      "response": [
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the network of the Kubernetes cluster",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the network of the Kubernetes cluster",
          "name": "associatednetworkname",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionid",
          "type": "string"
        },
        {
          "description": "the account associated with the Kubernetes cluster",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the list of virtualmachine associated with this Kubernetes cluster",
          "name": "virtualmachines",
          "type": "list"
        },
        {
          "description": "the name of the service offering of the Kubernetes cluster",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "Maximum size of the cluster",
          "name": "maxsize",
          "type": "long"
        },
        {
          "description": "Public IP Address of the cluster",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionname",
          "type": "string"
        },
        {
          "description": "the description of the Kubernetes cluster",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project id of the Kubernetes cluster",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the Kubernetes cluster",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the Kubernetes cluster",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the Kubernetes cluster exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Minimum size of the cluster",
          "name": "minsize",
          "type": "long"
        },
        {
          "description": "the id of the Kubernetes cluster",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the size (worker nodes count) of the Kubernetes cluster",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the state of the Kubernetes cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Whether autoscaling is enabled for the cluster",
          "name": "autoscalingenabled",
          "type": "boolean"
        },
        {
          "description": "URL end point for the Kubernetes cluster dashboard UI",
          "name": "consoleendpoint",
          "type": "string"
        },
        {
          "description": "the control nodes count for the Kubernetes cluster",
          "name": "controlnodes",
          "type": "long"
        },
        {},
        {
          "description": "the ID of the domain in which the Kubernetes cluster exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the template of the Kubernetes cluster",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the date when this Kubernetes cluster was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the Kubernetes cluster",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the master nodes count for the Kubernetes cluster. This parameter is deprecated, please use 'controlnodes' parameter.",
          "name": "masternodes",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the cpu cores of the Kubernetes cluster",
          "name": "cpunumber",
          "type": "string"
        },
        {
          "description": "keypair details",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "Public IP Address ID of the cluster",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "the memory the Kubernetes cluster",
          "name": "memory",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a NetScalervm.",
      "isasync": true,
      "name": "stopNetScalerVpx",
      "params": [
        {
          "description": "the ID of the NetScaler vm",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,rebootRouter,changeServiceForRouter,stopInternalLoadBalancerVM,listInternalLoadBalancerVMs,stopNetScalerVpx",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Force stop the VM. The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "destroyRouter,listRouters,rebootRouter,changeServiceForRouter,stopInternalLoadBalancerVM,listInternalLoadBalancerVMs",
      "response": [
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {},
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Delete a Ucs manager",
      "isasync": false,
      "name": "deleteUcsManager",
      "params": [
        {
          "description": "ucs manager id",
          "length": 255,
          "name": "ucsmanagerid",
          "related": "listUcsManagers,addUcsManager",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Deletes a host.",
      "isasync": false,
      "name": "deleteHost",
      "params": [
        {
          "description": "Force delete the host. All HA enabled vms running on the host will be put to HA; HA disabled ones will be stopped",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Force destroy local storage on this host. All VMs created on this local storage will be destroyed",
          "length": 255,
          "name": "forcedestroylocalstorage",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Deletes a vm group",
      "isasync": false,
      "name": "deleteInstanceGroup",
      "params": [
        {
          "description": "the ID of the instance group",
          "length": 255,
          "name": "id",
          "related": "createInstanceGroup,listInstanceGroups,updateInstanceGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "deletes the resource icon from the specified resource(s)",
      "isasync": false,
      "name": "deleteResourceIcon",
      "params": [
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "list of resources to upload the icon/image for",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ],
      "since": "4.16.0.0"
    },
    {
      "description": "Lists capabilities",
      "isasync": false,
      "name": "listCapabilities",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "Max allowed number of api requests within the specified interval",
          "name": "apilimitmax",
          "type": "integer"
        },
        {
          "description": "true if stats are retained for instance disks otherwise false",
          "name": "instancesdisksstatsretentionenabled",
          "type": "boolean"
        },
        {
          "description": "true if snapshot is supported for KVM host, false otherwise",
          "name": "kvmsnapshotenabled",
          "type": "boolean"
        },
        {
          "description": "version of the cloud stack",
          "name": "cloudstackversion",
          "type": "string"
        },
        {},
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "true if Kubernetes Service plugin is enabled, false otherwise",
          "name": "kubernetesserviceenabled",
          "type": "boolean"
        },
        {
          "description": "true if dynamic role-based api checker is enabled, false otherwise",
          "name": "dynamicrolesenabled",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if region wide secondary is enabled, false otherwise",
          "name": "regionsecondaryenabled",
          "type": "boolean"
        },
        {
          "description": "true if experimental features for Kubernetes cluster such as Docker private registry are enabled, false otherwise",
          "name": "kubernetesclusterexperimentalfeaturesenabled",
          "type": "boolean"
        },
        {
          "description": "default page size in the UI for various views, value set in the configurations",
          "name": "defaultuipagesize",
          "type": "long"
        },
        {
          "description": "If invitation confirmation is required when add account to project",
          "name": "projectinviterequired",
          "type": "boolean"
        },
        {
          "description": "true if the user can recover and expunge virtualmachines, false otherwise",
          "name": "allowuserexpungerecovervm",
          "type": "boolean"
        },
        {
          "description": "the retention time for Instances disks stats",
          "name": "instancesdisksstatsretentiontime",
          "type": "integer"
        },
        {
          "description": "true if stats are collected only for user instances, false if system instance stats are also collected",
          "name": "instancesstatsuseronly",
          "type": "boolean"
        },
        {
          "description": "true if users can see all accounts within the same domain, false otherwise",
          "name": "allowuserviewalldomainaccounts",
          "type": "boolean"
        },
        {
          "description": "true if user and domain admins can set templates to be shared, false otherwise",
          "name": "userpublictemplateenabled",
          "type": "boolean"
        },
        {
          "description": "true if regular user is allowed to create projects",
          "name": "allowusercreateprojects",
          "type": "boolean"
        },
        {
          "description": "the retention time for Instances stats",
          "name": "instancesstatsretentiontime",
          "type": "integer"
        },
        {},
        {
          "description": "time interval (in seconds) to reset api count",
          "name": "apilimitinterval",
          "type": "integer"
        },
        {
          "description": "maximum size that can be specified when create disk from disk offering with custom size",
          "name": "customdiskofferingmaxsize",
          "type": "long"
        },
        {
          "description": "true if the user is allowed to view destroyed virtualmachines, false otherwise",
          "name": "allowuserviewdestroyedvm",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if region supports elastic load balancer on basic zones",
          "name": "supportELB",
          "type": "string"
        },
        {
          "description": "minimum size that can be specified when create disk from disk offering with custom size",
          "name": "customdiskofferingminsize",
          "type": "long"
        },
        {
          "description": "true if the user can recover and expunge volumes, false otherwise",
          "name": "allowuserexpungerecovervolume",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates traffic type of a physical network",
      "isasync": true,
      "name": "updateTrafficType",
      "params": [
        {
          "description": "traffic type id",
          "length": 255,
          "name": "id",
          "related": "addTrafficType,updateTrafficType",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The network name of the physical device dedicated to this traffic on an OVM3 host",
          "length": 255,
          "name": "ovm3networklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
          "length": 255,
          "name": "vmwarenetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a Hyperv host",
          "length": 255,
          "name": "hypervnetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
          "length": 255,
          "name": "kvmnetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
          "length": 255,
          "name": "xennetworklabel",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addTrafficType",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a HyperV host",
          "name": "hypervnetworklabel",
          "type": "string"
        },
        {
          "description": "The network name of the physical device dedicated to this traffic on an OVM3 host",
          "name": "ovm3networklabel",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
          "name": "vmwarenetworklabel",
          "type": "string"
        },
        {
          "description": "the trafficType to be added to the physical network",
          "name": "traffictype",
          "type": "string"
        },
        {},
        {
          "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
          "name": "xennetworklabel",
          "type": "string"
        },
        {
          "description": "id of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
          "name": "kvmnetworklabel",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Release dedication of zone",
      "isasync": true,
      "name": "releaseDedicatedZone",
      "params": [
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "List Conditions for VM auto scaling",
      "isasync": false,
      "name": "listConditions",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Counter-id of the condition.",
          "length": 255,
          "name": "counterid",
          "related": "createCounter,listCounters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the policy",
          "length": 255,
          "name": "policyid",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "ID of the Condition.",
          "length": 255,
          "name": "id",
          "related": "createCondition,listConditions",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createCondition",
      "response": [
        {
          "description": "the domain name of the owner.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Relational Operator to be used with threshold.",
          "name": "relationaloperator",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Id of the Counter.",
          "name": "counterid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the id of the Condition",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain id of the Condition owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the Condition.",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Details of the Counter.",
          "name": "counter",
          "type": "counterresponse"
        },
        {
          "description": "the project name of the Condition",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the owner of the Condition.",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the Name of the Counter.",
          "name": "countername",
          "type": "string"
        },
        {
          "description": "Threshold Value for the counter.",
          "name": "threshold",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates a network serviceProvider of a physical network",
      "isasync": true,
      "name": "updateNetworkServiceProvider",
      "params": [
        {
          "description": "network service provider id",
          "length": 255,
          "name": "id",
          "related": "addNetworkServiceProvider,listNetworkServiceProviders,updateNetworkServiceProvider,listTrafficTypes",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list of services to be enabled for this physical network service provider",
          "length": 255,
          "name": "servicelist",
          "required": false,
          "type": "list"
        },
        {
          "description": "Enabled/Disabled/Shutdown the physical network service provider",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addNetworkServiceProvider,listNetworkServiceProviders,listTrafficTypes",
      "response": [
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists Management Server metrics",
      "isasync": false,
      "name": "listManagementServersMetrics",
      "params": [
        {
          "description": "include system level stats",
          "length": 255,
          "name": "system",
          "related": "listManagementServersMetrics",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the management server",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of the management server",
          "length": 255,
          "name": "id",
          "related": "listManagementServers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the management server",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Total system memory",
          "name": "systemmemorytotal",
          "type": "string"
        },
        {
          "description": "the name of the OS distribution running on the management server",
          "name": "osdistribution",
          "type": "string"
        },
        {
          "description": "the system load for user, and system processes and the system idle cycles",
          "name": "systemcycleusage",
          "type": "long[]"
        },
        {
          "description": "the running OS kernel version for this Management Server",
          "name": "kernelversion",
          "type": "string"
        },
        {
          "description": "the version of the management server",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the amount of memory allocated to this Management Server",
          "name": "heapmemorytotal",
          "type": "long"
        },
        {
          "description": "the last time this Management Server was stopped",
          "name": "lastserverstop",
          "type": "date"
        },
        {
          "description": "the last time this Management Server was started",
          "name": "lastserverstart",
          "type": "date"
        },
        {
          "description": "The number of daemon threads",
          "name": "threadsdaemoncount",
          "type": "integer"
        },
        {
          "description": "the system is running against a local database",
          "name": "dbislocal",
          "type": "boolean"
        },
        {
          "description": "the total system cpu capacity",
          "name": "systemtotalcpucycles",
          "type": "double"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the java distribution name running the management server process",
          "name": "javadistribution",
          "type": "string"
        },
        {
          "description": "The number of blocked threads",
          "name": "threadsblockedcount",
          "type": "integer"
        },
        {
          "description": "The number of terminated threads",
          "name": "threadsteminatedcount",
          "type": "integer"
        },
        {
          "description": "The number of waiting threads",
          "name": "threadswaitingcount",
          "type": "integer"
        },
        {
          "description": "Free system memory",
          "name": "systemmemoryfree",
          "type": "string"
        },
        {
          "description": "the amount of memory used by this Management Server",
          "name": "heapmemoryused",
          "type": "long"
        },
        {},
        {
          "description": "the current cpu load",
          "name": "cpuload",
          "type": "string"
        },
        {
          "description": "Virtual size of the fully loaded process",
          "name": "systemmemoryvirtualsize",
          "type": "string"
        },
        {
          "description": "The number of runnable threads",
          "name": "threadsrunnablecount",
          "type": "integer"
        },
        {
          "description": "the last time the host on which this Management Server runs was booted",
          "name": "lastboottime",
          "type": "date"
        },
        {
          "description": "the log files and their usage on disk",
          "name": "loginfo",
          "type": "string"
        },
        {
          "description": "the time these statistics were collected",
          "name": "collectiontime",
          "type": "date"
        },
        {
          "description": "the load averages for 1 5 and 15 minutes",
          "name": "systemloadaverages",
          "type": "double[]"
        },
        {},
        {
          "description": "the number of agents this Management Server is responsible for",
          "name": "agentcount",
          "type": "integer"
        },
        {
          "description": "the name of the management server",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Amount of memory used",
          "name": "systemmemoryused",
          "type": "string"
        },
        {
          "description": "The number of threads",
          "name": "threadstotalcount",
          "type": "integer"
        },
        {
          "description": "the version of the java distribution running the management server process",
          "name": "javaversion",
          "type": "string"
        },
        {
          "description": "the number of client sessions active on this Management Server",
          "name": "sessions",
          "type": "long"
        },
        {
          "description": "the number of processors available to the JVM",
          "name": "availableprocessors",
          "type": "integer"
        },
        {
          "description": "the state of the management server",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the system has a usage server running locally",
          "name": "usageislocal",
          "type": "boolean"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Removes a virtual machine or a list of virtual machines from a load balancer rule.",
      "isasync": true,
      "name": "removeFromLoadBalancerRule",
      "params": [
        {
          "description": "the list of IDs of the virtual machines that are being removed from the load balancer rule (i.e. virtualMachineIds=1,2,3)",
          "length": 255,
          "name": "virtualmachineids",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "list"
        },
        {
          "description": "VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75",
          "length": 255,
          "name": "vmidipmap",
          "required": false,
          "since": "4.4",
          "type": "map"
        },
        {
          "description": "The ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists vm groups",
      "isasync": false,
      "name": "listInstanceGroups",
      "params": [
        {
          "description": "list instance groups by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list instance groups by ID",
          "length": 255,
          "name": "id",
          "related": "createInstanceGroup,listInstanceGroups,updateInstanceGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,createProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createInstanceGroup,updateInstanceGroup",
      "response": [
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the project ID of the instance group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the instance group",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "migrates data objects from one secondary storage to destination image store(s)",
      "isasync": true,
      "name": "migrateSecondaryStorageData",
      "params": [
        {
          "description": "id of the image store from where the data is to be migrated",
          "length": 255,
          "name": "srcpool",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "id(s) of the destination secondary storage pool(s) to which the templates are to be migrated",
          "length": 255,
          "name": "destpools",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
          "required": true,
          "type": "list"
        },
        {
          "description": "Balance: if you want data to be distributed evenly among the destination stores, Complete: If you want to migrate the entire data from source image store to the destination store(s). Default: Complete",
          "length": 255,
          "name": "migrationtype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Type of migration requested for",
          "name": "migrationtype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Response message from migration of secondary storage data objects",
          "name": "message",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Creates a static route",
      "isasync": true,
      "name": "createStaticRoute",
      "params": [
        {
          "description": "static route cidr",
          "length": 255,
          "name": "cidr",
          "required": true,
          "type": "string"
        },
        {
          "description": "the gateway id we are creating static route for",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway,createPrivateGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listStaticRoutes",
      "response": [
        {
          "description": "the project id of the static route",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the static route",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the state of the static route",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name of the static route",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain associated with the static route",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "VPC the static route belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of static route",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the account associated with the static route",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "static route CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with static route",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "VPC gateway the route is created for",
          "name": "gatewayid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroys a Volume.",
      "isasync": true,
      "name": "destroyVolume",
      "params": [
        {
          "description": "The ID of the volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,destroyVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "If true is passed, the volume is expunged immediately. False by default.",
          "length": 255,
          "name": "expunge",
          "required": false,
          "since": "4.6.0",
          "type": "boolean"
        }
      ],
      "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
      "response": [
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {},
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        }
      ],
      "since": "4.14.0"
    },
    {
      "description": "Adds traffic type to a physical network",
      "isasync": true,
      "name": "addTrafficType",
      "params": [
        {
          "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
          "length": 255,
          "name": "vmwarenetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
          "length": 255,
          "name": "xennetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "Used if physical network has multiple isolation types and traffic type is public. Choose which isolation method. Valid options currently 'vlan' or 'vxlan', defaults to 'vlan'.",
          "length": 255,
          "name": "isolationmethod",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
          "length": 255,
          "name": "kvmnetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork,updatePhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The network name of the physical device dedicated to this traffic on an OVM3 host",
          "length": 255,
          "name": "ovm3networklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a Hyperv host",
          "length": 255,
          "name": "hypervnetworklabel",
          "required": false,
          "type": "string"
        },
        {
          "description": "the trafficType to be added to the physical network",
          "length": 255,
          "name": "traffictype",
          "required": true,
          "type": "string"
        },
        {
          "description": "The VLAN id to be used for Management traffic by VMware host",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the trafficType to be added to the physical network",
          "name": "traffictype",
          "type": "string"
        },
        {},
        {
          "description": "The network name of the physical device dedicated to this traffic on an OVM3 host",
          "name": "ovm3networklabel",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a HyperV host",
          "name": "hypervnetworklabel",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a XenServer host",
          "name": "xennetworklabel",
          "type": "string"
        },
        {
          "description": "id of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a VMware host",
          "name": "vmwarenetworklabel",
          "type": "string"
        },
        {
          "description": "The network name label of the physical device dedicated to this traffic on a KVM host",
          "name": "kvmnetworklabel",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a Private gateway",
      "isasync": true,
      "name": "deletePrivateGateway",
      "params": [
        {
          "description": "the ID of the private gateway",
          "length": 255,
          "name": "id",
          "related": "createPrivateGateway,createPrivateGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "List all virtual machine instances that are assigned to a load balancer rule.",
      "isasync": false,
      "name": "listLoadBalancerRuleInstances",
      "params": [
        {
          "description": "true if load balancer rule VM IP information to be included; default is false",
          "length": 255,
          "name": "lbvmips",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if listing all virtual machines currently applied to the load balancer rule; default is true",
          "length": 255,
          "name": "applied",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listLoadBalancerRuleInstances",
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the user vm set for lb rule",
          "name": "loadbalancerruleinstance",
          "type": "uservmresponse"
        },
        {},
        {
          "description": "IP addresses of the vm set of lb rule",
          "name": "lbvmipaddresses",
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes a condition for VM auto scaling",
      "isasync": true,
      "name": "deleteCondition",
      "params": [
        {
          "description": "the ID of the condition.",
          "length": 255,
          "name": "id",
          "related": "createCondition",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates a domain with a new name",
      "isasync": false,
      "name": "updateDomain",
      "params": [
        {
          "description": "Network domain for the domain's networks; empty string will update domainName with NULL value",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "updates domain with this name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of domain to update",
          "length": 255,
          "name": "id",
          "related": "createDomain,listDomainChildren,listDomains,listDomains,updateDomain",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createDomain,listDomainChildren,listDomains,listDomains",
      "response": [
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {},
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "details for the domain",
          "name": "domaindetails",
          "type": "map"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the date when this domain was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a physical network",
      "isasync": true,
      "name": "updatePhysicalNetwork",
      "params": [
        {
          "description": "Enabled/Disabled",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the VLAN for the physical network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "Tag the physical network",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "list"
        },
        {
          "description": "physical network id",
          "length": 255,
          "name": "id",
          "related": "createPhysicalNetwork,updatePhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the speed for the physical network[1G/10G]",
          "length": 255,
          "name": "networkspeed",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createPhysicalNetwork",
      "response": [
        {
          "description": "the speed of the physical network",
          "name": "networkspeed",
          "type": "string"
        },
        {
          "description": "the vlan of the physical network",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "name of the physical network",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "comma separated tag",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the uuid of the physical network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain id of the physical network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "isolation methods",
          "name": "isolationmethods",
          "type": "string"
        },
        {
          "description": "Broadcast domain range of the physical network",
          "name": "broadcastdomainrange",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "zone id of the physical network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "zone name of the physical network",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "state of the physical network",
          "name": "state",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Disables an AutoScale Vm Group",
      "isasync": true,
      "name": "disableAutoScaleVmGroup",
      "params": [
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "disableAutoScaleVmGroup,enableAutoScaleVmGroup,listAutoScaleVmGroups,updateAutoScaleVmGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableAutoScaleVmGroup,listAutoScaleVmGroups,updateAutoScaleVmGroup",
      "response": [
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the lb provider of the guest network the lb rule belongs to",
          "name": "lbprovider",
          "type": "string"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the name of the guest network the lb rule belongs to",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {},
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "is group for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the number of available virtual machines (in Running, Starting, Stopping or Migrating state) in the vmgroup",
          "name": "availablevirtualmachinecount",
          "type": "int"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date when this vm group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain name of the vm group",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the vm group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the vm group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the autoscale vm group ",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the account owning the vm group",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a snapshot policy for the account.",
      "isasync": false,
      "name": "createSnapshotPolicy",
      "params": [
        {
          "description": "maximum number of snapshots to retain",
          "length": 255,
          "name": "maxsnaps",
          "required": true,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the policy to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": true,
          "type": "string"
        },
        {
          "description": "Map of tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "valid values are HOURLY, DAILY, WEEKLY, and MONTHLY",
          "length": 255,
          "name": "intervaltype",
          "required": true,
          "type": "string"
        },
        {
          "description": "time the snapshot is scheduled to be taken. Format is:* if HOURLY, MM* if DAILY, MM:HH* if WEEKLY, MM:HH:DD (1-7)* if MONTHLY, MM:HH:DD (1-28)",
          "length": 255,
          "name": "schedule",
          "required": true,
          "type": "string"
        }
      ],
      "related": "updateSnapshotPolicy",
      "response": [
        {
          "description": "maximum number of snapshots retained",
          "name": "maxsnaps",
          "type": "int"
        },
        {
          "description": "the ID of the snapshot policy",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "time the snapshot is scheduled to be taken.",
          "name": "schedule",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "is this policy for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the interval type of the snapshot policy",
          "name": "intervaltype",
          "type": "short"
        },
        {},
        {
          "description": "the time zone of the snapshot policy",
          "name": "timezone",
          "type": "string"
        }
      ]
    },
    {
      "description": "create Tungsten-Fabric management network",
      "isasync": false,
      "name": "createTungstenFabricManagementNetwork",
      "params": [
        {
          "description": "the ID of pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Disables HA for a zone",
      "isasync": true,
      "name": "disableHAForZone",
      "params": [
        {
          "description": "ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "list Tungsten-Fabric firewall rule",
      "isasync": false,
      "name": "listTungstenFabricFirewallRule",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric firewall rule",
          "length": 255,
          "name": "firewallruleuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric firewall policy",
          "length": 255,
          "name": "firewallpolicyuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric firewall rule source tag",
          "name": "srctag",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule direction",
          "name": "direction",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric firewall rule source address group",
          "name": "srcaddressgroup",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule source network",
          "name": "srcnetwork",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination network",
          "name": "destnetwork",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric firewall rule uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination address group",
          "name": "destaddressgroup",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule service group",
          "name": "servicegroup",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule action",
          "name": "action",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric firewall rule tag type",
          "name": "tagtype",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric firewall rule destination tag",
          "name": "desttag",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds an API permission to a role",
      "isasync": false,
      "name": "createRolePermission",
      "params": [
        {
          "description": "The description of the role permission",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "The rule permission, allow or deny. Default: deny.",
          "length": 255,
          "name": "permission",
          "required": true,
          "type": "string"
        },
        {
          "description": "The API name or wildcard rule such as list*",
          "length": 255,
          "name": "rule",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the role",
          "length": 255,
          "name": "roleid",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listRolePermissions",
      "response": [
        {},
        {
          "description": "the name of the role to which the role permission belongs",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the ID of the role to which the role permission belongs",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the role permission",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the api name or wildcard rule",
          "name": "rule",
          "type": "string"
        },
        {
          "description": "the permission type of the api name or wildcard rule, allow/deny",
          "name": "permission",
          "type": "string"
        },
        {},
        {
          "description": "the description of the role permission",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "List system virtual machines.",
      "isasync": false,
      "name": "listSystemVms",
      "params": [
        {
          "description": "the name of the system VM",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the system VM type. Possible types are \"consoleproxy\" and \"secondarystoragevm\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "since": "3.0.1",
          "type": "uuid"
        },
        {
          "description": "the state of the system VM",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Pod ID of the system VM",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the host ID of the system VM",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID of the system VM",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the system VM",
          "length": 255,
          "name": "id",
          "related": "listSystemVms,migrateSystemVm,startSystemVm,changeServiceForSystemVm",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "migrateSystemVm,startSystemVm,changeServiceForSystemVm",
      "response": [
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {},
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {},
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a project",
      "isasync": true,
      "name": "createProject",
      "params": [
        {
          "description": "domain ID of the account owning a project",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the project",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the account owning a project",
          "length": 255,
          "name": "accountid",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "user ID of the account to be assigned as owner of the project i.e., Project Admin",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "since": "4.15.0",
          "type": "uuid"
        },
        {
          "description": "account who will be Admin for the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "display text of the project",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
      "response": [
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account name of the project's owners",
          "name": "owner",
          "type": "list"
        },
        {
          "description": "the project account name of the project",
          "name": "projectaccountname",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the date this project was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {},
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {},
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Assigns a certificate to a load balancer rule",
      "isasync": true,
      "name": "assignCertToLoadBalancer",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the certificate",
          "length": 255,
          "name": "certid",
          "related": "uploadSslCert",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Adds a Cisco Vnmc Controller",
      "isasync": false,
      "name": "addCiscoVnmcResource",
      "params": [
        {
          "description": "Hostname or ip address of the Cisco VNMC Controller.",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to access the Cisco VNMC Controller API",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to access the Cisco VNMC Controller API",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listCiscoVnmcResources",
      "response": [
        {},
        {},
        {},
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Detaches a disk volume from a virtual machine.",
      "isasync": true,
      "name": "detachVolume",
      "params": [
        {
          "description": "the device ID on the virtual machine where volume is detached from",
          "length": 255,
          "name": "deviceid",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,updateVolume,detachVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine where the volume is detached from",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
      "response": [
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {},
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {},
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        }
      ]
    },
    {
      "description": "Replaces ACL associated with a network or private gateway",
      "isasync": true,
      "name": "replaceNetworkACLList",
      "params": [
        {
          "description": "the ID of the private gateway",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway,createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "list Tungsten-Fabric address group",
      "isasync": false,
      "name": "listTungstenFabricAddressGroup",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric address group",
          "length": 255,
          "name": "addressgroupuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createTungstenFabricAddressGroup",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric address group name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric address group ip prefix length",
          "name": "ipprefixlen",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric address group ip prefix",
          "name": "ipprefix",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric address group uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Marks a default zone for this account",
      "isasync": true,
      "name": "markDefaultZoneForAccount",
      "params": [
        {
          "description": "Marks the account that belongs to the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Name of the account that is to be marked.",
          "length": 255,
          "name": "account",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,markDefaultZoneForAccount,listAccounts,listAccounts",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Zone ID with which the account is to be marked.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createAccount,disableAccount,enableAccount,updateAccount,listAccounts,listAccounts",
      "response": [
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {},
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {},
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        }
      ],
      "since": "4.0"
    },
    {
      "description": "Enables out-of-band management for a zone",
      "isasync": true,
      "name": "enableOutOfBandManagementForZone",
      "params": [
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForHost,enableOutOfBandManagementForCluster,disableOutOfBandManagementForCluster,issueOutOfBandManagementPowerAction",
      "response": [
        {},
        {},
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Lists LDAP Users according to the specifications from the user request.",
      "isasync": false,
      "name": "listLdapUsers",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "linked domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Determines whether all ldap users are returned or just non-cloudstack users. This option is deprecated in favour for the more option rich 'userfilter' parameter",
          "length": 255,
          "name": "listtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "Determines what type of filter is applied on the list of users returned from LDAP.\n\tvalid values are\n\t'NoFilter'\t no filtering is done,\n\t'LocalDomain'\tusers already in the current or requested domain will be filtered out of the result list,\n\t'AnyDomain'\tusers that already exist anywhere in cloudstack will be filtered out, and\n\t'PotentialImport'\tall users that would be automatically imported from the listing will be shown, including those that are already in cloudstack, the later will be annotated with their userSource",
          "length": 255,
          "name": "userfilter",
          "required": false,
          "since": "4.13",
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "The user's email",
          "name": "email",
          "type": "string"
        },
        {
          "description": "The authentication source for this user as known to the system or empty if the user is not yet in cloudstack.",
          "name": "conflictingusersource",
          "type": "string"
        },
        {
          "description": "The user's firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "The user's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The user's lastname",
          "name": "lastname",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The user's username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "The user's principle",
          "name": "principal",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Revokes certificate using configured CA plugin",
      "isasync": true,
      "name": "revokeCertificate",
      "params": [
        {
          "description": "Name of the CA service provider, otherwise the default configured provider plugin will be used",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "The certificate CN",
          "length": 255,
          "name": "cn",
          "required": false,
          "type": "string"
        },
        {
          "description": "The certificate serial number, as a hex value",
          "length": 255,
          "name": "serial",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ],
      "since": "4.11.0"
    },
    {
      "description": "Changes the service offering for a system vm (console proxy or secondary storage). The system vm must be in a \"Stopped\" state for this command to take effect.",
      "isasync": false,
      "name": "changeServiceForSystemVm",
      "params": [
        {
          "description": "the service offering ID to apply to the system vm",
          "length": 255,
          "name": "serviceofferingid",
          "related": "createServiceOffering,updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name value pairs of custom parameters for cpuspeed, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "The ID of the system vm",
          "length": 255,
          "name": "id",
          "related": "migrateSystemVm,startSystemVm,changeServiceForSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "migrateSystemVm,startSystemVm",
      "response": [
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {},
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {},
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Update SIOC info",
      "isasync": false,
      "name": "updateSiocInfo",
      "params": [
        {
          "description": "Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Shares per GB",
          "length": 255,
          "name": "sharespergb",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Storage Pool ID",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Notify if IOPS above this value",
          "length": 255,
          "name": "iopsnotifythreshold",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Limit IOPS per GB",
          "length": 255,
          "name": "limitiopspergb",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {
          "description": "The return message from the operation ('Success' if successful)",
          "name": "msg",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "List the IP forwarding rules",
      "isasync": false,
      "name": "listIpForwardingRules",
      "params": [
        {
          "description": "list the rule belonging to this public IP address",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists all rules applied to the specified VM.",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,listIpForwardingRules,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createPortForwardingRule,listPortForwardingRules,updatePortForwardingRule,createIpv6FirewallRule,updateIpv6FirewallRule",
      "response": [
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {},
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {},
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an instant snapshot of a volume.",
      "isasync": true,
      "name": "createSnapshot",
      "params": [
        {
          "description": "asynchronous backup if true",
          "length": 255,
          "name": "asyncbackup",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Map of tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "policy id of the snapshot, if this is null, then use MANUAL_POLICY.",
          "length": 255,
          "name": "policyid",
          "related": "updateSnapshotPolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The account of the snapshot. The account parameter must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Currently applicable only for managed storage. Valid location types: 'primary', 'secondary'. Default = 'primary'.",
          "length": 255,
          "name": "locationtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "quiesce vm if true",
          "length": 255,
          "name": "quiescevm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The domain ID of the snapshot. If used with the account parameter, specifies a domain for the account associated with the disk volume.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createSnapshotFromVMSnapshot,archiveSnapshot,revertSnapshot",
      "response": [
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "virtual size of backedup snapshot on image store",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "valid location types are primary and secondary.",
          "name": "locationtype",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "display name of the os on volume",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "id of the os on volume",
          "name": "ostypeid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a vmsnapshot.",
      "isasync": true,
      "name": "deleteVMSnapshot",
      "params": [
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "listVMSnapshot,createVMSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists storage pool metrics",
      "isasync": false,
      "name": "listStoragePoolsMetrics",
      "params": [
        {
          "description": "list storage pools belongig to the specific cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the storage pool",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IP address for the storage pool",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the storage pool",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Pod ID for the storage pool",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the storage pool path",
          "length": 255,
          "name": "path",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "scope",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {},
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "disk size in GiB",
          "name": "disksizetotalgb",
          "type": "string"
        },
        {
          "description": "storage usage notification threshold exceeded",
          "name": "storageusagethreshold",
          "type": "boolean"
        },
        {
          "description": "storage allocated notification threshold exceeded",
          "name": "storageallocatedthreshold",
          "type": "boolean"
        },
        {},
        {
          "description": "storage allocated disable threshold exceeded",
          "name": "storageallocateddisablethreshold",
          "type": "boolean"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "storage usage disable threshold exceeded",
          "name": "storageusagedisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "disk size allocated in GiB",
          "name": "disksizeallocatedgb",
          "type": "string"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "disk size unallocated in GiB",
          "name": "disksizeunallocatedgb",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "disk size used in GiB",
          "name": "disksizeusedgb",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.9.3"
    },
    {
      "description": "Unmanage a guest virtual machine.",
      "isasync": true,
      "name": "unmanageVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine to unmanage",
          "length": 255,
          "name": "id",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "details of the unmanage VM operation",
          "name": "details",
          "type": "string"
        },
        {
          "description": "result of the unmanage VM operation",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Starts a router.",
      "isasync": true,
      "name": "rebootRouter",
      "params": [
        {
          "description": "Force reboot the router (Router is force Stopped and then Started)",
          "length": 255,
          "name": "forced",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,rebootRouter,changeServiceForRouter,stopInternalLoadBalancerVM,listInternalLoadBalancerVMs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter,listRouters,changeServiceForRouter,stopInternalLoadBalancerVM,listInternalLoadBalancerVMs",
      "response": [
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {},
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {},
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "list the vm nics  IP to NIC",
      "isasync": false,
      "name": "listNics",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list nic of the specific vm's network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the nic to to list IPs",
          "length": 255,
          "name": "nicid",
          "related": "listNics",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "IP addresses associated with NIC found for unmanaged VM",
          "name": "ipaddresses",
          "type": "list"
        },
        {
          "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
          "name": "nsxlogicalswitchport",
          "type": "string"
        },
        {
          "description": "true if nic is default, false otherwise",
          "name": "macaddress",
          "type": "string"
        },
        {
          "description": "the extra dhcp options on the nic",
          "name": "extradhcpoption",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the nic",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "Type of adapter if available",
          "name": "adaptertype",
          "type": "string"
        },
        {
          "description": "the IPv6 address of network",
          "name": "ip6address",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the traffic type of the nic",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "ID of the VLAN/VNI if available",
          "name": "vlanid",
          "type": "integer"
        },
        {
          "description": "MTU configured on the NIC",
          "name": "mtu",
          "type": "integer"
        },
        {
          "description": "the gateway of the nic",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "Id of the vm to which the nic belongs",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the netmask of the nic",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the isolated private VLAN type if available",
          "name": "isolatedpvlantype",
          "type": "string"
        },
        {
          "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
          "name": "nsxlogicalswitch",
          "type": "string"
        },
        {
          "description": "device id for the network when plugged into the virtual machine",
          "name": "deviceid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "name of the vpc to which the nic belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the name of the corresponding network",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "the isolation uri of the nic",
          "name": "isolationuri",
          "type": "string"
        },
        {
          "description": "the type of the nic",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if nic is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the broadcast uri of the nic",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "Id of the vpc to which the nic belongs",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ip address of the nic",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the Secondary ipv4 addr of nic",
          "name": "secondaryip",
          "type": "list"
        },
        {
          "description": "the isolated private VLAN if available",
          "name": "isolatedpvlan",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Create a new keypair and returns the private key",
      "isasync": false,
      "name": "createSSHKeyPair",
      "params": [
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for the ssh key. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the keypair",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Private key",
          "name": "privatekey",
          "type": "string"
        },
        {
          "description": "the project name of the keypair owner",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "ID of the ssh keypair",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the keypair owner",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the owner of the keypair",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the keypair owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "the domain id of the keypair owner",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an instant snapshot of a volume from existing vm snapshot.",
      "isasync": true,
      "name": "createSnapshotFromVMSnapshot",
      "params": [
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "listVMSnapshot,createVMSnapshot",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "archiveSnapshot,revertSnapshot",
      "response": [
        {
          "description": "display name of the os on volume",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "valid location types are primary and secondary.",
          "name": "locationtype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "id of the os on volume",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "virtual size of backedup snapshot on image store",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.10.0"
    },
    {
      "description": "list Tungsten-Fabric service group",
      "isasync": false,
      "name": "listTungstenFabricServiceGroup",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric service group",
          "length": 255,
          "name": "servicegroupuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createTungstenFabricServiceGroup",
      "response": [
        {
          "description": "Tungsten-Fabric service group start port",
          "name": "startport",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric service group protocol",
          "name": "protocol",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric service group name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric service group uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric service group end port",
          "name": "endport",
          "type": "int"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Authorizes a particular egress rule for this security group",
      "isasync": true,
      "name": "authorizeSecurityGroupEgress",
      "params": [
        {
          "description": "The name of the security group. Mutually exclusive with securityGroupId parameter",
          "length": 255,
          "name": "securitygroupname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cidr list associated. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional account for the security group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "start port for this egress rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with securityGroupName parameter",
          "length": 255,
          "name": "securitygroupid",
          "related": "createSecurityGroup,updateSecurityGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "user to security group mapping",
          "length": 255,
          "name": "usersecuritygrouplist",
          "required": false,
          "type": "map"
        },
        {
          "description": "end port for this egress rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional project of the security group",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "TCP is default. UDP is the other supported protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        }
      ],
      "related": "authorizeSecurityGroupIngress",
      "response": [
        {
          "description": "the code for the ICMP message response",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "security group name",
          "name": "securitygroupname",
          "type": "string"
        },
        {
          "description": "the protocol of the security group rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting IP of the security group rule",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the type of the ICMP message response",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the id of the security group rule",
          "name": "ruleid",
          "type": "string"
        },
        {},
        {
          "description": "the CIDR notation for the base IP address of the security group rule",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the ending IP of the security group rule ",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "account owning the security group rule",
          "name": "account",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists storage pools.",
      "isasync": false,
      "name": "listStoragePools",
      "params": [
        {
          "description": "the Zone ID for the storage pool",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "scope",
          "related": "cancelStorageMaintenance,createStoragePool,listStoragePools,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IP address for the storage pool",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "length": 255,
          "name": "path",
          "required": false,
          "type": "string"
        },
        {
          "description": "list storage pools belongig to the specific cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Pod ID for the storage pool",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the storage pool",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
      "response": [
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {},
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a hypervisor capabilities.",
      "isasync": false,
      "name": "updateHypervisorCapabilities",
      "params": [
        {
          "description": "set true to enable VM snapshots for this hypervisor",
          "length": 255,
          "name": "vmsnapshotenabled",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "the maximum number of Data Volumes that can be attached to a VM for this hypervisor.",
          "length": 255,
          "name": "maxdatavolumeslimit",
          "required": false,
          "since": "4.16.0",
          "type": "integer"
        },
        {
          "description": "set true to enable security group for this hypervisor.",
          "length": 255,
          "name": "securitygroupenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the maximum number of the hypervisor hosts per cluster ",
          "length": 255,
          "name": "maxhostspercluster",
          "required": false,
          "since": "4.16.0",
          "type": "integer"
        },
        {
          "description": "set true to enable storage motion support for this hypervisor",
          "length": 255,
          "name": "storagemotionenabled",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "ID of the hypervisor capability",
          "length": 255,
          "name": "id",
          "related": "listHypervisorCapabilities,updateHypervisorCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the max number of Guest VMs per host for this hypervisor.",
          "length": 255,
          "name": "maxguestslimit",
          "required": false,
          "type": "long"
        }
      ],
      "related": "listHypervisorCapabilities",
      "response": [
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the maximum number of Hosts per cluster for this hypervisor",
          "name": "maxhostspercluster",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if security group is supported",
          "name": "securitygroupenabled",
          "type": "boolean"
        },
        {
          "description": "the hypervisor type",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "true if storage motion is supported",
          "name": "storagemotionenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the hypervisor capabilities row",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "true if VM snapshots are enabled for this hypervisor",
          "name": "vmsnapshotenabled",
          "type": "boolean"
        },
        {
          "description": "the maximum number of Data Volumes that can be attached for this hypervisor",
          "name": "maxdatavolumeslimit",
          "type": "integer"
        },
        {
          "description": "the maximum number of guest vms recommended for this hypervisor",
          "name": "maxguestslimit",
          "type": "long"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Find hosts suitable for migrating a virtual machine.",
      "isasync": false,
      "name": "findHostsForMigration",
      "params": [
        {
          "description": "find hosts to which this VM can be migrated and flag the hosts with enough CPU/RAM to host the VM",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the cpu average load on the host",
          "name": "averageload",
          "type": "long"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {},
        {
          "description": "true if migrating a vm to this host requires storage motion, false otherwise",
          "name": "requiresStorageMotion",
          "type": "boolean"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor ",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor ",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {},
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Enable a Cisco Nexus VSM device",
      "isasync": true,
      "name": "enableCiscoNexusVSM",
      "params": [
        {
          "description": "Id of the Cisco Nexus 1000v VSM device to be enabled",
          "length": 255,
          "name": "id",
          "related": "listCiscoNexusVSMs,enableCiscoNexusVSM,disableCiscoNexusVSM",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listCiscoNexusVSMs,disableCiscoNexusVSM",
      "response": [
        {
          "description": "management vlan id of the VSM",
          "name": "vsmmgmtvlanid",
          "type": "string"
        },
        {
          "description": "The Device State (Enabled/Disabled) of the VSM",
          "name": "vsmdevicestate",
          "type": "string"
        },
        {
          "description": "device id of the Cisco N1KV VSM device",
          "name": "vsmdeviceid",
          "type": "string"
        },
        {},
        {
          "description": "The Config State (Primary/Standby) of the VSM",
          "name": "vsmconfigstate",
          "type": "string"
        },
        {
          "description": "storage vlan id of the VSM",
          "name": "vsmstoragevlanid",
          "type": "int"
        },
        {
          "description": "The mode of the VSM (standalone/HA)",
          "name": "vsmconfigmode",
          "type": "string"
        },
        {},
        {
          "description": "device name",
          "name": "vsmdevicename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "control vlan id of the VSM",
          "name": "vsmctrlvlanid",
          "type": "int"
        },
        {
          "description": "packet vlan id of the VSM",
          "name": "vsmpktvlanid",
          "type": "int"
        },
        {
          "description": "device state",
          "name": "vsmdevicestate",
          "type": "string"
        },
        {
          "description": "The VSM is a switch supervisor. This is the VSM's switch domain id",
          "name": "vsmdomainid",
          "type": "string"
        },
        {
          "description": "the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Return true if the specified account is allowed to create offerings with tags.",
      "isasync": false,
      "name": "isAccountAllowedToCreateOfferingsWithTags",
      "params": [
        {
          "description": "Account UUID",
          "length": 255,
          "name": "id",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "is domain admin allowed to create offerings with tags",
          "name": "isallowed",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Dedicates a guest vlan range to an account",
      "isasync": false,
      "name": "dedicateGuestVlanRange",
      "params": [
        {
          "description": "domain ID of the account owning a VLAN",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "guest vlan range to be dedicated",
          "length": 255,
          "name": "vlanrange",
          "required": true,
          "type": "string"
        },
        {
          "description": "physical network ID of the vlan",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "project who will own the VLAN",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "account who will own the VLAN",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listDedicatedGuestVlanRanges",
      "response": [
        {
          "description": "the zone of the guest vlan range",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the guest VLAN range",
          "name": "guestvlanrange",
          "type": "string"
        },
        {
          "description": "the ID of the guest VLAN range",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the guest vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the guest VLAN range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the physical network of the guest vlan range",
          "name": "physicalnetworkid",
          "type": "long"
        },
        {
          "description": "the project name of the guest vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account of the guest VLAN range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the guest VLAN range",
          "name": "domain",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Adds VM to specified network by creating a NIC",
      "isasync": true,
      "name": "addNicToVirtualMachine",
      "params": [
        {
          "description": "IP Address for the new network",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,addNicToVirtualMachine,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "DHCP options which are passed to the nic Example: dhcpoptions[0].dhcp:114=url&dhcpoptions[0].dhcp:66=www.test.com",
          "length": 255,
          "name": "dhcpoptions",
          "required": false,
          "type": "map"
        },
        {
          "description": "Mac Address for the new network",
          "length": 255,
          "name": "macaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {},
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {},
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all static routes",
      "isasync": false,
      "name": "listStaticRoutes",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list static routes by gateway id",
          "length": 255,
          "name": "gatewayid",
          "related": "createPrivateGateway,createPrivateGateway",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list static route by id",
          "length": 255,
          "name": "id",
          "related": "listStaticRoutes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list static routes by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list static routes by vpc id",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "VPC gateway the route is created for",
          "name": "gatewayid",
          "type": "string"
        },
        {
          "description": "the ID of static route",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the static route",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with static route",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the static route",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project name of the static route",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account associated with the static route",
          "name": "account",
          "type": "string"
        },
        {
          "description": "static route CIDR",
          "name": "cidr",
          "type": "string"
        },
        {},
        {
          "description": "the domain associated with the static route",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the static route",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "VPC the static route belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists all public ip addresses",
      "isasync": false,
      "name": "listPublicIpAddresses",
      "params": [
        {
          "description": "lists all public IP addresses by zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only source NAT IP addresses",
          "length": 255,
          "name": "issourcenat",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List IPs belonging to the VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only IPs used for load balancing",
          "length": 255,
          "name": "forloadbalancing",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "limits search results to allocated public IP addresses",
          "length": 255,
          "name": "allocatedonly",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "lists all public IP addresses by VLAN ID",
          "length": 255,
          "name": "vlanid",
          "related": "createVlanIpRange,updateVlanIpRange,listVlanIpRanges,dedicatePublicIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists IP address by ID",
          "length": 255,
          "name": "id",
          "related": "associateIpAddress,listPublicIpAddresses,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists all public IP addresses associated to the network specified",
          "length": 255,
          "name": "associatednetworkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists the specified IP address",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only static NAT IP addresses",
          "length": 255,
          "name": "isstaticnat",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists all public IP addresses by source network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "since": "4.13.0",
          "type": "uuid"
        },
        {
          "description": "lists all public IP addresses by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "lists all public IP addresses by physical network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the virtual network for the IP address",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "associateIpAddress,updateIpAddress,associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "VPC id the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "virtual machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "VPC name the ip belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "virtual machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the Network where ip belongs to",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {},
        {
          "description": "virtual machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "virtual machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates an ISO file.",
      "isasync": false,
      "name": "updateIso",
      "params": [
        {
          "description": "the name of the image file",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template requires HVM, false otherwise; available only for updateTemplate API",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "true if the image supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if image is bootable, false otherwise; available only for updateIso API",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "optional boolean field, which indicates if details should be cleaned up or not (if set to true, details removed for this resource, details field ignored; if false or not set, no action)",
          "length": 255,
          "name": "cleanupdetails",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "sort key of the template, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the image file",
          "length": 255,
          "name": "id",
          "related": "prepareTemplate,listIsos,registerIso,updateIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the format for the image",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the image",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this image.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes,addGuestOs",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "prepareTemplate,listIsos,registerIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists OpenDaylight controllers",
      "isasync": false,
      "name": "listOpenDaylightControllers",
      "params": [
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of a OpenDaylight Controller",
          "length": 255,
          "name": "id",
          "related": "addOpenDaylightController,deleteOpenDaylightController,listOpenDaylightControllers",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addOpenDaylightController,deleteOpenDaylightController",
      "response": [
        {
          "description": "the name assigned to the controller",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the physical network to which this controller belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device id of the controller",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the username to authenticate to the controller",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the url of the controller api",
          "name": "url",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Adds a BigSwitch BCF Controller device",
      "isasync": true,
      "name": "addBigSwitchBcfDevice",
      "params": [
        {
          "description": "Username of the BigSwitch BCF Controller.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Password of the BigSwitch BCF Controller.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Hostname of ip address of the BigSwitch BCF Controller.",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "NAT support of the BigSwitch BCF Controller.",
          "length": 255,
          "name": "nat",
          "required": true,
          "type": "boolean"
        }
      ],
      "related": "listBigSwitchBcfDevices",
      "response": [
        {
          "description": "the controller username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the physical network to which this BigSwitch BCF segment belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device id of the BigSwitch BCF Controller",
          "name": "bcfdeviceid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {},
        {
          "description": "device name",
          "name": "bigswitchdevicename",
          "type": "string"
        },
        {
          "description": "the controller Ip address",
          "name": "hostname",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the controller password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "NAT support",
          "name": "nat",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Deletes a counter for VM auto scaling",
      "isasync": true,
      "name": "deleteCounter",
      "params": [
        {
          "description": "the ID of the counter",
          "length": 255,
          "name": "id",
          "related": "createCounter,listCounters",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Changes the default NIC on a VM",
      "isasync": true,
      "name": "updateDefaultNicForVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateDefaultNicForVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "NIC ID",
          "length": 255,
          "name": "nicid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            }
          ],
          "type": "set"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {},
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a user for an account",
      "isasync": false,
      "name": "deleteUser",
      "params": [
        {
          "description": "id of the user to be deleted",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Initiates the specified power action to the host's out-of-band management interface",
      "isasync": true,
      "name": "issueOutOfBandManagementPowerAction",
      "params": [
        {
          "description": "out-of-band management power actions, valid actions are: ON, OFF, CYCLE, RESET, SOFT, STATUS",
          "length": 255,
          "name": "action",
          "required": true,
          "type": "string"
        },
        {
          "description": "optional operation timeout in seconds that overrides the global or cluster-level out-of-band management timeout setting",
          "length": 255,
          "name": "timeout",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForHost,enableOutOfBandManagementForCluster,disableOutOfBandManagementForCluster",
      "response": [
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {},
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Issues a client certificate using configured or provided CA plugin",
      "isasync": true,
      "name": "issueCertificate",
      "params": [
        {
          "description": "Comma separated list of IP addresses, the certificate should be issued for",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "Comma separated list of domains, the certificate should be issued for. When csr is not provided, the first domain is used as a subject/CN",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Certificate validity duration in number of days, when not provided the default configured value will be used",
          "length": 255,
          "name": "duration",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The certificate signing request (in pem format), if CSR is not provided then configured/provided options are considered",
          "length": 65535,
          "name": "csr",
          "required": false,
          "type": "string"
        },
        {
          "description": "Name of the CA service provider, otherwise the default configured provider plugin will be used",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listCaCertificate",
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Private key for the certificate",
          "name": "privatekey",
          "type": "string"
        },
        {},
        {
          "description": "The client certificate",
          "name": "certificate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "The CA certificate(s)",
          "name": "cacertificates",
          "type": "string"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "Deletes network device.",
      "isasync": false,
      "name": "deleteNetworkDevice",
      "params": [
        {
          "description": "Id of network device to delete",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates image store read-only status",
      "isasync": false,
      "name": "updateImageStore",
      "params": [
        {
          "description": "If set to true, it designates the corresponding image store to read-only, hence not considering them during storage migration",
          "length": 255,
          "name": "readonly",
          "required": true,
          "type": "boolean"
        },
        {
          "description": "Image Store UUID",
          "length": 255,
          "name": "id",
          "related": "addSecondaryStorage,listSwifts,updateImageStore,addImageStore,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addSecondaryStorage,listSwifts,addImageStore,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
      "response": [
        {},
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Creates a port forwarding rule",
      "isasync": true,
      "name": "createPortForwardingRule",
      "params": [
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VM guest nic secondary IP address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the protocol for the port forwarding rule. Valid values are TCP or UDP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "length": 255,
          "name": "publicendport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine for the port forwarding rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "if true, firewall rule for source/end public port is automatically created; if false - firewall rule has to be created explicitly. If not specified 1) defaulted to false when PF rule is being created for VPC guest network 2) in all other cases defaulted to true",
          "length": 255,
          "name": "openfirewall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries must be separated by a single comma character (,). This parameter is deprecated. Do not use.",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "length": 255,
          "name": "publicport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "length": 255,
          "name": "privateendport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the network of the virtual machine the port forwarding rule will be created for. Required when public IP address is not associated with any guest network yet (VPC case).",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "length": 255,
          "name": "privateport",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listPortForwardingRules,updatePortForwardingRule,createIpv6FirewallRule,updateIpv6FirewallRule",
      "response": [
        {},
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {},
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "load template into primary storage",
      "isasync": false,
      "name": "prepareTemplate",
      "params": [
        {
          "description": "template ID of the template to be prepared in primary storage(s).",
          "length": 255,
          "name": "templateid",
          "related": "prepareTemplate,listIsos,registerIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "storage pool ID of the primary storage pool to which the template should be prepared. If it is not provided the template is prepared on all the available primary storage pools.",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "zone ID of the template to be prepared in primary storage(s).",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsos,registerIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {},
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Dedicates a zones.",
      "isasync": true,
      "name": "dedicateZone",
      "params": [
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain ID to which the Zone is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the Name of the Zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Dedication Affinity Group ID of the zone",
          "name": "affinitygroupid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Zone is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Assigns virtual machine or a list of virtual machines to a load balancer rule.",
      "isasync": true,
      "name": "assignToLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listPortForwardingRules,updatePortForwardingRule,createIpv6FirewallRule,updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75",
          "length": 255,
          "name": "vmidipmap",
          "required": false,
          "since": "4.4",
          "type": "map"
        },
        {
          "description": "the list of IDs of the virtual machine that are being assigned to the load balancer rule(i.e. virtualMachineIds=1,2,3)",
          "length": 255,
          "name": "virtualmachineids",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all pending asynchronous jobs for the account.",
      "isasync": false,
      "name": "listAsyncJobs",
      "params": [
        {
          "description": "The start date of the async job (use format \"yyyy-MM-dd'T'HH:mm:ss'+'SSSS\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "queryAsyncJobResult",
      "response": [
        {},
        {
          "description": "the result code for the job",
          "name": "jobresultcode",
          "type": "integer"
        },
        {
          "description": "the user that executed the async command",
          "name": "userid",
          "type": "string"
        },
        {},
        {
          "description": "the unique ID of the instance/entity object related to the job",
          "name": "jobinstanceid",
          "type": "string"
        },
        {
          "description": "the result reason",
          "name": "jobresult",
          "type": "responseobject"
        },
        {
          "description": "the instance/entity object related to the job",
          "name": "jobinstancetype",
          "type": "string"
        },
        {
          "description": "the account that executed the async command",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the result type",
          "name": "jobresulttype",
          "type": "string"
        },
        {
          "description": "the current job status-should be 0 for PENDING",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the async command executed",
          "name": "cmd",
          "type": "string"
        },
        {
          "description": "the progress information of the PENDING job",
          "name": "jobprocstatus",
          "type": "integer"
        },
        {
          "description": "  the created date of the job",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "  the completed date of the job",
          "name": "completed",
          "type": "date"
        }
      ]
    },
    {
      "description": "Archive one or more alerts.",
      "isasync": false,
      "name": "archiveAlerts",
      "params": [
        {
          "description": "end date range to archive alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "start date range to archive alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "archive by alert type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the alerts",
          "length": 255,
          "name": "ids",
          "related": "listAlerts",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Deletes a Cisco Vnmc controller",
      "isasync": false,
      "name": "deleteCiscoVnmcResource",
      "params": [
        {
          "description": "Cisco Vnmc resource ID",
          "length": 255,
          "name": "resourceid",
          "related": "listCiscoVnmcResources",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Stops an Internal LB vm.",
      "isasync": true,
      "name": "stopInternalLoadBalancerVM",
      "params": [
        {
          "description": "Force stop the VM. The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the internal lb vm",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,changeServiceForRouter,stopInternalLoadBalancerVM,listInternalLoadBalancerVMs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter,listRouters,changeServiceForRouter,listInternalLoadBalancerVMs",
      "response": [
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {},
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {},
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a Brocade VCS Switch",
      "isasync": true,
      "name": "addBrocadeVcsDevice",
      "params": [
        {
          "description": "Credentials to access the Brocade VCS Switch API",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to access the Brocade VCS Switch API",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Hostname of ip address of the Brocade VCS Switch.",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listBrocadeVcsDevices",
      "response": [
        {
          "description": "the physical Network to which this Brocade VCS belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the principal switch Ip address",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "device name",
          "name": "brocadedevicename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "device id of the Brocade Vcs",
          "name": "vcsdeviceid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a security group",
      "isasync": false,
      "name": "updateSecurityGroup",
      "params": [
        {
          "description": "The ID of the security group.",
          "length": 255,
          "name": "id",
          "related": "createSecurityGroup,updateSecurityGroup",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "The new name of the security group.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createSecurityGroup",
      "response": [
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the list of virtualmachine ids associated with this securitygroup",
          "name": "virtualmachineids",
          "type": "set"
        },
        {
          "description": "the account owning the security group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the description of the security group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain ID of the security group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the security group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the number of virtualmachines associated with this securitygroup",
          "name": "virtualmachinecount",
          "type": "integer"
        },
        {},
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the domain name of the security group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of ingress rules associated with the security group",
          "name": "ingressrule",
          "response": [
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the list of egress rules associated with the security group",
          "name": "egressrule",
          "response": [
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the security group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        }
      ],
      "since": "4.14.0.0"
    },
    {
      "description": "Creates a domain",
      "isasync": false,
      "name": "createDomain",
      "params": [
        {
          "description": "Domain UUID, required for adding domain from another Region",
          "length": 255,
          "name": "domainid",
          "required": false,
          "type": "string"
        },
        {
          "description": "assigns new domain a parent domain by domain ID of the parent.  If no parent domain is specified, the ROOT domain is assumed.",
          "length": 255,
          "name": "parentdomainid",
          "related": "createDomain,listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Network domain for networks in the domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "creates domain with this name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listDomainChildren,listDomains,listDomains",
      "response": [
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the date when this domain was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "details for the domain",
          "name": "domaindetails",
          "type": "map"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        }
      ]
    },
    {
      "description": "Deleting resource tag(s)",
      "isasync": true,
      "name": "deleteTags",
      "params": [
        {
          "description": "Delete tags for resource id(s)",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Delete tags matching key/value pairs",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "Delete tag by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "create Tungsten-Fabric tag type",
      "isasync": true,
      "name": "createTungstenFabricTagType",
      "params": [
        {
          "description": "Tungsten-Fabric tag type name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listTungstenFabricTagType",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric tag type name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Restarts the network; includes 1) restarting network elements - virtual routers, DHCP servers 2) reapplying all public IPs 3) reapplying loadBalancing/portForwarding rules",
      "isasync": true,
      "name": "restartNetwork",
      "params": [
        {
          "description": "Turn the network into a network with redundant routers.",
          "length": 255,
          "name": "makeredundant",
          "required": false,
          "since": "4.11.1",
          "type": "boolean"
        },
        {
          "description": "The ID of the network to restart.",
          "length": 255,
          "name": "id",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "If cleanup old network elements",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Live patches the router software before restarting it. This parameter will only work when 'cleanup' is false.",
          "length": 255,
          "name": "livepatch",
          "required": false,
          "since": "4.17.0",
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Logs a user into the CloudStack. A successful login attempt will generate a JSESSIONID cookie value that can be passed in subsequent Query command calls until the \"logout\" command has been issued or the session has expired.",
      "isasync": false,
      "name": "login",
      "params": [
        {
          "description": "The id of the domain that the user belongs to. If both domain and domainId are passed in, \"domainId\" parameter takes precendence",
          "length": 255,
          "name": "domainId",
          "required": false,
          "type": "long"
        },
        {
          "description": "Path of the domain that the user belongs to. Example: domain=/com/cloud/internal. If no domain is passed in, the ROOT (/) domain is assumed.",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Username",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Hashed password (Default is MD5). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the time period before the session has expired",
          "name": "timeout",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Is two factor authentication enabled",
          "name": "is2faenabled",
          "type": "string"
        },
        {
          "description": "the account name the user belongs to",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "Is user registered",
          "name": "registered",
          "type": "string"
        },
        {
          "description": "Session key that can be passed in subsequent Query command calls",
          "name": "sessionkey",
          "type": "string"
        },
        {
          "description": "last name of the user",
          "name": "lastname",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the account type (admin, domain-admin, read-only-admin, user)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "Two factor authentication issuer",
          "name": "issuerfor2fa",
          "type": "string"
        },
        {
          "description": "user time zone",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "first name of the user",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "Is two factor authentication verified",
          "name": "is2faverified",
          "type": "string"
        },
        {
          "description": "User ID",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "Domain ID that the user belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "user time zoneoffset",
          "name": "timezoneoffset",
          "type": "string"
        },
        {
          "description": "Two factor authentication provider",
          "name": "providerfor2fa",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists all hypervisor capabilities.",
      "isasync": false,
      "name": "listHypervisorCapabilities",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the hypervisor capability",
          "length": 255,
          "name": "id",
          "related": "listHypervisorCapabilities",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if security group is supported",
          "name": "securitygroupenabled",
          "type": "boolean"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the maximum number of Hosts per cluster for this hypervisor",
          "name": "maxhostspercluster",
          "type": "integer"
        },
        {
          "description": "the maximum number of Data Volumes that can be attached for this hypervisor",
          "name": "maxdatavolumeslimit",
          "type": "integer"
        },
        {
          "description": "the hypervisor type",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the maximum number of guest vms recommended for this hypervisor",
          "name": "maxguestslimit",
          "type": "long"
        },
        {
          "description": "the ID of the hypervisor capabilities row",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if storage motion is supported",
          "name": "storagemotionenabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if VM snapshots are enabled for this hypervisor",
          "name": "vmsnapshotenabled",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Adds backup image store.",
      "isasync": false,
      "name": "addImageStore",
      "params": [
        {
          "description": "the name for the image store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the image store provider name",
          "length": 255,
          "name": "provider",
          "required": true,
          "type": "string"
        },
        {
          "description": "the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the URL for the image store",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the image store",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addSecondaryStorage,listSwifts,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Revoke a direct download certificate from hosts in a zone",
      "isasync": false,
      "name": "revokeTemplateDirectDownloadCertificate",
      "params": [
        {
          "description": "(optional) the host ID to revoke certificate",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "(optional) zone to revoke certificate",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "(optional) hypervisor type",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the certificate",
          "length": 255,
          "name": "id",
          "related": "uploadTemplateDirectDownloadCertificate,listTemplateDirectDownloadCertificates",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "(optional) alias of the SSL certificate",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "provisionTemplateDirectDownloadCertificate",
      "response": [
        {},
        {},
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "indicates if the certificate has been revoked from the host, failed or skipped",
          "name": "status",
          "type": "string"
        },
        {
          "description": "indicates the details in case of failure or host skipped",
          "name": "details",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "hostname",
          "type": "string"
        }
      ],
      "since": "4.13"
    },
    {
      "description": "Syncs capabilities of storage pools",
      "isasync": false,
      "name": "updateStorageCapabilities",
      "params": [
        {
          "description": "Storage pool id",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool,updateStorageCapabilities",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
      "response": [
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {},
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        }
      ],
      "since": "4.16.0"
    },
    {
      "description": "Delete Project roles in CloudStack",
      "isasync": false,
      "name": "deleteProjectRole",
      "params": [
        {
          "description": "ID of the project role to be deleted",
          "length": 255,
          "name": "id",
          "related": "createProjectRole,listProjectRoles,updateProjectRole",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the project from where the role is to be deleted",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ],
      "since": "4.15.0"
    },
    {
      "description": "Changes ownership of a Volume from one account to another.",
      "isasync": false,
      "name": "assignVolume",
      "params": [
        {
          "description": "The ID of the project to which the volume will be assigned. Mutually exclusive with 'accountid'.",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the account to which the volume will be assigned. Mutually exclusive with parameter 'projectid'.",
          "length": 255,
          "name": "accountid",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the volume to be reassigned.",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume,assignVolume",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {},
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        }
      ],
      "since": "4.18.0.0"
    },
    {
      "description": "Deletes a userdata",
      "isasync": false,
      "name": "deleteUserData",
      "params": [
        {
          "description": "an optional domainId for the userdata. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the userdata. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the userdata",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Userdata",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.18"
    },
    {
      "description": "Get SolidFire Account ID",
      "isasync": false,
      "name": "getSolidFireAccountId",
      "params": [
        {
          "description": "CloudStack Account UUID",
          "length": 255,
          "name": "accountid",
          "required": true,
          "type": "string"
        },
        {
          "description": "Storage Pool UUID",
          "length": 255,
          "name": "storageid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "SolidFire Account ID",
          "name": "solidFireAccountId",
          "type": "long"
        }
      ]
    },
    {
      "description": "Lists role permissions",
      "isasync": false,
      "name": "listRolePermissions",
      "params": [
        {
          "description": "ID of the role",
          "length": 255,
          "name": "roleid",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the api name or wildcard rule",
          "name": "rule",
          "type": "string"
        },
        {
          "description": "the description of the role permission",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the role permission",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the permission type of the api name or wildcard rule, allow/deny",
          "name": "permission",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the name of the role to which the role permission belongs",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the ID of the role to which the role permission belongs",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Lists all network services provided by CloudStack or for the given Provider.",
      "isasync": false,
      "name": "listSupportedNetworkServices",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "network service name to list providers and capabilities of",
          "length": 255,
          "name": "service",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "network service provider name",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the service provider name",
          "name": "provider",
          "response": [
            {
              "description": "true if individual services can be enabled/disabled",
              "name": "canenableindividualservice",
              "type": "boolean"
            },
            {
              "description": "the provider name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "uuid of the network provider",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the physical network this belongs to",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "the destination physical network",
              "name": "destinationphysicalnetworkid",
              "type": "string"
            },
            {
              "description": "state of the network provider",
              "name": "state",
              "type": "string"
            },
            {
              "description": "services for this provider",
              "name": "servicelist",
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of capabilities",
          "name": "capability",
          "response": [
            {
              "description": "can this service capability value can be choosable while creatine network offerings",
              "name": "canchooseservicecapability",
              "type": "boolean"
            },
            {
              "description": "the capability name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the capability value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the service name",
          "name": "name",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a particular ingress rule from this security group",
      "isasync": true,
      "name": "revokeSecurityGroupIngress",
      "params": [
        {
          "description": "The ID of the ingress rule",
          "length": 255,
          "name": "id",
          "related": "authorizeSecurityGroupIngress",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Lists dedicated guest vlan ranges",
      "isasync": false,
      "name": "listDedicatedGuestVlanRanges",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "project who will own the guest VLAN range",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the domain ID with which the guest VLAN range is associated.  If used with the account parameter, returns all guest VLAN ranges for that account in the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list dedicated guest vlan ranges by id",
          "length": 255,
          "name": "id",
          "related": "listDedicatedGuestVlanRanges",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "physical network id of the guest VLAN range",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "zone of the guest VLAN range",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the dedicated guest vlan range",
          "length": 255,
          "name": "guestvlanrange",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the account with which the guest VLAN range is associated. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the project name of the guest vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the guest VLAN range",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the account of the guest VLAN range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the guest VLAN range",
          "name": "guestvlanrange",
          "type": "string"
        },
        {
          "description": "the physical network of the guest vlan range",
          "name": "physicalnetworkid",
          "type": "long"
        },
        {
          "description": "the project id of the guest vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain name of the guest VLAN range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID of the guest VLAN range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the zone of the guest vlan range",
          "name": "zoneid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Adds a network serviceProvider to a physical network",
      "isasync": true,
      "name": "addNetworkServiceProvider",
      "params": [
        {
          "description": "the list of services to be enabled for this physical network service provider",
          "length": 255,
          "name": "servicelist",
          "required": false,
          "type": "list"
        },
        {
          "description": "the destination Physical Network ID to bridge to",
          "length": 255,
          "name": "destinationphysicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Physical Network ID to add the provider to",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name for the physical network service provider",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listNetworkServiceProviders,listTrafficTypes",
      "response": [
        {},
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {},
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        },
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all network ACL items",
      "isasync": false,
      "name": "listNetworkACLs",
      "params": [
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list network ACL items by ACL ID",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network ACL items by network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listNiciraNvpDeviceNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network ACL items by protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network ACL items by action",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "Lists network ACL Item with the specified ID",
          "length": 255,
          "name": "id",
          "related": "createNetworkACL,listNetworkACLs,updateNetworkACLItem,moveNetworkAclItem",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network ACL items by traffic type - ingress or egress",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createNetworkACL,updateNetworkACLItem,moveNetworkAclItem",
      "response": [
        {},
        {
          "description": "the name of the ACL this item belongs to",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "an explanation on why this ACL rule is being applied",
          "name": "reason",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Delete site to site vpn gateway",
      "isasync": true,
      "name": "deleteVpnGateway",
      "params": [
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnGateway,listVpnGateways,updateVpnGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a service offering.",
      "isasync": false,
      "name": "createServiceOffering",
      "params": [
        {
          "description": "burst bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "The deployment planner heuristics used to deploy a VM of this offering. If null, value of global config vm.deployment.planner is used",
          "length": 255,
          "name": "deploymentplanner",
          "required": false,
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "The minimum memory size of the custom service offering in MB",
          "length": 255,
          "name": "minmemory",
          "required": false,
          "since": "4.13",
          "type": "integer"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "length": 255,
          "name": "limitcpuuse",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "True/False to indicate the strictness of the disk offering association with the compute offering. When set to true, override of disk offering is not allowed when VM is deployed and change disk offering is not allowed for the ROOT disk after the VM is deployed",
          "length": 255,
          "name": "diskofferingstrictness",
          "required": false,
          "since": "4.17",
          "type": "boolean"
        },
        {
          "description": "the total memory of the service offering in MB",
          "length": 255,
          "name": "memory",
          "required": false,
          "type": "integer"
        },
        {
          "description": "bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "the CPU number of the service offering",
          "length": 255,
          "name": "cpunumber",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Whether service offering size is custom or not",
          "length": 255,
          "name": "customized",
          "required": false,
          "since": "4.13",
          "type": "boolean"
        },
        {
          "description": "Name of the storage policy defined at vCenter, this is applicable only for VMware",
          "length": 255,
          "name": "storagepolicy",
          "related": "listVsphereStoragePolicies",
          "required": false,
          "since": "4.15",
          "type": "uuid"
        },
        {
          "description": "max iops of the compute offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "since": "4.4",
          "type": "long"
        },
        {
          "description": "The maximum memory size of the custom service offering in MB",
          "length": 255,
          "name": "maxmemory",
          "required": false,
          "since": "4.13",
          "type": "integer"
        },
        {
          "description": "the ID of the containing zone(s), null for public offerings",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "since": "4.13",
          "type": "list"
        },
        {
          "description": "whether compute offering iops is custom or not",
          "length": 255,
          "name": "customizediops",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "The minimum number of CPUs to be set with Custom Computer Offering",
          "length": 255,
          "name": "mincpunumber",
          "required": false,
          "since": "4.13",
          "type": "integer"
        },
        {
          "description": "the name of the service offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Root disk size in GB.",
          "length": 255,
          "name": "rootdisksize",
          "required": false,
          "since": "4.15",
          "type": "long"
        },
        {
          "description": "the system VM type. Possible types are \"domainrouter\", \"consoleproxy\" and \"secondarystoragevm\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriteratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "length": 255,
          "name": "provisioningtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "is this a system vm offering",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the HA for the service offering",
          "length": 255,
          "name": "offerha",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "VMs using this offering require root volume encryption",
          "length": 255,
          "name": "encryptroot",
          "required": false,
          "since": "4.18",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering to which service offering should be mapped",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,listDiskOfferings",
          "required": false,
          "since": "4.17",
          "type": "uuid"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "length": 255,
          "name": "cachemode",
          "required": false,
          "since": "4.14",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "bytesreadratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "the CPU speed of the service offering in MHz.",
          "length": 255,
          "name": "cpuspeed",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "length": 255,
          "name": "hypervisorsnapshotreserve",
          "required": false,
          "since": "4.4",
          "type": "integer"
        },
        {
          "description": "details for planner, used to store specific parameters",
          "length": 255,
          "name": "serviceofferingdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "the display text of the service offering",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed. Supported only for non-System offering and system offerings having \"domainrouter\" systemvmtype",
          "length": 255,
          "name": "networkrate",
          "required": false,
          "type": "integer"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "iopswriteratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "byteswriteratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "true if virtual machine needs to be dynamically scalable of cpu or memory",
          "length": 255,
          "name": "dynamicscalingenabled",
          "required": false,
          "since": "4.16",
          "type": "boolean"
        },
        {
          "description": "burst requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "true if the virtual machine needs to be volatile so that on every reboot of VM, original root disk is dettached then destroyed and a fresh root disk is created and attached to VM",
          "length": 255,
          "name": "isvolatile",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the host tag for this service offering.",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the storage type of the service offering. Values are local and shared.",
          "length": 255,
          "name": "storagetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "io requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "iopsreadratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "the tags for this service offering.",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriteratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "min iops of the compute offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "since": "4.4",
          "type": "long"
        },
        {
          "description": "The maximum number of CPUs to be set with Custom Computer Offering",
          "length": 255,
          "name": "maxcpunumber",
          "required": false,
          "since": "4.13",
          "type": "integer"
        },
        {
          "description": "the ID of the containing domain(s), null for public offerings",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "list"
        }
      ],
      "related": "updateServiceOffering,listServiceOfferings",
      "response": [
        {
          "description": "length (in second) of the burst",
          "name": "diskIopsReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if virtual machine needs to be dynamically scalable of cpu or memory",
          "name": "dynamicscalingenabled",
          "type": "boolean"
        },
        {
          "description": "burst io requests read rate of the disk offering",
          "name": "diskIopsReadRateMax",
          "type": "long"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the tags for the service offering",
          "name": "storagetags",
          "type": "string"
        },
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "is true if the offering is customized",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "Root disk size in GB",
          "name": "rootdisksize",
          "type": "long"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "name": "diskIopsWriteRateMax",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        },
        {
          "description": "the vsphere storage policy tagged to the service offering in case of VMware",
          "name": "vspherestoragepolicy",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskIopsWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "name": "diskBytesReadRateMax",
          "type": "long"
        },
        {},
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "True/False to indicate the strictness of the disk offering association with the compute offering. When set to true, override of disk offering is not allowed when VM is deployed and change disk offering is not allowed for the ROOT disk after the VM is deployed",
          "name": "diskofferingstrictness",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering to which service offering is linked",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "true if virtual machine root disk will be encrypted on storage",
          "name": "encryptroot",
          "type": "boolean"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "name": "diskBytesWriteRateMax",
          "type": "long"
        },
        {},
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the clock rate CPU speed in Mhz",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        }
      ]
    },
    {
      "description": "Copies a template from one zone to another.",
      "isasync": true,
      "name": "copyTemplate",
      "params": [
        {
          "description": "ID of the zone the template is being copied to.",
          "length": 255,
          "name": "destzoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "A list of IDs of the zones that the template needs to be copied to.Specify this list if the template needs to copied to multiple zones in one go. Do not specify destzoneid and destzoneids together, however one of them is required.",
          "length": 255,
          "name": "destzoneids",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "list"
        },
        {
          "description": "Template ID.",
          "length": 255,
          "name": "id",
          "related": "listIsos,registerIso,copyTemplate,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the zone the template is currently hosted on. If not specified and template is cross-zone, then we will sync this template to region wide image store.",
          "length": 255,
          "name": "sourcezoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listIsos,registerIso,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {},
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        }
      ]
    },
    {
      "description": "lists network that are using a nicira nvp device",
      "isasync": false,
      "name": "listNiciraNvpDeviceNetworks",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "nicira nvp device ID",
          "length": 255,
          "name": "nvpdeviceid",
          "related": "addNiciraNvpDevice,listNiciraNvpDevices",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
      "response": [
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {},
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {},
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Change ownership of a VM from one account to another. This API is available for Basic zones with security groups and Advanced zones with guest networks. A root administrator can reassign a VM from any account to any other account in any domain. A domain administrator can reassign a VM to any account in the same domain.",
      "isasync": false,
      "name": "assignVirtualMachine",
      "params": [
        {
          "description": "list of security group ids to be applied on the virtual machine. In case no security groups are provided the VM is part of the default security group.",
          "length": 255,
          "name": "securitygroupids",
          "related": "createSecurityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "domain id of the new VM owner.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list of new network ids in which the moved VM will participate. In case no network ids are provided the VM will be part of the default network for that zone. In case there is no network yet created for the new account the default network will be created.",
          "length": 255,
          "name": "networkids",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "list"
        },
        {
          "description": "account name of the new VM owner.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the new VM owner.",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "id of the VM to be moved",
          "length": 255,
          "name": "virtualmachineid",
          "related": "assignVirtualMachine,migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {},
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": " delete a BigSwitch BCF Controller device",
      "isasync": true,
      "name": "deleteBigSwitchBcfDevice",
      "params": [
        {
          "description": "BigSwitch device ID",
          "length": 255,
          "name": "bcfdeviceid",
          "related": "listBigSwitchBcfDevices",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "configures a netscaler load balancer device",
      "isasync": true,
      "name": "configureNetscalerLoadBalancer",
      "params": [
        {
          "description": "true if netscaler load balancer is intended to be used in in-line with firewall, false if netscaler load balancer will side-by-side with firewall",
          "length": 255,
          "name": "inline",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this netscaler device to dedicated for a account, false if the netscaler device will be shared by multiple accounts",
          "length": 255,
          "name": "lbdevicededicated",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device.",
          "length": 255,
          "name": "podids",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "list"
        },
        {
          "description": "capacity of the device, Capacity will be interpreted as number of networks device can handle",
          "length": 255,
          "name": "lbdevicecapacity",
          "required": false,
          "type": "long"
        },
        {
          "description": "Netscaler load balancer device ID",
          "length": 255,
          "name": "lbdeviceid",
          "related": "addNetscalerLoadBalancer,configureNetscalerLoadBalancer,listNetscalerLoadBalancers,registerNetscalerControlCenter,deployNetscalerVpx",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addNetscalerLoadBalancer,listNetscalerLoadBalancers,registerNetscalerControlCenter,deployNetscalerVpx",
      "response": [
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the physical network to which this netscaler device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device capacity",
          "name": "lbdevicecapacity",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if NetScaler device is provisioned exclusively to be a GSLB service provider",
          "name": "isexclusivegslbprovider",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "private IP of the NetScaler representing GSLB site",
          "name": "gslbproviderprivateip",
          "type": "string"
        },
        {
          "description": "device id of the netscaler load balancer",
          "name": "lbdeviceid",
          "type": "string"
        },
        {
          "description": "public IP of the NetScaler representing GSLB site",
          "name": "gslbproviderpublicip",
          "type": "string"
        },
        {
          "description": "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device.",
          "name": "podids",
          "type": "list"
        },
        {},
        {},
        {
          "description": "true if device is dedicated for an account",
          "name": "lbdevicededicated",
          "type": "boolean"
        },
        {
          "description": "the public interface of the load balancer",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "lbdevicename",
          "type": "string"
        },
        {
          "description": "the management IP address of the external load balancer",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the private interface of the load balancer",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "device state",
          "name": "lbdevicestate",
          "type": "string"
        },
        {
          "description": "true if NetScaler device is provisioned to be a GSLB service provider",
          "name": "gslbprovider",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists all available ovs elements.",
      "isasync": false,
      "name": "listOvsElements",
      "params": [
        {
          "description": "list network offerings by enabled state",
          "length": 255,
          "name": "enabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list ovs elements by network service provider id",
          "length": 255,
          "name": "nspid",
          "related": "listNetworkServiceProviders,listTrafficTypes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list ovs elements by id",
          "length": 255,
          "name": "id",
          "related": "listOvsElements,configureOvsElement",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "configureOvsElement",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the ovs",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "delete Tungsten-Fabric service group",
      "isasync": true,
      "name": "deleteTungstenFabricServiceGroup",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric service group",
          "length": 255,
          "name": "servicegroupuuid",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "associate a profile to a blade",
      "isasync": true,
      "name": "associateUcsProfileToBlade",
      "params": [
        {
          "description": "ucs manager id",
          "length": 255,
          "name": "ucsmanagerid",
          "related": "listUcsManagers,addUcsManager",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "profile dn",
          "length": 255,
          "name": "profiledn",
          "required": true,
          "type": "string"
        },
        {
          "description": "blade id",
          "length": 255,
          "name": "bladeid",
          "related": "associateUcsProfileToBlade",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "ucs manager id",
          "name": "ucsmanagerid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "cloudstack host id this blade associates to",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "ucs blade dn",
          "name": "bladedn",
          "type": "string"
        },
        {
          "description": "ucs blade id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "associated ucs profile dn",
          "name": "profiledn",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes user from the project",
      "isasync": true,
      "name": "deleteUserFromProject",
      "params": [
        {
          "description": "ID of the project to remove the user from",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Id of the user to be removed from the project",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Updates a VMware datacenter details for a zone",
      "isasync": false,
      "name": "updateVmwareDc",
      "params": [
        {
          "description": "The name/IP of vCenter. Make sure it is IP address or full qualified domain name for host running vCenter server.",
          "length": 255,
          "name": "vcenter",
          "required": false,
          "type": "string"
        },
        {
          "description": "The zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Specify if cluster level username/password/url and host level guid need to be updated as well. By default this is true.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "VMware datacenter name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The password for specified username.",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "The username required to connect to resource.",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addVmwareDc,listVmwareDcs",
      "response": [
        {
          "description": "The VMware Datacenter name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "The VMware Datacenter ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "The VMware vCenter name/ip",
          "name": "vcenter",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the Zone ID associated with this VMware Datacenter",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.12.0"
    },
    {
      "description": "Checks the 2FA code for the user.",
      "isasync": false,
      "name": "validateUserTwoFactorAuthenticationCode",
      "params": [
        {
          "description": "two factor authentication code",
          "length": 255,
          "name": "codefor2fa",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Starts a router.",
      "isasync": false,
      "name": "getRouterHealthCheckResults",
      "params": [
        {
          "description": "if true is passed for this parameter, health checks are performed on the fly. Else last performed checks data is fetched",
          "length": 255,
          "name": "performfreshchecks",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "routerid",
          "related": "destroyRouter,listRouters,changeServiceForRouter,listInternalLoadBalancerVMs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the id of the router",
          "name": "healthchecks",
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "routerid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {}
      ],
      "since": "4.14.0"
    },
    {
      "description": "list control center",
      "isasync": false,
      "name": "listNetscalerControlCenter",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "ncc_ip",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "id",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "num_retries",
          "name": "numretries",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resizes a volume",
      "isasync": true,
      "name": "resizeVolume",
      "params": [
        {
          "description": "New maximum number of IOPS",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "Verify OK to Shrink",
          "length": 255,
          "name": "shrinkok",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "New volume size in GB",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "New minimum number of IOPS",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "new disk offering id",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,listDiskOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,resizeVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {},
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes affinity group",
      "isasync": true,
      "name": "deleteAffinityGroup",
      "params": [
        {
          "description": "the project of the affinity group",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account of the affinity group. Must be specified with domain ID",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the affinity group. Mutually exclusive with name parameter",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The name of the affinity group. Mutually exclusive with ID parameter",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID of account owning the affinity group",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Deletes a network offering.",
      "isasync": false,
      "name": "deleteNetworkOffering",
      "params": [
        {
          "description": "the ID of the network offering",
          "length": 255,
          "name": "id",
          "related": "listNetworkOfferings",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a Network Service Provider.",
      "isasync": true,
      "name": "deleteNetworkServiceProvider",
      "params": [
        {
          "description": "the ID of the network service provider",
          "length": 255,
          "name": "id",
          "related": "listNetworkServiceProviders,listTrafficTypes",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "List network devices",
      "isasync": false,
      "name": "listNetworkDevice",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "parameters for network device",
          "length": 255,
          "name": "networkdeviceparameterlist",
          "required": false,
          "type": "map"
        },
        {
          "description": "Network device type, now supports ExternalDhcp, PxeServer, NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer, F5BigIpLoadBalancer, JuniperSRXFirewall, PaloAltoFirewall",
          "length": 255,
          "name": "networkdevicetype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addNetworkDevice",
      "response": [
        {
          "description": "the ID of the network device",
          "name": "id",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Update a Storage network IP range, only allowed when no IPs in this range have been allocated.",
      "isasync": true,
      "name": "updateStorageNetworkIpRange",
      "params": [
        {
          "description": "Optional. the vlan the ip range sits on",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ending IP address",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "UUID of storage network ip range",
          "length": 255,
          "name": "id",
          "related": "createStorageNetworkIpRange,listStorageNetworkIpRange,updateStorageNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the netmask for storage network",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IP address",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createStorageNetworkIpRange,listStorageNetworkIpRange",
      "response": [
        {
          "description": "the end ip of the storage network IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the uuid of storage network IP range.",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod uuid for the storage network IP range",
          "name": "podid",
          "type": "string"
        },
        {},
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "integer"
        },
        {
          "description": "the network uuid of storage network IP range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the start ip of the storage network IP range",
          "name": "startip",
          "type": "string"
        },
        {},
        {
          "description": "the netmask of the storage network IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the gateway of the storage network IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Zone uuid of the storage network IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Dedicates a Pod.",
      "isasync": true,
      "name": "dedicatePod",
      "params": [
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listDedicatedPods",
      "response": [
        {},
        {},
        {
          "description": "the ID of the Pod",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Name of the Pod",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Pod is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the pod",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the domain ID to which the Pod is dedicated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Project roles in CloudStack",
      "isasync": false,
      "name": "listProjectRoles",
      "params": [
        {
          "description": "List project role by project role ID.",
          "length": 255,
          "name": "projectroleid",
          "related": "createProjectRole,listProjectRoles,updateProjectRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List project role by project role name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List project role by project ID.",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createProjectRole,updateProjectRole",
      "response": [
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "projectid",
          "type": "string"
        },
        {}
      ],
      "since": "4.15.0"
    },
    {
      "description": "Removes an OpenDaylight controller",
      "isasync": true,
      "name": "deleteOpenDaylightController",
      "params": [
        {
          "description": "OpenDaylight Controller ID",
          "length": 255,
          "name": "id",
          "related": "addOpenDaylightController,deleteOpenDaylightController",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addOpenDaylightController",
      "response": [
        {
          "description": "the name assigned to the controller",
          "name": "name",
          "type": "string"
        },
        {
          "description": "device id of the controller",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the url of the controller api",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the username to authenticate to the controller",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the physical network to which this controller belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates attributes of a template.",
      "isasync": false,
      "name": "updateTemplate",
      "params": [
        {
          "description": "the display text of the image",
          "length": 4096,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the image file",
          "length": 255,
          "name": "id",
          "related": "listIsos,registerIso,createTemplate,registerTemplate,updateTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the image file",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the format for the image",
          "length": 255,
          "name": "format",
          "required": false,
          "type": "string"
        },
        {
          "description": "the type of the template",
          "length": 255,
          "name": "templatetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this image.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes,addGuestOs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "sort key of the template, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if image is bootable, false otherwise; available only for updateIso API",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template requires HVM, false otherwise; available only for updateTemplate API",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if template/ISO contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "optional boolean field, which indicates if details should be cleaned up or not (if set to true, details removed for this resource, details field ignored; if false or not set, no action)",
          "length": 255,
          "name": "cleanupdetails",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the image supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listIsos,registerIso,createTemplate,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates a VLAN IP range.",
      "isasync": false,
      "name": "createVlanIpRange",
      "params": [
        {
          "description": "the CIDR of IPv6 network, must be at least /64",
          "length": 255,
          "name": "ip6cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "startipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if IP range is set to system vms, false if not",
          "length": 255,
          "name": "forsystemvms",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "project who will own the VLAN. If VLAN is Zone wide, this parameter should be omitted",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the physical network id",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "endipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "account who will own the VLAN. If VLAN is Zone wide, this parameter should be omitted",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "optional parameter. Have to be specified for Direct Untagged vlan only.",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending IP address in the VLAN IP range",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the IPv6 network. Required for Shared networks and Isolated networks when it belongs to VPC",
          "length": 255,
          "name": "ip6gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN. If not specified, will be defaulted to the vlan of the network or if vlan of the network is null - to Untagged",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if VLAN is of Virtual type, false if Direct",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "domain ID of the account owning a VLAN",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the beginning IP address in the VLAN IP range",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network id",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listPaloAltoFirewallNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateVlanIpRange,listVlanIpRanges,dedicatePublicIpRange",
      "response": [
        {},
        {
          "description": "the cidr of the VLAN IP range",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "indicates whether VLAN IP range is dedicated to system vms or not",
          "name": "forsystemvms",
          "type": "boolean"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {},
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates site to site vpn connection",
      "isasync": true,
      "name": "updateVpnConnection",
      "params": [
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "createVpnConnection,listVpnConnections,updateVpnConnection",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createVpnConnection,listVpnConnections",
      "response": [
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {},
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Split multiple remote networks into multiple phase 2 SAs. Often used with Cisco some products.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "lists network that are using Palo Alto firewall device",
      "isasync": false,
      "name": "listPaloAltoFirewallNetworks",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "palo alto balancer device ID",
          "length": 255,
          "name": "lbdeviceid",
          "related": "addPaloAltoFirewall,configurePaloAltoFirewall,listPaloAltoFirewalls",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
      "response": [
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {},
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {},
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Synchronize Tungsten-Fabric data",
      "isasync": false,
      "name": "synchronizeTungstenFabricData",
      "params": [
        {
          "description": "provider id",
          "length": 255,
          "name": "id",
          "related": "listTungstenFabricProviders",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Get the path associated with the provided volume UUID",
      "isasync": false,
      "name": "getPathForVolume",
      "params": [
        {
          "description": "CloudStack Volume UUID",
          "length": 255,
          "name": "volumeid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "The path field for the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists management servers.",
      "isasync": false,
      "name": "listManagementServers",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of the management server",
          "length": 255,
          "name": "id",
          "related": "listManagementServers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the management server",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the state of the management server",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the java distribution name running the management server process",
          "name": "javadistribution",
          "type": "string"
        },
        {
          "description": "the name of the OS distribution running on the management server",
          "name": "osdistribution",
          "type": "string"
        },
        {
          "description": "the name of the management server",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the last time the host on which this Management Server runs was booted",
          "name": "lastboottime",
          "type": "date"
        },
        {
          "description": "the running OS kernel version for this Management Server",
          "name": "kernelversion",
          "type": "string"
        },
        {
          "description": "the version of the management server",
          "name": "version",
          "type": "string"
        },
        {},
        {
          "description": "the last time this Management Server was started",
          "name": "lastserverstart",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the version of the java distribution running the management server process",
          "name": "javaversion",
          "type": "string"
        },
        {
          "description": "the ID of the management server",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the last time this Management Server was stopped",
          "name": "lastserverstop",
          "type": "date"
        }
      ]
    },
    {
      "description": "list Tungsten-Fabric policy",
      "isasync": false,
      "name": "listTungstenFabricPolicyRule",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric rule",
          "length": 255,
          "name": "ruleuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addTungstenFabricPolicyRule",
      "response": [
        {
          "description": "Tungsten-Fabric policy destination ip prefix length",
          "name": "destipprefixlen",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric policy destination network",
          "name": "destnetwork",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy destination end port",
          "name": "destendport",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric policy uuid",
          "name": "policyuuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy action",
          "name": "action",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric policy source network",
          "name": "srcnetwork",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source end port",
          "name": "srcendport",
          "type": "int"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "Tungsten-Fabric rule uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source ip prefix",
          "name": "srcipprefix",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy destination start port",
          "name": "deststartport",
          "type": "int"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source start port",
          "name": "srcstartport",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric policy source ip prefix length",
          "name": "srcipprefixlen",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric policy protocol",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy name",
          "name": "direction",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy destination ip prefix",
          "name": "destipprefix",
          "type": "string"
        }
      ]
    },
    {
      "description": "delete Tungsten-Fabric policy",
      "isasync": true,
      "name": "deleteTungstenFabricPolicy",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the Uuid of Tungsten-Fabric tag type",
          "length": 255,
          "name": "policyuuid",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates a vm group",
      "isasync": false,
      "name": "updateInstanceGroup",
      "params": [
        {
          "description": "new instance group name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Instance group ID",
          "length": 255,
          "name": "id",
          "related": "createInstanceGroup,updateInstanceGroup",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createInstanceGroup",
      "response": [
        {
          "description": "the project ID of the instance group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the instance group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Change disk offering of the volume and also an option to auto migrate if required to apply the new disk offering",
      "isasync": true,
      "name": "changeOfferingForVolume",
      "params": [
        {
          "description": "new disk offering id",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,listDiskOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Verify OK to Shrink",
          "length": 255,
          "name": "shrinkok",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "New volume size in GB for the custom disk offering",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "Flag for automatic migration of the volume with new disk offering whenever migration is required to apply the offering",
          "length": 255,
          "name": "automigrate",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "New minimum number of IOPS for the custom disk offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "New maximum number of IOPS for the custom disk offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,recoverVolume,changeOfferingForVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {},
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {},
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        }
      ],
      "since": "4.17"
    },
    {
      "description": "List the uploaded certificates for direct download templates",
      "isasync": false,
      "name": "listTemplateDirectDownloadCertificates",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list direct download certificate by ID",
          "length": 255,
          "name": "id",
          "related": "uploadTemplateDirectDownloadCertificate,listTemplateDirectDownloadCertificates",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the zone where certificates are uploaded",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if set to true: include the hosts where the certificate is uploaded to",
          "length": 255,
          "name": "listhosts",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "uploadTemplateDirectDownloadCertificate",
      "response": [
        {
          "description": "the direct download certificate alias",
          "name": "alias",
          "type": "string"
        },
        {
          "description": "the direct download certificate issuer",
          "name": "issuer",
          "type": "string"
        },
        {
          "description": "the hosts where the certificate is uploaded to",
          "name": "hostsmap",
          "type": "list"
        },
        {},
        {
          "description": "the direct download certificate issuer",
          "name": "validity",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the direct download certificate version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the hypervisor of the hosts where the certificate is uploaded",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the zone name where the certificate is uploaded",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the direct download certificate subject",
          "name": "subject",
          "type": "string"
        },
        {
          "description": "the direct download certificate id",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the zone id where the certificate is uploaded",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the direct download certificate serial num",
          "name": "serialnum",
          "type": "string"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "List ucs manager",
      "isasync": false,
      "name": "listUcsManagers",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the ucs manager",
          "length": 255,
          "name": "id",
          "related": "listUcsManagers,addUcsManager",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the zone id",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addUcsManager",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the ucs manager",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the name of ucs manager",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the url of ucs manager",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the zone ID of ucs manager",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Upgrades domain router to a new service offering",
      "isasync": false,
      "name": "changeServiceForRouter",
      "params": [
        {
          "description": "the service offering ID to apply to the domain router",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the router",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters,changeServiceForRouter,listInternalLoadBalancerVMs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyRouter,listRouters,listInternalLoadBalancerVMs",
      "response": [
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {},
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            }
          ],
          "type": "set"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {},
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Remove an Ldap Configuration",
      "isasync": false,
      "name": "deleteLdapConfiguration",
      "params": [
        {
          "description": "linked domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Hostname",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "port",
          "length": 255,
          "name": "port",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addLdapConfiguration",
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "name of the host running the ldap server",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "linked domain",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "port teh ldap server is running on",
          "name": "port",
          "type": "int"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates the volume.",
      "isasync": true,
      "name": "updateVolume",
      "params": [
        {
          "description": "The chain info of the volume",
          "length": 255,
          "name": "chaininfo",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "The path of the volume",
          "length": 255,
          "name": "path",
          "required": false,
          "type": "string"
        },
        {
          "description": "The state of the volume",
          "length": 255,
          "name": "state",
          "required": false,
          "since": "4.3",
          "type": "string"
        },
        {
          "description": "Destination storage pool UUID for the volume",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,updateVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the volume to the end user or not.",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "new name of the volume",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.16",
          "type": "string"
        }
      ],
      "related": "attachVolume,createVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {},
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {},
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists traffic types of a given physical network.",
      "isasync": false,
      "name": "listTrafficTypes",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listNetworkServiceProviders",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates a Project role",
      "isasync": false,
      "name": "createProjectRole",
      "params": [
        {
          "description": "ID of project where role is being created",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "creates a project role with this unique name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "The description of the Project role",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateProjectRole",
      "response": [
        {
          "description": "the id of the project",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Updates account information for the authenticated user",
      "isasync": false,
      "name": "updateAccount",
      "params": [
        {
          "description": "Current account name",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain for the account's networks; empty string will update domainName with NULL value",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "New name for the account",
          "length": 255,
          "name": "newname",
          "required": false,
          "type": "string"
        },
        {
          "description": "Details for the account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "The UUID of the dynamic role to set for the account",
          "length": 255,
          "name": "roleid",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Account UUID",
          "length": 255,
          "name": "id",
          "related": "createAccount,disableAccount,enableAccount,updateAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The UUID of the domain where the account exists",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createAccount,disableAccount,enableAccount,listAccounts,listAccounts",
      "response": [
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {},
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {},
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds secondary storage.",
      "isasync": false,
      "name": "addSecondaryStorage",
      "params": [
        {
          "description": "the URL for the secondary storage",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Zone ID for the secondary storage",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listSwifts,addImageStoreS3,listImageStores,updateCloudToUseObjectStore",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates properties of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect. UpdateVirtualMachine does not first check whether the VM is stopped. Therefore, stop the VM manually before issuing this call.",
      "isasync": false,
      "name": "updateVirtualMachine",
      "params": [
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 4KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 1MB of data after base64 encoding.You also need to change vm.userdata.max.length value",
          "length": 1048576,
          "name": "userdata",
          "required": false,
          "since": "4.16.0",
          "type": "string"
        },
        {
          "description": "Details in key/value pairs. 'extraconfig' is not allowed to be passed in details.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "true if high-availability is enabled for the virtual machine, false otherwise",
          "length": 255,
          "name": "haenable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "group of the virtual machine",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the userdata",
          "length": 255,
          "name": "userdataid",
          "related": "",
          "required": false,
          "since": "4.18",
          "type": "uuid"
        },
        {
          "description": "user generated name",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "used to specify the parameters values for the variables in userdata.",
          "length": 255,
          "name": "userdatadetails",
          "required": false,
          "since": "4.18",
          "type": "map"
        },
        {
          "description": "comma separated list of security groups names that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
          "length": 255,
          "name": "securitygroupnames",
          "related": "createSecurityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "instance name of the user vm",
          "length": 255,
          "name": "instancename",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "DHCP options which are passed to the VM on start up Example: dhcpoptionsnetworklist[0].dhcp:114=url&dhcpoptionsetworklist[0].networkid=networkid&dhcpoptionsetworklist[0].dhcp:66=www.test.com",
          "length": 255,
          "name": "dhcpoptionsnetworklist",
          "required": false,
          "type": "map"
        },
        {
          "description": "optional boolean field, which indicates if details should be cleaned up or not (if set to true, details removed for this resource, details field ignored; if false or not set, no action)",
          "length": 255,
          "name": "cleanupdetails",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "new host name of the vm. The VM has to be stopped/started for this update to take affect",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents this VM.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes,addGuestOs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list of security group ids to be applied on the virtual machine.",
          "length": 255,
          "name": "securitygroupids",
          "related": "createSecurityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "true if VM contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory. This can be updated only when dynamic scaling is enabled on template, service offering and the corresponding global setting",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional field, whether to the display the vm to the end user or not.",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional URL encoded string that can be passed to the virtual machine upon successful deployment",
          "length": 5120,
          "name": "extraconfig",
          "required": false,
          "since": "4.12",
          "type": "string"
        }
      ],
      "related": "migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an Ipv6 firewall rule in the given network (the network has to belong to VPC)",
      "isasync": true,
      "name": "createIpv6FirewallRule",
      "params": [
        {
          "description": "The network of the VM the Ipv6 firewall rule will be created for",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the destination CIDR list to allow traffic to. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "destcidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "error code for this ICMP message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the starting port of Ipv6 firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ending port of Ipv6 firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the traffic type for the Ipv6 firewall rule, can be ingress or egress, defaulted to ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the protocol for the Ipv6 firewall rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the source CIDR list to allow traffic from. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        }
      ],
      "related": "listPortForwardingRules,updatePortForwardingRule,updateIpv6FirewallRule",
      "response": [
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {},
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {},
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disables an account",
      "isasync": true,
      "name": "disableAccount",
      "params": [
        {
          "description": "If true, only lock the account; else disable the account",
          "length": 255,
          "name": "lock",
          "required": true,
          "type": "boolean"
        },
        {
          "description": "Disables specified account in this domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Disables specified account.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "createAccount,disableAccount,enableAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createAccount,enableAccount,listAccounts,listAccounts",
      "response": [
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {},
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {},
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists domains and provides detailed information for listed domains",
      "isasync": false,
      "name": "listDomains",
      "params": [
        {
          "description": "List domain by domain name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the resource icon for domains",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List domain by domain ID.",
          "length": 255,
          "name": "id",
          "related": "listDomainChildren,listDomains,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "comma separated list of domain details requested, value can be a list of [ all, resource, min]",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "List domains by domain level.",
          "length": 255,
          "name": "level",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listDomainChildren,listDomains",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {},
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {},
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the date when this domain was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "details for the domain",
          "name": "domaindetails",
          "type": "map"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a network",
      "isasync": true,
      "name": "updateNetwork",
      "params": [
        {
          "description": "the first IPv6 DNS for the network. Empty string will update the first IPv6 DNS with the value from the zone",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "if true, we will update the routers one after the other. applicable only for redundant router based networks using virtual router as provider",
          "length": 255,
          "name": "updateinsequence",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the new name for the network",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "when true ip address usage for the network will not be exported by the listUsageRecords API",
          "length": 255,
          "name": "hideipaddressusage",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "listNetworkOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "network domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the new display text for the network",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network. Empty string will update the second IPv4 DNS with the value from the zone",
          "length": 255,
          "name": "dns2",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "Force update even if CIDR type is different",
          "length": 255,
          "name": "changecidr",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "CIDR for guest VMs, CloudStack allocates IPs to guest VMs only from this CIDR",
          "length": 255,
          "name": "guestvmcidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "MTU to be configured on the network VR's public facing interfaces",
          "length": 255,
          "name": "publicmtu",
          "required": false,
          "since": "4.18.0",
          "type": "integer"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "id",
          "related": "createNetwork,updateNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the second IPv6 DNS for the network. Empty string will update the second IPv6 DNS with the value from the zone",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "MTU to be configured on the network VR's public facing interfaces",
          "length": 255,
          "name": "privatemtu",
          "required": false,
          "since": "4.18.0",
          "type": "integer"
        },
        {
          "description": "the first IPv4 DNS for the network. Empty string will update the first IPv4 DNS with the value from the zone",
          "length": 255,
          "name": "dns1",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "Setting this to true will cause a forced network update,",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
      "response": [
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {},
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {},
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "List Usage Types",
      "isasync": false,
      "name": "listUsageTypes",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "description of usage type",
          "name": "description",
          "type": "string"
        },
        {
          "description": "usage type",
          "name": "usagetypeid",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Resets the UserData for virtual machine. The virtual machine must be in a \"Stopped\" state.",
      "isasync": false,
      "name": "resetUserDataForVirtualMachine",
      "params": [
        {
          "description": "an optional project for the virtual machine",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,resetUserDataForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "used to specify the parameters values for the variables in userdata.",
          "length": 255,
          "name": "userdatadetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 4KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 1MB of data after base64 encoding.You also need to change vm.userdata.max.length value",
          "length": 1048576,
          "name": "userdata",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the userdata",
          "length": 255,
          "name": "userdataid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {},
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Deletes a template from the system. All virtual machines using the deleted template will not be affected.",
      "isasync": true,
      "name": "deleteTemplate",
      "params": [
        {
          "description": "the ID of zone of the template",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Force delete a template.",
          "length": 255,
          "name": "forced",
          "required": false,
          "since": "4.9+",
          "type": "boolean"
        },
        {
          "description": "the ID of the template",
          "length": 255,
          "name": "id",
          "related": "listIsos,registerIso,createTemplate,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists all network ACLs",
      "isasync": false,
      "name": "listNetworkACLLists",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network ACLs by specified name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network ACLs by VPC ID",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network ACLs by network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists network ACL with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "createNetworkACLList,listNetworkACLLists",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createNetworkACLList",
      "response": [
        {
          "description": "the Name of the ACL",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the ACL",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Name of the VPC this ACL is associated with",
          "name": "vpcname",
          "type": "string"
        },
        {},
        {
          "description": "Description of the ACL",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Id of the VPC this ACL is associated with",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "is ACL for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Archives (moves) a snapshot on primary storage to secondary storage",
      "isasync": true,
      "name": "archiveSnapshot",
      "params": [
        {
          "description": "The ID of the snapshot",
          "length": 255,
          "name": "id",
          "related": "archiveSnapshot,revertSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "revertSnapshot",
      "response": [
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "valid location types are primary and secondary.",
          "name": "locationtype",
          "type": "string"
        },
        {
          "description": "display name of the os on volume",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "virtual size of backedup snapshot on image store",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "id of the os on volume",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        }
      ]
    },
    {
      "description": "Deletes a VPC",
      "isasync": true,
      "name": "deleteVPC",
      "params": [
        {
          "description": "the ID of the VPC",
          "length": 255,
          "name": "id",
          "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Updates site to site vpn local gateway",
      "isasync": true,
      "name": "updateVpnGateway",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnGateway,listVpnGateways,updateVpnGateway",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createVpnGateway,listVpnGateways",
      "response": [
        {},
        {
          "description": "the vpc name of this gateway",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is vpn gateway for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Releases a dedicated guest vlan range to the system",
      "isasync": true,
      "name": "releaseDedicatedGuestVlanRange",
      "params": [
        {
          "description": "the ID of the dedicated guest vlan range",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes security group",
      "isasync": false,
      "name": "deleteSecurityGroup",
      "params": [
        {
          "description": "the domain ID of account owning the security group",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account of the security group. Must be specified with domain ID",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with name parameter",
          "length": 255,
          "name": "id",
          "related": "createSecurityGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with id parameter",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the project of the security group",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Attempts Migration of a VM to a different host or Root volume of the vm to a different storage pool",
      "isasync": true,
      "name": "migrateVirtualMachine",
      "params": [
        {
          "description": "Automatically select a destination host which do not require storage migration, if hostId and storageId are not specified. false by default",
          "length": 255,
          "name": "autoselect",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "Destination storage pool ID to migrate VM volumes to. Required for migrating the root disk volume",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateVirtualMachine,migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Destination Host ID to migrate VM to.",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {},
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {},
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {},
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        }
      ]
    },
    {
      "description": "Deletes a Kubernetes cluster",
      "isasync": true,
      "name": "deleteKubernetesSupportedVersion",
      "params": [
        {
          "description": "the ID of the Kubernetes supported version",
          "length": 255,
          "name": "id",
          "related": "addKubernetesSupportedVersion,listKubernetesSupportedVersions,updateKubernetesSupportedVersion",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a template of a virtual machine. The virtual machine must be in a STOPPED state. A template created from this command is automatically designated as a private template visible to the account that created it.",
      "isasync": true,
      "name": "createTemplate",
      "params": [
        {
          "description": "Optional, only for baremetal hypervisor. The directory name where template stored on CIFS server",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the disk volume the template is being created from. Either this parameter, or snapshotId has to be passed in",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "32 or 64 bit",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the snapshot the template is being created from. Either this parameter, or volumeId has to be passed in",
          "length": 255,
          "name": "snapshotid",
          "related": "revertSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Template details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "true if the template requires HVM, false otherwise",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Optional, VM ID. If this presents, it is going to create a baremetal template for VM this ID refers to. This is only for VM whose hypervisor type is BareMetal",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "create template for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template.",
          "length": 255,
          "name": "ostypeid",
          "related": "listOsTypes,addGuestOs",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
      "response": [
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "list baremetal rack configuration",
      "isasync": false,
      "name": "listBaremetalRct",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addBaremetalRct",
      "response": [
        {
          "description": "url",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "id of rct",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Uploads a custom certificate for the console proxy VMs to use for SSL. Can be used to upload a single certificate signed by a known CA. Can also be used, through multiple calls, to upload a chain of certificates from CA to the custom certificate itself.",
      "isasync": true,
      "name": "uploadCustomCertificate",
      "params": [
        {
          "description": "The private key for the attached certificate.",
          "length": 65535,
          "name": "privatekey",
          "required": false,
          "type": "string"
        },
        {
          "description": "DNS domain suffix that the certificate is granted for.",
          "length": 255,
          "name": "domainsuffix",
          "required": true,
          "type": "string"
        },
        {
          "description": "An integer providing the location in a chain that the certificate will hold. Usually, this can be left empty. When creating a chain, the top level certificate should have an ID of 1, with each step in the chain incrementing by one. Example, CA with id = 1, Intermediate CA with id = 2, Site certificate with ID = 3",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The certificate to be uploaded.",
          "length": 65535,
          "name": "certificate",
          "required": true,
          "type": "string"
        },
        {
          "description": "A name / alias for the certificate.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "message of the certificate upload operation",
          "name": "message",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists dedicated clusters.",
      "isasync": false,
      "name": "listDedicatedClusters",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the account associated with the cluster. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list dedicated clusters by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the domain associated with the cluster",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Account ID of the cluster",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the name of the cluster",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the domain ID of the cluster",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the cluster",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the cluster",
          "name": "affinitygroupid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists available certificate authority providers in CloudStack",
      "isasync": false,
      "name": "listCAProviders",
      "params": [
        {
          "description": "List CA service provider by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the description of the CA service provider",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "the CA service provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "Delete site to site vpn customer gateway",
      "isasync": true,
      "name": "deleteVpnCustomerGateway",
      "params": [
        {
          "description": "id of customer gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnCustomerGateway,listVpnCustomerGateways",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all port forwarding rules for an IP address.",
      "isasync": false,
      "name": "listPortForwardingRules",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of IP address of the port forwarding services",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list port forwarding rules for certain network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Lists rule with the specified ID.",
          "length": 255,
          "name": "id",
          "related": "listPortForwardingRules,updatePortForwardingRule,updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updatePortForwardingRule,updateIpv6FirewallRule",
      "response": [
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {},
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        }
      ]
    },
    {
      "description": "Allocates IP addresses in respective Pod of a Zone",
      "isasync": false,
      "name": "acquirePodIpAddress",
      "params": [
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "string"
        },
        {
          "description": "Pod ID",
          "length": 255,
          "name": "podid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "MAC address of the pod the  IP",
          "name": "hostmac",
          "type": "long"
        },
        {
          "description": "the ID of the pod the  IP address",
          "name": "id",
          "type": "long"
        },
        {
          "description": "Allocated IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Gateway for Pod ",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the ID of the nic",
          "name": "nicid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the pod the  IP address belongs to",
          "name": "podid",
          "type": "long"
        },
        {},
        {
          "description": "CIDR of the Pod",
          "name": "cidr",
          "type": "string"
        }
      ]
    },
    {
      "description": "Enables out-of-band management for a cluster",
      "isasync": true,
      "name": "enableOutOfBandManagementForCluster",
      "params": [
        {
          "description": "the ID of the cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForHost,disableOutOfBandManagementForCluster",
      "response": [
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "list Tungsten-Fabric network",
      "isasync": false,
      "name": "listTungstenFabricNetwork",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric network",
          "length": 255,
          "name": "networkuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that include public network. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric network name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric network uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Updates a template visibility permissions. A public template is visible to all accounts within the same domain. A private template is visible only to the owner of the template. A privileged template is a private template with account permissions added. Only accounts specified under the template permissions are visible to them.",
      "isasync": false,
      "name": "updateTemplatePermissions",
      "params": [
        {
          "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true for public template/iso, false for private templates/isos",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "list"
        },
        {
          "description": "a comma delimited list of accounts within caller's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true for featured template/iso, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "permission operator (add, remove, reset)",
          "length": 255,
          "name": "op",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "List traffic monitor Hosts.",
      "isasync": false,
      "name": "listTrafficMonitors",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "zone Id",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addTrafficMonitor",
      "response": [
        {
          "description": "the timeout (in seconds) for requests to the external firewall",
          "name": "timeout",
          "type": "string"
        },
        {
          "description": "the number of times to retry requests to the external firewall",
          "name": "numretries",
          "type": "string"
        },
        {
          "description": "the zone ID of the external firewall",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the management IP address of the external firewall",
          "name": "ipaddress",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the external firewall",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resets the password for virtual machine. The virtual machine must be in a \"Stopped\" state and the template must already support this feature for this command to take effect. [async]",
      "isasync": true,
      "name": "resetPasswordForVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {},
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {},
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a port forwarding rule. Only the private port and the virtual machine can be updated.",
      "isasync": true,
      "name": "updatePortForwardingRule",
      "params": [
        {
          "description": "the ID of the port forwarding rule",
          "length": 255,
          "name": "id",
          "related": "updatePortForwardingRule,updateIpv6FirewallRule",
          "required": true,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "the private start port of the port forwarding rule",
          "length": 255,
          "name": "privateport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "VM guest nic Secondary ip address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "since": "4.5",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine for the port forwarding rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the private end port of the port forwarding rule",
          "length": 255,
          "name": "privateendport",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateIpv6FirewallRule",
      "response": [
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {},
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {},
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Brocade VCS Switches",
      "isasync": false,
      "name": "listBrocadeVcsDevices",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Brocade VCS switch ID",
          "length": 255,
          "name": "vcsdeviceid",
          "related": "listBrocadeVcsDevices",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the physical Network to which this Brocade VCS belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {},
        {
          "description": "the principal switch Ip address",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {},
        {
          "description": "device id of the Brocade Vcs",
          "name": "vcsdeviceid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "brocadedevicename",
          "type": "string"
        }
      ]
    },
    {
      "description": "link an existing cloudstack domain to group or OU in ldap",
      "isasync": false,
      "name": "linkDomainToLdap",
      "params": [
        {
          "description": "The id of the domain which has to be linked to LDAP.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "type of the ldap name. GROUP or OU",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "name of the group or OU in LDAP",
          "length": 255,
          "name": "ldapdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "domain admin username in LDAP ",
          "length": 255,
          "name": "admin",
          "required": false,
          "type": "string"
        },
        {
          "description": "Type of the account to auto import. Specify 0 for user and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": true,
          "type": "integer"
        },
        {
          "description": "name of the group or OU in LDAP",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "linkAccountToLdap",
      "response": [
        {},
        {
          "description": "name of the group or OU in LDAP which is linked to the domain",
          "name": "ldapdomain",
          "type": "string"
        },
        {
          "description": "type of the name in LDAP which is linke to the domain",
          "name": "type",
          "type": "string"
        },
        {
          "description": "Domain Admin accountId that is created",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Type of the account to auto import",
          "name": "accounttype",
          "type": "int"
        },
        {
          "description": "id of the Domain which is linked to LDAP",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the group or OU in LDAP which is linked to the domain",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Acquires and associates a public IP to an account.",
      "isasync": true,
      "name": "associateIpAddress",
      "params": [
        {
          "description": "the ID of the domain to associate with this IP address",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "IP Address to be associated",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the VPC you want the IP address to be associated with",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Deploy VM for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The network this IP address should be associated to.",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "should be set to true if public IP is required to be transferable across zones, if not specified defaults to false",
          "length": 255,
          "name": "isportable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the availability zone you want to acquire an public IP address from",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "region ID from where portable IP is to be associated.",
          "length": 255,
          "name": "regionid",
          "related": "addRegion,listRegions",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the account to associate with this IP address",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the IP to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "updateIpAddress,associateIpAddress,listPublicIpAddresses",
      "response": [
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {},
        {
          "description": "VPC id the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "virtual machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "virtual machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "virtual machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "the name of the Network where ip belongs to",
          "name": "networkname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "virtual machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "VPC name the ip belongs to",
          "name": "vpcname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Get the SF Volume Access Group IDs",
      "isasync": false,
      "name": "getSolidFireVolumeAccessGroupIds",
      "params": [
        {
          "description": "Storage Pool UUID",
          "length": 255,
          "name": "storageid",
          "required": true,
          "type": "string"
        },
        {
          "description": "Cluster UUID",
          "length": 255,
          "name": "clusterid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "SolidFire Volume Access Group Ids",
          "name": "solidFireVolumeAccessGroupIds",
          "type": "long[]"
        },
        {},
        {}
      ]
    },
    {
      "description": "Setup the 2FA for the user.",
      "isasync": false,
      "name": "setupUserTwoFactorAuthentication",
      "params": [
        {
          "description": "optional: the id of the user for which 2FA has to be disabled",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Enabled by default, provide false to disable 2FA",
          "length": 255,
          "name": "enable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "two factor authentication code",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "secret code that needs to be registered with authenticator",
          "name": "secretcode",
          "type": "string"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Delete site to site vpn connection",
      "isasync": true,
      "name": "deleteVpnConnection",
      "params": [
        {
          "description": "id of vpn connection",
          "length": 255,
          "name": "id",
          "related": "createVpnConnection,listVpnConnections",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a ACL rule in the given network (the network has to belong to VPC)",
      "isasync": true,
      "name": "createNetworkACL",
      "params": [
        {
          "description": "The network of the VM the ACL will be created for",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The network of the VM the ACL will be created for",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the starting port of ACL",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the traffic type for the ACL,can be ingress or egress, defaulted to ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "The number of the ACL item, its ordering",
          "length": 255,
          "name": "number",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the CIDR list to allow traffic from/to. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "error code for this ICMP message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "scl entry action, allow or deny",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "A description indicating why the ACL rule is required.",
          "length": 255,
          "name": "reason",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending port of ACL",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "updateNetworkACLItem,moveNetworkAclItem",
      "response": [
        {
          "description": "an explanation on why this ACL rule is being applied",
          "name": "reason",
          "type": "string"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the name of the ACL this item belongs to",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Resets the SSH Key for virtual machine. The virtual machine must be in a \"Stopped\" state. [async]",
      "isasync": true,
      "name": "resetSSHKeyForVirtualMachine",
      "params": [
        {
          "description": "name of the ssh key pair used to login to the virtual machine",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,resetSSHKeyForVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional project for the ssh key",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the ssh key. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "names of the ssh key pairs to be used to login to the virtual machine",
          "length": 255,
          "name": "keypairs",
          "required": false,
          "since": "4.17",
          "type": "list"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {},
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {},
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists site to site vpn customer gateways",
      "isasync": false,
      "name": "listVpnCustomerGateways",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "id of the customer gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnCustomerGateway,listVpnCustomerGateways",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createVpnCustomerGateway",
      "response": [
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "For IKEv2, whether to split multiple right subnet cidrs into multiple connection statements.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {},
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        }
      ]
    },
    {
      "description": "Deletes a management network IP range. This action is only allowed when no IPs in this range are allocated.",
      "isasync": true,
      "name": "deleteManagementNetworkIpRange",
      "params": [
        {
          "description": "The starting IP address.",
          "length": 255,
          "name": "startip",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of POD, where the IP range belongs to.",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The vlan id the ip range sits on",
          "length": 255,
          "name": "vlan",
          "required": true,
          "type": "string"
        },
        {
          "description": "The ending IP address.",
          "length": 255,
          "name": "endip",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.11.0.0"
    },
    {
      "description": "Add a supported Kubernetes version",
      "isasync": false,
      "name": "addKubernetesSupportedVersion",
      "params": [
        {
          "description": "the ID of the zone in which Kubernetes supported version will be available",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the semantic version of the Kubernetes version. It needs to be specified in MAJOR.MINOR.PATCH format",
          "length": 255,
          "name": "semanticversion",
          "required": true,
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes supported version",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL of the binaries ISO for Kubernetes supported version",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the minimum RAM size in MB to be set with the Kubernetes version",
          "length": 255,
          "name": "minmemory",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the checksum value of the binaries ISO. The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the minimum number of CPUs to be set with the Kubernetes version",
          "length": 255,
          "name": "mincpunumber",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listKubernetesSupportedVersions,updateKubernetesSupportedVersion",
      "response": [
        {
          "description": "whether Kubernetes supported version supports HA, multi-control nodes",
          "name": "supportsha",
          "type": "boolean"
        },
        {
          "description": "the id of the Kubernetes supported version",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the minimum RAM size in MB needed for the Kubernetes supported version",
          "name": "minmemory",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the state of the binaries ISO for Kubernetes supported version",
          "name": "isostate",
          "type": "string"
        },
        {
          "description": "the enabled or disabled state of the Kubernetes supported version",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the id of the binaries ISO for Kubernetes supported version",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "whether Kubernetes supported version supports Autoscaling",
          "name": "supportsautoscaling",
          "type": "boolean"
        },
        {
          "description": "Kubernetes semantic version",
          "name": "semanticversion",
          "type": "string"
        },
        {
          "description": "the minimum number of CPUs needed for the Kubernetes supported version",
          "name": "mincpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the binaries ISO for Kubernetes supported version",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "Name of the Kubernetes supported version",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the name of the zone in which Kubernetes supported version is available",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of the zone in which Kubernetes supported version is available",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the date when this Kubernetes supported version was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Deletes a Kubernetes cluster",
      "isasync": true,
      "name": "deleteKubernetesCluster",
      "params": [
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "createKubernetesCluster,startKubernetesCluster,upgradeKubernetesCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a global load balancer rule",
      "isasync": true,
      "name": "createGlobalLoadBalancerRule",
      "params": [
        {
          "description": "the account associated with the global load balancer. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "GSLB service type (tcp, udp, http)",
          "length": 255,
          "name": "gslbservicetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "session sticky method (sourceip) if not specified defaults to sourceip",
          "length": 255,
          "name": "gslbstickysessionmethodname",
          "required": false,
          "type": "string"
        },
        {
          "description": "domain name for the GSLB service.",
          "length": 255,
          "name": "gslbdomainname",
          "required": true,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (roundrobin, leastconn, proximity) that method is used to distribute traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'",
          "length": 255,
          "name": "gslblbmethod",
          "required": false,
          "type": "string"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the load balancer",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "region where the global load balancer is going to be created.",
          "length": 255,
          "name": "regionid",
          "related": "addRegion,listRegions",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
      "response": [
        {
          "description": "List of load balancer rules that are part of GSLB rule",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "the account of the load balancer rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "is rule for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the project id of the load balancer",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the public ip address id",
              "name": "publicipid",
              "type": "string"
            },
            {
              "description": "the description of the load balancer",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the load balancer",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the zone the load balancer rule belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the domain of the load balancer rule",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the protocol of the loadbalanacer rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "the id of the zone the rule belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the public ip address",
              "name": "publicip",
              "type": "string"
            },
            {
              "description": "the load balancer algorithm (source, roundrobin, leastconn)",
              "name": "algorithm",
              "type": "string"
            },
            {
              "description": "the id of the guest network the lb rule belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the state of the rule",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the load balancer rule ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the private port",
              "name": "privateport",
              "type": "string"
            },
            {
              "description": "the domain ID of the load balancer rule",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with load balancer",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the public port",
              "name": "publicport",
              "type": "string"
            },
            {
              "description": "the name of the load balancer",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,).",
              "name": "cidrlist",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "global load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "session persistence method used for the global load balancer",
          "name": "gslbstickysessionmethodname",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Load balancing method used for the global load balancer",
          "name": "gslblbmethod",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "GSLB service type",
          "name": "gslbservicetype",
          "type": "string"
        },
        {
          "description": "DNS domain name given for the global load balancer",
          "name": "gslbdomainname",
          "type": "string"
        },
        {
          "description": "the description of the global load balancer rule",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "Region Id in which global load balancer is created",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the global load balancer rule",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Link or unlink a userdata to a template.",
      "isasync": false,
      "name": "linkUserDataToTemplate",
      "params": [
        {
          "description": "an optional override policy of the userdata. Possible values are - ALLOWOVERRIDE, APPEND, DENYOVERRIDE. Default policy is allowoverride",
          "length": 255,
          "name": "userdatapolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the ISO for the virtual machine",
          "length": 255,
          "name": "isoid",
          "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the template for the virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos,linkUserDataToTemplate",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the userdata that has to be linked to template/ISO. If not provided existing userdata will be unlinked from the template/ISO",
          "length": 255,
          "name": "userdataid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
      "response": [
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": " delete a netscaler load balancer device",
      "isasync": true,
      "name": "deleteNetscalerLoadBalancer",
      "params": [
        {
          "description": "netscaler load balancer device ID",
          "length": 255,
          "name": "lbdeviceid",
          "related": "addNetscalerLoadBalancer,listNetscalerLoadBalancers,registerNetscalerControlCenter,deployNetscalerVpx",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Lists load balancer rules.",
      "isasync": false,
      "name": "listGlobalLoadBalancerRules",
      "params": [
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "listGlobalLoadBalancerRules,updateGlobalLoadBalancerRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "region ID",
          "length": 255,
          "name": "regionid",
          "related": "addRegion,listRegions",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "updateGlobalLoadBalancerRule",
      "response": [
        {
          "description": "name of the global load balancer rule",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "global load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "session persistence method used for the global load balancer",
          "name": "gslbstickysessionmethodname",
          "type": "string"
        },
        {
          "description": "GSLB service type",
          "name": "gslbservicetype",
          "type": "string"
        },
        {},
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "DNS domain name given for the global load balancer",
          "name": "gslbdomainname",
          "type": "string"
        },
        {
          "description": "the description of the global load balancer rule",
          "name": "description",
          "type": "string"
        },
        {
          "description": "List of load balancer rules that are part of GSLB rule",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "the public ip address",
              "name": "publicip",
              "type": "string"
            },
            {
              "description": "the name of the zone the load balancer rule belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the account of the load balancer rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id of the load balancer",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the id of the guest network the lb rule belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the description of the load balancer",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project name of the load balancer",
              "name": "project",
              "type": "string"
            },
            {
              "description": "is rule for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the public ip address id",
              "name": "publicipid",
              "type": "string"
            },
            {
              "description": "the load balancer rule ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,).",
              "name": "cidrlist",
              "type": "string"
            },
            {
              "description": "the domain ID of the load balancer rule",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the state of the rule",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the protocol of the loadbalanacer rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "the domain of the load balancer rule",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the public port",
              "name": "publicport",
              "type": "string"
            },
            {
              "description": "the load balancer algorithm (source, roundrobin, leastconn)",
              "name": "algorithm",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with load balancer",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the name of the load balancer",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the private port",
              "name": "privateport",
              "type": "string"
            },
            {
              "description": "the id of the zone the rule belongs to",
              "name": "zoneid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Region Id in which global load balancer is created",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Load balancing method used for the global load balancer",
          "name": "gslblbmethod",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Updates a disk offering.",
      "isasync": false,
      "name": "deleteDiskOffering",
      "params": [
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "createDiskOffering,listDiskOfferings",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "List resource tag(s)",
      "isasync": false,
      "name": "listTags",
      "params": [
        {
          "description": "list by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by customer name",
          "length": 255,
          "name": "customer",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by value",
          "length": 255,
          "name": "value",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by resource id",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by key",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "customer associated with the tag",
          "name": "customer",
          "type": "string"
        },
        {
          "description": "the account associated with the tag",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "tag key name",
          "name": "key",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id the tag belongs to",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the tag",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain associated with the tag",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "resource type",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the project name where tag belongs to",
          "name": "project",
          "type": "string"
        },
        {
          "description": "tag value",
          "name": "value",
          "type": "string"
        }
      ],
      "since": "4.0.0"
    },
    {
      "description": "Release the dedication for cluster",
      "isasync": true,
      "name": "releaseDedicatedCluster",
      "params": [
        {
          "description": "the ID of the Cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Get Kubernetes cluster config",
      "isasync": false,
      "name": "getKubernetesClusterConfig",
      "params": [
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "createKubernetesCluster,startKubernetesCluster,upgradeKubernetesCluster",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Name of the container cluster",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the id of the container cluster",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the config data of the cluster",
          "name": "configdata",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Create a virtual router element.",
      "isasync": true,
      "name": "createVirtualRouterElement",
      "params": [
        {
          "description": "The provider type. Supported types are VirtualRouter (default) and VPCVirtualRouter",
          "length": 255,
          "name": "providertype",
          "related": "listNetworkServiceProviders",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the network service provider ID of the virtual router element",
          "length": 255,
          "name": "nspid",
          "related": "listNetworkServiceProviders",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "configureVirtualRouterElement,listVirtualRouterElements",
      "response": [
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Creates a VPC",
      "isasync": true,
      "name": "createVPC",
      "params": [
        {
          "description": "MTU to be configured on the network VR's public facing interfaces",
          "length": 255,
          "name": "publicmtu",
          "required": false,
          "since": "4.18.0",
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the vpc to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
          "length": 255,
          "name": "cidr",
          "required": true,
          "type": "string"
        },
        {
          "description": "create VPC for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, the VPC won't start (VPC VR will not get allocated) until its first network gets implemented. True by default.",
          "length": 255,
          "name": "start",
          "required": false,
          "since": "4.3",
          "type": "boolean"
        },
        {
          "description": "the first IPv6 DNS for the VPC",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the ID of the VPC offering",
          "length": 255,
          "name": "vpcofferingid",
          "related": "updateVPCOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VPC network domain. All networks inside the VPC will belong to this domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the VPC",
          "length": 255,
          "name": "dns1",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the VPC. If used with the account parameter returns the VPC associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account associated with the VPC. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the VPC",
          "length": 255,
          "name": "dns2",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the second IPv6 DNS for the VPC",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the name of the VPC",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
      "response": [
        {
          "description": "MTU configured on the public interfaces of the VPC VR",
          "name": "publicmtu",
          "type": "integer"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true if VPC is region level",
          "name": "regionlevelvpc",
          "type": "boolean"
        },
        {
          "description": "the first IPv4 DNS for the VPC",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the VPC",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "vpc offering name the VPC is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "is VPC uses distributed router for one hop forwarding and host based network ACL's",
          "name": "distributedvpcrouter",
          "type": "boolean"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the VPC",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the VPC",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {},
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "type": "list"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Deletes a autoscale policy.",
      "isasync": true,
      "name": "deleteAutoScalePolicy",
      "params": [
        {
          "description": "the ID of the autoscale policy",
          "length": 255,
          "name": "id",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a role",
      "isasync": false,
      "name": "deleteRole",
      "params": [
        {
          "description": "ID of the role",
          "length": 255,
          "name": "id",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {}
      ],
      "since": "4.9.0"
    },
    {
      "description": " delete a Cisco Nexus VSM device",
      "isasync": true,
      "name": "deleteCiscoNexusVSM",
      "params": [
        {
          "description": "Id of the Cisco Nexus 1000v VSM device to be deleted",
          "length": 255,
          "name": "id",
          "related": "listCiscoNexusVSMs,disableCiscoNexusVSM",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "List internal LB VMs.",
      "isasync": false,
      "name": "listInternalLoadBalancerVMs",
      "params": [
        {
          "description": "List Internal LB VMs by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Internal LB VM",
          "length": 255,
          "name": "id",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "if true is passed for this parameter, also fetch last executed health check results for the VM. Default is false",
          "length": 255,
          "name": "fetchhealthcheckresults",
          "required": false,
          "since": "4.14",
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the Internal LB VM",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "if true is passed for this parameter, list only VPC Internal LB VMs",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Pod ID of the Internal LB VM",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID of the Internal LB VM",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID of the Internal LB VM",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the state of the Internal LB VM",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        }
      ],
      "related": "destroyRouter,listRouters",
      "response": [
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {},
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Cisco VNMC controllers",
      "isasync": false,
      "name": "listCiscoVnmcResources",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Cisco VNMC resource ID",
          "length": 255,
          "name": "resourceid",
          "related": "listCiscoVnmcResources",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Removes detail for the Resource.",
      "isasync": true,
      "name": "removeResourceDetail",
      "params": [
        {
          "description": "Delete detail by resource type",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Delete details matching key/value pairs",
          "length": 255,
          "name": "key",
          "required": false,
          "type": "string"
        },
        {
          "description": "Delete details for resource id",
          "length": 255,
          "name": "resourceid",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Lists all supported OS types for this cloud.",
      "isasync": false,
      "name": "listOsTypes",
      "params": [
        {
          "description": "list by Os Category id",
          "length": 255,
          "name": "oscategoryid",
          "related": "listOsCategories",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by Os type Id",
          "length": 255,
          "name": "id",
          "related": "listOsTypes,addGuestOs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list os by description",
          "length": 255,
          "name": "description",
          "required": false,
          "since": "3.0.1",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addGuestOs",
      "response": [
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        },
        {
          "description": "is the guest OS user defined",
          "name": "isuserdefined",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a particular egress rule from this security group",
      "isasync": true,
      "name": "revokeSecurityGroupEgress",
      "params": [
        {
          "description": "The ID of the egress rule",
          "length": 255,
          "name": "id",
          "related": "authorizeSecurityGroupIngress",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Removes a Guest OS from listing.",
      "isasync": true,
      "name": "removeGuestOs",
      "params": [
        {
          "description": "ID of the guest OS",
          "length": 255,
          "name": "id",
          "related": "addGuestOs",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "Uploads an icon for the specified resource(s)",
      "isasync": false,
      "name": "uploadResourceIcon",
      "params": [
        {
          "description": "list of resources to upload the icon/image for",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Base64 string representation of the resource icon/image",
          "length": 2097152,
          "name": "base64image",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {}
      ],
      "since": "4.16.0.0"
    },
    {
      "description": "Update a supported Kubernetes version",
      "isasync": false,
      "name": "updateKubernetesSupportedVersion",
      "params": [
        {
          "description": "the ID of the Kubernetes supported version",
          "length": 255,
          "name": "id",
          "related": "listKubernetesSupportedVersions,updateKubernetesSupportedVersion",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the enabled or disabled state of the Kubernetes supported version",
          "length": 255,
          "name": "state",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listKubernetesSupportedVersions",
      "response": [
        {
          "description": "whether Kubernetes supported version supports Autoscaling",
          "name": "supportsautoscaling",
          "type": "boolean"
        },
        {
          "description": "Name of the Kubernetes supported version",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Kubernetes semantic version",
          "name": "semanticversion",
          "type": "string"
        },
        {
          "description": "whether Kubernetes supported version supports HA, multi-control nodes",
          "name": "supportsha",
          "type": "boolean"
        },
        {
          "description": "the minimum number of CPUs needed for the Kubernetes supported version",
          "name": "mincpunumber",
          "type": "integer"
        },
        {
          "description": "the minimum RAM size in MB needed for the Kubernetes supported version",
          "name": "minmemory",
          "type": "integer"
        },
        {
          "description": "the id of the zone in which Kubernetes supported version is available",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the zone in which Kubernetes supported version is available",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the state of the binaries ISO for Kubernetes supported version",
          "name": "isostate",
          "type": "string"
        },
        {
          "description": "the id of the binaries ISO for Kubernetes supported version",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the id of the Kubernetes supported version",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the binaries ISO for Kubernetes supported version",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the date when this Kubernetes supported version was created",
          "name": "created",
          "type": "date"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the enabled or disabled state of the Kubernetes supported version",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Detaches any ISO file (if any) currently attached to a virtual machine.",
      "isasync": true,
      "name": "detachIso",
      "params": [
        {
          "description": "If true, ejects the ISO before detaching on VMware. Default: false",
          "length": 255,
          "name": "forced",
          "required": false,
          "since": "4.15.1",
          "type": "boolean"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,detachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {},
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {},
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a guest network IPv6 prefix.",
      "isasync": true,
      "name": "createGuestNetworkIpv6Prefix",
      "params": [
        {
          "description": "The /56 or higher IPv6 CIDR for network prefix.",
          "length": 255,
          "name": "prefix",
          "required": true,
          "type": "string"
        },
        {
          "description": "UUID of zone to which the IPv6 prefix belongs to.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listGuestNetworkIpv6Prefixes",
      "response": [
        {
          "description": "count of the total IPv6 subnets for the prefix.",
          "name": "totalsubnets",
          "type": "integer"
        },
        {
          "description": "count of the used IPv6 subnets for the prefix.",
          "name": "usedsubnets",
          "type": "integer"
        },
        {
          "description": " date when this IPv6 prefix was created.",
          "name": "created",
          "type": "date"
        },
        {
          "description": "guest IPv6 prefix",
          "name": "prefix",
          "type": "string"
        },
        {},
        {
          "description": "count of the available IPv6 subnets for the prefix.",
          "name": "availablesubnets",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "id of zone to which the IPv6 prefix belongs to.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "id of the guest IPv6 prefix",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.17.0.0"
    },
    {
      "description": " delete a Palo Alto firewall device",
      "isasync": true,
      "name": "deletePaloAltoFirewall",
      "params": [
        {
          "description": "Palo Alto firewall device ID",
          "length": 255,
          "name": "fwdeviceid",
          "related": "addPaloAltoFirewall,configurePaloAltoFirewall,listPaloAltoFirewalls",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Deletes a Pod.",
      "isasync": false,
      "name": "deletePod",
      "params": [
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "id",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Tungsten-Fabric providers",
      "isasync": false,
      "name": "listTungstenFabricProviders",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric provider hostname",
          "name": "tungstenproviderhostname",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "Tungsten-Fabric provider gateway",
          "name": "tungstengateway",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider uuid",
          "name": "tungstenprovideruuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider port",
          "name": "tungstenproviderport",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider introspect port",
          "name": "tungstenproviderintrospectport",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider vrouter port",
          "name": "tungstenprovidervrouterport",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all DeploymentPlanners available.",
      "isasync": false,
      "name": "listDeploymentPlanners",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {
          "description": "Deployment Planner name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a role",
      "isasync": false,
      "name": "createRole",
      "params": [
        {
          "description": "ID of the role to be cloned from. Either roleid or type must be passed in",
          "length": 255,
          "name": "roleid",
          "related": "createRole,importRole,listRoles,updateRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The description of the role",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates a role with this unique name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "The type of the role, valid options are: Admin, ResourceAdmin, DomainAdmin, User",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "related": "importRole,listRoles,updateRole",
      "response": [
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {
          "description": "true if role is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {},
        {
          "description": "the type of the role",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Deletes a cluster.",
      "isasync": false,
      "name": "deleteCluster",
      "params": [
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "id",
          "related": "addCluster,updateCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Prepares a host for maintenance.",
      "isasync": true,
      "name": "prepareHostForMaintenance",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,prepareHostForMaintenance,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
      "response": [
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {},
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {},
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Removes specified region",
      "isasync": false,
      "name": "removeRegion",
      "params": [
        {
          "description": "ID of the region to delete",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "integer"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Get Volume's iSCSI Name",
      "isasync": false,
      "name": "getVolumeiScsiName",
      "params": [
        {
          "description": "CloudStack Volume UUID",
          "length": 255,
          "name": "volumeid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Volume iSCSI Name",
          "name": "volumeiScsiName",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Upload a data disk to the cloudstack cloud.",
      "isasync": false,
      "name": "getUploadParamsForVolume",
      "params": [
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the volume/template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the checksum value of this volume/template The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "Upload volume/template for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the format for the volume/template. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the disk offering. This must be a custom sized offering since during upload of volume/template size is unknown.",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering,listDiskOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the zone the volume/template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Image store uuid",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "getUploadParamsForTemplate,getUploadParamsForIso",
      "response": [
        {},
        {
          "description": "the template/volume ID",
          "name": "id",
          "type": "uuid"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "signature to be sent in the POST request.",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "encrypted data to be sent in the POST request.",
          "name": "metadata",
          "type": "string"
        },
        {
          "description": "POST url to upload the file to",
          "name": "postURL",
          "type": "url"
        },
        {
          "description": "the timestamp after which the signature expires",
          "name": "expires",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Updates an existing autoscale vm group.",
      "isasync": true,
      "name": "updateAutoScaleVmGroup",
      "params": [
        {
          "description": "the name of the autoscale vmgroup",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "length": 255,
          "name": "maxmembers",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the group to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "enableAutoScaleVmGroup,listAutoScaleVmGroups,updateAutoScaleVmGroup",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the frequency in which the performance counters to be collected",
          "length": 255,
          "name": "interval",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list of scaledown autoscale policies",
          "length": 255,
          "name": "scaledownpolicyids",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "length": 255,
          "name": "scaleuppolicyids",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": false,
          "type": "list"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "length": 255,
          "name": "minmembers",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "enableAutoScaleVmGroup,listAutoScaleVmGroups",
      "response": [
        {
          "description": "the domain ID of the vm group",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the number of available virtual machines (in Running, Starting, Stopping or Migrating state) in the vmgroup",
          "name": "availablevirtualmachinecount",
          "type": "int"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {},
        {
          "description": "the date when this vm group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project name of the vm group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the vm group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the account owning the vm group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the lb provider of the guest network the lb rule belongs to",
          "name": "lbprovider",
          "type": "string"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the autoscale vm group ",
          "name": "name",
          "type": "string"
        },
        {
          "description": "is group for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the name of the guest network the lb rule belongs to",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the domain name of the vm group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Updates an existing autoscale vm profile.",
      "isasync": true,
      "name": "updateAutoScaleVmProfile",
      "params": [
        {
          "description": "counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161",
          "length": 255,
          "name": "counterparam",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "length": 255,
          "name": "autoscaleuserid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the service offering of the auto deployed virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": false,
          "since": "4.18.0",
          "type": "uuid"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 4KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 1MB of data after base64 encoding.You also need to change vm.userdata.max.length value",
          "length": 1048576,
          "name": "userdata",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId of the auto deployed virtual machine. \nExample: otherdeployparams[0].name=serviceofferingid&otherdeployparams[0].value=a7fb50f6-01d9-11ed-8bc1-77f8f0228926&otherdeployparams[1].name=rootdisksize&otherdeployparams[1].value=10 .\nPossible parameters are \"rootdisksize\", \"diskofferingid\",\"size\", \"securitygroupids\", \"overridediskofferingid\", \"keypairs\", \"affinitygroupids'\" and \"networkids\".",
          "length": 255,
          "name": "otherdeployparams",
          "required": false,
          "since": "4.18.0",
          "type": "map"
        },
        {
          "description": "the ID of the autoscale vm profile",
          "length": 255,
          "name": "id",
          "related": "createAutoScaleVmProfile,listAutoScaleVmProfiles,updateAutoScaleVmProfile",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the profile to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "length": 255,
          "name": "expungevmgraceperiod",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the template of the auto deployed virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "createAutoScaleVmProfile,listAutoScaleVmProfiles",
      "response": [
        {},
        {
          "description": "the availability zone to be used while deploying a virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "is profile for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "name": "expungevmgraceperiod",
          "type": "integer"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "name": "autoscaleuserid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the template to be used while deploying a virtual machine",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the autoscale vm profile ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Base 64 encoded VM user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the service offering to be used while deploying a virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
          "name": "otherdeployparams",
          "type": "map"
        }
      ]
    },
    {
      "description": "Enables an AutoScale Vm Group",
      "isasync": true,
      "name": "enableAutoScaleVmGroup",
      "params": [
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "enableAutoScaleVmGroup,listAutoScaleVmGroups",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listAutoScaleVmGroups",
      "response": [
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the lb provider of the guest network the lb rule belongs to",
          "name": "lbprovider",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the account owning the vm group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the autoscale vm group ",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the project name of the vm group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the date when this vm group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the project id of the vm group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the domain name of the vm group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm group",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the guest network the lb rule belongs to",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "the number of available virtual machines (in Running, Starting, Stopping or Migrating state) in the vmgroup",
          "name": "availablevirtualmachinecount",
          "type": "int"
        },
        {
          "description": "is group for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Deletes a snapshot of a disk volume.",
      "isasync": true,
      "name": "deleteSnapshot",
      "params": [
        {
          "description": "The ID of the snapshot",
          "length": 255,
          "name": "id",
          "related": "revertSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "List the virtual machines owned by the account.",
      "isasync": false,
      "name": "listVirtualMachines",
      "params": [
        {
          "description": "list vms by iso",
          "length": 255,
          "name": "isoid",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the virtual machines, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "since": "4.4",
          "type": "list"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "state of the virtual machine. Possible values are: Running, Stopped, Present, Destroyed, Expunged. Present is used for the state equal not destroyed.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list vms by template",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,registerIso,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the storage ID where vm's volumes belong to",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the resource icon for VMs",
          "length": 255,
          "name": "showicon",
          "required": false,
          "since": "4.16.0.0",
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "name of the virtual machine (a substring match is made against the parameter value, data for all matching VMs will be returned)",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network type; true if need to list vms using Virtual Network, false otherwise",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list vms by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Whether to return the VMs' user data or not. By default, user data will not be returned.",
          "length": 255,
          "name": "userdata",
          "required": false,
          "since": "4.18.0.0",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the pod ID",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, diskoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "list by the service offering",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list vms by ssh keypair name",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "the group ID",
          "length": 255,
          "name": "groupid",
          "related": "createInstanceGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,deployVirtualMachine,destroyVirtualMachine,listVirtualMachines,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Accumulates the VM metrics data instead of returning only the most recent data collected. The default behavior is set by the global configuration vm.stats.increment.metrics.",
          "length": 255,
          "name": "accumulate",
          "required": false,
          "since": "4.17.0",
          "type": "boolean"
        },
        {
          "description": "the user ID that created the VM and is under the account that owns the VM",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the security group ID",
          "length": 255,
          "name": "securitygroupid",
          "related": "createSecurityGroup",
          "required": false,
          "since": "4.15",
          "type": "uuid"
        },
        {
          "description": "list by the backup offering",
          "length": 255,
          "name": "backupofferingid",
          "required": false,
          "since": "4.17",
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "since": "4.16.0",
          "type": "uuid"
        },
        {
          "description": "list by the High Availability offering; true if filtering VMs with HA enabled; false for VMs with HA disabled",
          "length": 255,
          "name": "haenable",
          "required": false,
          "since": "4.15",
          "type": "boolean"
        },
        {
          "description": "the ID of AutoScaling VM Group",
          "length": 255,
          "name": "autoscalevmgroupid",
          "related": "listAutoScaleVmGroups",
          "required": false,
          "since": "4.18.0",
          "type": "uuid"
        },
        {
          "description": "list vms by vpc",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,deployVirtualMachine,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,revertToVMSnapshot,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {},
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        }
      ]
    },
    {
      "description": "Lists guest network IPv6 prefixes",
      "isasync": false,
      "name": "listGuestNetworkIpv6Prefixes",
      "params": [
        {
          "description": "UUID of zone to which the IPv6 prefix belongs to.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "UUID of the IPv6 prefix.",
          "length": 255,
          "name": "id",
          "related": "listGuestNetworkIpv6Prefixes",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "count of the used IPv6 subnets for the prefix.",
          "name": "usedsubnets",
          "type": "integer"
        },
        {},
        {
          "description": "id of zone to which the IPv6 prefix belongs to.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "guest IPv6 prefix",
          "name": "prefix",
          "type": "string"
        },
        {},
        {
          "description": " date when this IPv6 prefix was created.",
          "name": "created",
          "type": "date"
        },
        {
          "description": "count of the available IPv6 subnets for the prefix.",
          "name": "availablesubnets",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "count of the total IPv6 subnets for the prefix.",
          "name": "totalsubnets",
          "type": "integer"
        },
        {
          "description": "id of the guest IPv6 prefix",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Updates the information about Guest OS to Hypervisor specific name mapping",
      "isasync": true,
      "name": "updateGuestOsMapping",
      "params": [
        {
          "description": "UUID of the Guest OS to hypervisor name Mapping",
          "length": 255,
          "name": "id",
          "related": "updateGuestOsMapping",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Hypervisor specific name for this Guest OS",
          "length": 255,
          "name": "osnameforhypervisor",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the Guest OS type",
          "name": "ostypeid",
          "type": "string"
        },
        {},
        {
          "description": "the hypervisor",
          "name": "hypervisor",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the Guest OS mapping",
          "name": "id",
          "type": "string"
        },
        {
          "description": "version of the hypervisor for mapping",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "is the mapping user defined",
          "name": "isuserdefined",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "standard display name for the Guest OS",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "hypervisor specific name for the Guest OS",
          "name": "osnameforhypervisor",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "delete Tungsten-Fabric tag",
      "isasync": true,
      "name": "deleteTungstenFabricTag",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric tag",
          "length": 255,
          "name": "taguuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists all available disk offerings.",
      "isasync": false,
      "name": "listDiskOfferings",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "listed offerings support disk encryption",
          "length": 255,
          "name": "encrypt",
          "required": false,
          "since": "4.18",
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "length": 255,
          "name": "id",
          "related": "createDiskOffering,listDiskOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the storage pool, tags of the storage pool are used to filter the offerings",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "since": "4.17",
          "type": "uuid"
        },
        {
          "description": "id of zone disk offering is associated with",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "since": "4.13",
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the volume, tags of the volume are used to filter the offerings",
          "length": 255,
          "name": "volumeid",
          "related": "attachVolume,createVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "since": "4.17",
          "type": "uuid"
        },
        {
          "description": "name of the disk offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createDiskOffering",
      "response": [
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {},
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "burst io requests read rate of the disk offering",
          "name": "diskIopsReadRateMax",
          "type": "long"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskIopsWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the vsphere storage policy tagged to the disk offering in case of VMware",
          "name": "vspherestoragepolicy",
          "type": "string"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "name": "diskBytesWriteRateMax",
          "type": "long"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "length (in second) of the burst",
          "name": "diskIopsReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "name": "diskBytesReadRateMax",
          "type": "long"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        },
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "To allow or disallow the resize operation on the disks created from this disk offering, if the flag is true then resize is not allowed",
          "name": "disksizestrictness",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with this disk offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "name": "diskIopsWriteRateMax",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "Whether disks using this offering will be encrypted on primary storage",
          "name": "encrypt",
          "type": "boolean"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        }
      ]
    },
    {
      "description": "Update password of a host/pool on management server.",
      "isasync": false,
      "name": "updateHostPassword",
      "params": [
        {
          "description": "the username for the host/cluster",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the host ID",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if the password should also be updated on the hosts",
          "length": 255,
          "name": "update_passwd_on_host",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the new password for the host/cluster",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster,updateCluster",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "adds a range of portable public IP's to a region",
      "isasync": true,
      "name": "createPortableIpRange",
      "params": [
        {
          "description": "the beginning IP address in the portable IP range",
          "length": 255,
          "name": "startip",
          "required": true,
          "type": "string"
        },
        {
          "description": "the netmask of the portable IP range",
          "length": 255,
          "name": "netmask",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ending IP address in the portable IP range",
          "length": 255,
          "name": "endip",
          "required": true,
          "type": "string"
        },
        {
          "description": "the gateway for the portable IP range",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "Id of the Region",
          "length": 255,
          "name": "regionid",
          "related": "addRegion,listRegions",
          "required": true,
          "type": "integer"
        },
        {
          "description": "VLAN id, if not specified defaulted to untagged",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {},
        {},
        {
          "description": "portable IP range ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the end ip of the portable IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "Region Id in which portable ip range is provisioned",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "List of portable IP and association with zone/network/vpc details that are part of GSLB rule",
          "name": "portableipaddress",
          "response": [
            {
              "description": "the domain ID the portable IP address is associated with",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "date the portal IP address was acquired",
              "name": "allocated",
              "type": "date"
            },
            {
              "description": "the ID of the zone the public IP address belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the physical network this belongs to",
              "name": "physicalnetworkid",
              "type": "string"
            },
            {
              "description": "public IP address",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "Region Id in which global load balancer is created",
              "name": "regionid",
              "type": "integer"
            },
            {
              "description": "the account ID the portable IP address is associated with",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "VPC the ip belongs to",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the Network where ip belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the start ip of the portable IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates an existing cluster",
      "isasync": false,
      "name": "updateCluster",
      "params": [
        {
          "description": "the ID of the Cluster",
          "length": 255,
          "name": "id",
          "related": "addCluster,updateCluster",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "hypervisor type of the cluster",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "hypervisor type of the cluster",
          "length": 255,
          "name": "clustertype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster name",
          "length": 255,
          "name": "clustername",
          "required": false,
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "length": 255,
          "name": "managedstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addCluster",
      "response": [
        {
          "description": "Ovm3 VIP to use for pooling and/or clustering",
          "name": "ovm3vip",
          "type": "string"
        },
        {},
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a Cisco ASA 1000v appliance",
      "isasync": false,
      "name": "deleteCiscoAsa1000vResource",
      "params": [
        {
          "description": "Cisco ASA 1000v resource ID",
          "length": 255,
          "name": "resourceid",
          "related": "addCiscoAsa1000vResource,listCiscoAsa1000vResources",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Upgrades a running Kubernetes cluster",
      "isasync": true,
      "name": "upgradeKubernetesCluster",
      "params": [
        {
          "description": "the ID of the Kubernetes version for upgrade",
          "length": 255,
          "name": "kubernetesversionid",
          "related": "listKubernetesSupportedVersions",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "createKubernetesCluster,startKubernetesCluster,upgradeKubernetesCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createKubernetesCluster,startKubernetesCluster",
      "response": [
        {
          "description": "the master nodes count for the Kubernetes cluster. This parameter is deprecated, please use 'controlnodes' parameter.",
          "name": "masternodes",
          "type": "long"
        },
        {
          "description": "the size (worker nodes count) of the Kubernetes cluster",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the cpu cores of the Kubernetes cluster",
          "name": "cpunumber",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the domain in which the Kubernetes cluster exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionid",
          "type": "string"
        },
        {
          "description": "the description of the Kubernetes cluster",
          "name": "description",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster dashboard UI",
          "name": "consoleendpoint",
          "type": "string"
        },
        {},
        {
          "description": "the memory the Kubernetes cluster",
          "name": "memory",
          "type": "string"
        },
        {
          "description": "Maximum size of the cluster",
          "name": "maxsize",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the service offering of the Kubernetes cluster",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "keypair details",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the project id of the Kubernetes cluster",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes cluster",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the control nodes count for the Kubernetes cluster",
          "name": "controlnodes",
          "type": "long"
        },
        {
          "description": "the state of the Kubernetes cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Public IP Address of the cluster",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the account associated with the Kubernetes cluster",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the id of the Kubernetes cluster",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the Kubernetes cluster",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Minimum size of the cluster",
          "name": "minsize",
          "type": "long"
        },
        {
          "description": "the ID of the service offering of the Kubernetes cluster",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the network of the Kubernetes cluster",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the date when this Kubernetes cluster was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the template of the Kubernetes cluster",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the list of virtualmachine associated with this Kubernetes cluster",
          "name": "virtualmachines",
          "type": "list"
        },
        {
          "description": "the name of the domain in which the Kubernetes cluster exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Whether autoscaling is enabled for the cluster",
          "name": "autoscalingenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the network of the Kubernetes cluster",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "Public IP Address ID of the cluster",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists storage providers.",
      "isasync": false,
      "name": "listStorageProviders",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the type of storage provider: either primary or image",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the storage provider",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the type of the storage provider: primary or image provider",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "List profile in ucs manager",
      "isasync": false,
      "name": "listUcsProfiles",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id for the ucs manager",
          "length": 255,
          "name": "ucsmanagerid",
          "related": "addUcsManager",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "ucs profile dn",
          "name": "ucsdn",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "This command allows the user to query the seceret and API keys for the account",
      "isasync": false,
      "name": "getUserKeys",
      "params": [
        {
          "description": "ID of the user whose keys are required",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "registerUserKeys",
      "response": [
        {},
        {
          "description": "the api key of the registered user",
          "name": "apikey",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the secret key of the registered user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.10.0"
    },
    {
      "description": "update global load balancer rules.",
      "isasync": true,
      "name": "updateGlobalLoadBalancerRule",
      "params": [
        {
          "description": "load balancer algorithm (roundrobin, leastconn, proximity) that is used to distributed traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'",
          "length": 255,
          "name": "gslblbmethod",
          "required": false,
          "type": "string"
        },
        {
          "description": "session sticky method (sourceip) if not specified defaults to sourceip",
          "length": 255,
          "name": "gslbstickysessionmethodname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "updateGlobalLoadBalancerRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "DNS domain name given for the global load balancer",
          "name": "gslbdomainname",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "List of load balancer rules that are part of GSLB rule",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "the description of the load balancer",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the id of the zone the rule belongs to",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the id of the guest network the lb rule belongs to",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the domain of the load balancer rule",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the zone the load balancer rule belongs to",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the public port",
              "name": "publicport",
              "type": "string"
            },
            {
              "description": "the load balancer algorithm (source, roundrobin, leastconn)",
              "name": "algorithm",
              "type": "string"
            },
            {
              "description": "the account of the load balancer rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the state of the rule",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the project name of the load balancer",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the protocol of the loadbalanacer rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "the load balancer rule ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,).",
              "name": "cidrlist",
              "type": "string"
            },
            {
              "description": "the project id of the load balancer",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the private port",
              "name": "privateport",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with load balancer",
              "name": "tags",
              "response": [
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the name of the load balancer",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the public ip address id",
              "name": "publicipid",
              "type": "string"
            },
            {
              "description": "the domain ID of the load balancer rule",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "is rule for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the public ip address",
              "name": "publicip",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "session persistence method used for the global load balancer",
          "name": "gslbstickysessionmethodname",
          "type": "string"
        },
        {
          "description": "global load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "GSLB service type",
          "name": "gslbservicetype",
          "type": "string"
        },
        {
          "description": "the description of the global load balancer rule",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Load balancing method used for the global load balancer",
          "name": "gslblbmethod",
          "type": "string"
        },
        {
          "description": "name of the global load balancer rule",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Region Id in which global load balancer is created",
          "name": "regionid",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Creates a condition for VM auto scaling",
      "isasync": true,
      "name": "createCondition",
      "params": [
        {
          "description": "the account of the condition. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Relational Operator to be used with threshold. Valid values are EQ, GT, LT, GE, LE.",
          "length": 255,
          "name": "relationaloperator",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the Counter.",
          "length": 255,
          "name": "counterid",
          "related": "createCounter,listCounters",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the domain ID of the account.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Value for which the Counter will be evaluated with the Operator selected.",
          "length": 255,
          "name": "threshold",
          "required": true,
          "type": "long"
        },
        {
          "description": "an optional project for condition",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Id of the Counter.",
          "name": "counterid",
          "type": "string"
        },
        {
          "description": "the project id of the Condition.",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the owner of the Condition.",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Threshold Value for the counter.",
          "name": "threshold",
          "type": "long"
        },
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the domain name of the owner.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain id of the Condition owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Relational Operator to be used with threshold.",
          "name": "relationaloperator",
          "type": "string"
        },
        {
          "description": "the Name of the Counter.",
          "name": "countername",
          "type": "string"
        },
        {
          "description": "the project name of the Condition",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the id of the Condition",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Details of the Counter.",
          "name": "counter",
          "type": "counterresponse"
        }
      ]
    },
    {
      "description": "Lists projects and provides detailed information for listed projects",
      "isasync": false,
      "name": "listProjects",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the resource icon for projects",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "comma separated list of project details requested, value can be a list of [ all, resource, min]",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "List projects by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list projects by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list projects by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List projects by username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list projects by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list projects by project ID",
          "length": 255,
          "name": "id",
          "related": "listProjectAccounts,activateProject,listProjects,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listProjectAccounts,activateProject,suspendProject,updateProject",
      "response": [
        {
          "description": "the project account name of the project",
          "name": "projectaccountname",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the account name of the project's owners",
          "name": "owner",
          "type": "list"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {},
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date this project was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Creates an account",
      "isasync": false,
      "name": "createAccount",
      "params": [
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Account UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "accountid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "details for account used to store specific parameters",
          "length": 255,
          "name": "accountdetails",
          "required": false,
          "type": "map"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": true,
          "type": "string"
        },
        {
          "description": "Unique username.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "firstname",
          "length": 255,
          "name": "firstname",
          "required": true,
          "type": "string"
        },
        {
          "description": "lastname",
          "length": 255,
          "name": "lastname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of the account.  Specify 0 for user, 1 for root admin, and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Creates the account under the specified role.",
          "length": 255,
          "name": "roleid",
          "related": "importRole,listRoles,updateRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the account to be created. The user will be added to this newly created account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network domain for the account's networks",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "enableAccount,listAccounts,listAccounts",
      "response": [
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {},
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {},
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        }
      ]
    },
    {
      "description": "Revert VM from a vmsnapshot.",
      "isasync": true,
      "name": "revertToVMSnapshot",
      "params": [
        {
          "description": "The ID of the vm snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "listVMSnapshot,createVMSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,deployVirtualMachine,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {},
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            }
          ],
          "type": "set"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {},
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists host tags",
      "isasync": false,
      "name": "listHostTags",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the host tag",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the host tag",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the host ID of the host tag",
          "name": "hostid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Add a new guest OS type",
      "isasync": true,
      "name": "addGuestOs",
      "params": [
        {
          "description": "Map of (key/value pairs)",
          "length": 255,
          "name": "details",
          "required": true,
          "type": "map"
        },
        {
          "description": "ID of Guest OS category",
          "length": 255,
          "name": "oscategoryid",
          "related": "listOsCategories",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Optional name for Guest OS",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Unique display name for Guest OS",
          "length": 255,
          "name": "osdisplayname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "is the guest OS user defined",
          "name": "isuserdefined",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name/description of the OS type",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the OS category",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.4.0"
    },
    {
      "description": "add an annotation.",
      "isasync": false,
      "name": "addAnnotation",
      "params": [
        {
          "description": "the entity type (only HOST is allowed atm)",
          "length": 255,
          "name": "entitytype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the annotation is visible for admins only",
          "length": 255,
          "name": "adminsonly",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "the annotation text",
          "length": 255,
          "name": "annotation",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the entity to annotate",
          "length": 255,
          "name": "entityid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "removeAnnotation,updateAnnotationVisibility",
      "response": [
        {
          "description": "the contents of the annotation",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the name of the entity to which this annotation pertains",
          "name": "entityname",
          "type": "string"
        },
        {
          "description": "the (uu)id of the annotation",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the creation timestamp for this annotation",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the removal timestamp for this annotation",
          "name": "removed",
          "type": "date"
        },
        {},
        {
          "description": "The username of the user that entered the annotation",
          "name": "username",
          "type": "string"
        },
        {
          "description": "True if the annotation is available for admins only",
          "name": "adminsonly",
          "type": "boolean"
        },
        {},
        {
          "description": "The (uu)id of the user that entered the annotation",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the (uu)id of the entity to which this annotation pertains",
          "name": "entityid",
          "type": "string"
        },
        {
          "description": "the type of the annotated entity",
          "name": "entitytype",
          "type": "string"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "Removes a Guest OS Mapping.",
      "isasync": true,
      "name": "removeGuestOsMapping",
      "params": [
        {
          "description": "ID of the guest OS mapping",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "4.4.0"
    },
    {
      "description": "create Tungsten-Fabric service group",
      "isasync": true,
      "name": "createTungstenFabricServiceGroup",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric service group protocol",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric service group end port",
          "length": 255,
          "name": "endport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric service group start port",
          "length": 255,
          "name": "startport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric service group name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric service group name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric service group uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric service group protocol",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric service group start port",
          "name": "startport",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric service group end port",
          "name": "endport",
          "type": "int"
        }
      ]
    },
    {
      "description": "Registers an existing ISO into the CloudStack Cloud.",
      "isasync": false,
      "name": "registerIso",
      "params": [
        {
          "description": "the display text of the ISO. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if you want this ISO to be featured",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional account name. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Register ISO for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if password reset feature is supported; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this ISO is bootable. If not passed explicitly its assumed to be true",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if ISO should bypass Secondary Storage and be downloaded to Primary Storage on deployment",
          "length": 255,
          "name": "directdownload",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the ISO",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if you want to register the ISO to be publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if ISO contains XS/VMWare tools inorder to support dynamic scaling of VM CPU/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the ISO or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Image store UUID",
          "length": 255,
          "name": "imagestoreuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the OS type that best represents the OS of this ISO. If the ISO is bootable this parameter needs to be passed",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone you wish to register the ISO to.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the checksum value of this ISO. The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "the URL to where the ISO is currently being hosted",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listIsos,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {},
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Cisco ASA 1000v appliances",
      "isasync": false,
      "name": "listCiscoAsa1000vResources",
      "params": [
        {
          "description": "Cisco ASA 1000v resource ID",
          "length": 255,
          "name": "resourceid",
          "related": "addCiscoAsa1000vResource,listCiscoAsa1000vResources",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Hostname or ip address of the Cisco ASA 1000v appliance.",
          "length": 255,
          "name": "hostname",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addCiscoAsa1000vResource",
      "response": [
        {},
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates new NS Vpx",
      "isasync": true,
      "name": "deployNetscalerVpx",
      "params": [
        {
          "description": "the ID of the template for the virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "availability zone for the virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The network this ip address should be associated to.",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addNetscalerLoadBalancer,listNetscalerLoadBalancers,registerNetscalerControlCenter",
      "response": [
        {
          "description": "the private interface of the load balancer",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "true if device is dedicated for an account",
          "name": "lbdevicededicated",
          "type": "boolean"
        },
        {
          "description": "device capacity",
          "name": "lbdevicecapacity",
          "type": "long"
        },
        {
          "description": "the management IP address of the external load balancer",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the public interface of the load balancer",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "true if NetScaler device is provisioned to be a GSLB service provider",
          "name": "gslbprovider",
          "type": "boolean"
        },
        {
          "description": "the physical network to which this netscaler device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if NetScaler device is provisioned exclusively to be a GSLB service provider",
          "name": "isexclusivegslbprovider",
          "type": "boolean"
        },
        {
          "description": "public IP of the NetScaler representing GSLB site",
          "name": "gslbproviderpublicip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "device id of the netscaler load balancer",
          "name": "lbdeviceid",
          "type": "string"
        },
        {
          "description": "private IP of the NetScaler representing GSLB site",
          "name": "gslbproviderprivateip",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "lbdevicename",
          "type": "string"
        },
        {
          "description": "device state",
          "name": "lbdevicestate",
          "type": "string"
        },
        {
          "description": "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device.",
          "name": "podids",
          "type": "list"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Lists the volumes of elastistor",
      "isasync": false,
      "name": "listElastistorVolume",
      "params": [
        {
          "description": "the ID of the account",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "graceallowed",
          "name": "graceallowed",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "syncronization",
          "name": "sync",
          "type": "string"
        },
        {},
        {
          "description": "the name of the volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "deduplication",
          "name": "deduplication",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "compression",
          "name": "compression",
          "type": "string"
        },
        {
          "description": "the id of the volume",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "deletes a range of portable public IP's associated with a region",
      "isasync": true,
      "name": "deletePortableIpRange",
      "params": [
        {
          "description": "Id of the portable ip range",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "add a baremetal pxe server",
      "isasync": true,
      "name": "addBaremetalPxeKickStartServer",
      "params": [
        {
          "description": "Tftp root directory of PXE server",
          "length": 255,
          "name": "tftpdir",
          "required": true,
          "type": "string"
        },
        {
          "description": "URL of the external pxe device",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach external pxe device",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Credentials to reach external pxe device",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "type of pxe device",
          "length": 255,
          "name": "pxeservertype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Pod Id",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "url",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the physical network to which this external dhcp device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device id of ",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Tftp root directory of PXE server",
          "name": "tftpdir",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Lists Nicira NVP devices",
      "isasync": false,
      "name": "listNiciraNvpDevices",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "nicira nvp device ID",
          "length": 255,
          "name": "nvpdeviceid",
          "related": "addNiciraNvpDevice,listNiciraNvpDevices",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addNiciraNvpDevice",
      "response": [
        {
          "description": "this L2 gateway service Uuid",
          "name": "l2gatewayserviceuuid",
          "type": "string"
        },
        {
          "description": "device id of the Nicire Nvp",
          "name": "nvpdeviceid",
          "type": "string"
        },
        {
          "description": "this L3 gateway service Uuid",
          "name": "l3gatewayserviceuuid",
          "type": "string"
        },
        {},
        {
          "description": "device name",
          "name": "niciradevicename",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the controller Ip address",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the transport zone Uuid",
          "name": "transportzoneuuid",
          "type": "string"
        },
        {
          "description": "the physical network to which this Nirica Nvp belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Lists all alerts.",
      "isasync": false,
      "name": "listAlerts",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by alert name",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.3",
          "type": "string"
        },
        {
          "description": "the ID of the alert",
          "length": 255,
          "name": "id",
          "related": "listAlerts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list by alert type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "description of the alert",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the name of the alert",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "One of the following alert types: MEMORY = 0, CPU = 1, STORAGE = 2, STORAGE_ALLOCATED = 3, PUBLIC_IP = 4, PRIVATE_IP = 5, SECONDARY_STORAGE = 6, HOST = 7, USERVM = 8, DOMAIN_ROUTER = 9, CONSOLE_PROXY = 10, ROUTING = 11: lost connection to default route (to the gateway), STORAGE_MISC = 12, USAGE_SERVER = 13, MANAGMENT_NODE = 14, DOMAIN_ROUTER_MIGRATE = 15, CONSOLE_PROXY_MIGRATE = 16, USERVM_MIGRATE = 17, VLAN = 18, SSVM = 19, USAGE_SERVER_RESULT = 20, STORAGE_DELETE = 21, UPDATE_RESOURCE_COUNT = 22, USAGE_SANITY_RESULT = 23, DIRECT_ATTACHED_PUBLIC_IP = 24, LOCAL_STORAGE = 25, RESOURCE_LIMIT_EXCEEDED = 26, SYNC = 27, UPLOAD_FAILED = 28, OOBM_AUTH_ERROR = 29",
          "name": "type",
          "type": "short"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the id of the alert",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the alert was sent",
          "name": "sent",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates and automatically starts a virtual machine based on a service offering, disk offering, and template.",
      "isasync": true,
      "name": "deployVirtualMachine",
      "params": [
        {
          "description": "Controls specific policies on IO",
          "length": 255,
          "name": "iodriverpolicy",
          "required": false,
          "type": "string"
        },
        {
          "description": "IOThreads are dedicated event loop threads for supported disk devices to perform block I/O requests in order to improve scalability especially on an SMP host/guest with many LUNs.",
          "length": 255,
          "name": "iothreadsenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the ssh key pair used to login to the virtual machine",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the disk offering for the virtual machine. If the template is of ISO format, the diskOfferingId is for the root disk volume. Otherwise this parameter is used to indicate the offering for the data disk volume. If the templateId parameter passed is from a Template object, the diskOfferingId refers to a DATA Disk Volume created. If the templateId parameter passed is from an ISO object, the diskOfferingId refers to a ROOT Disk Volume created.",
          "length": 255,
          "name": "diskofferingid",
          "related": "createDiskOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Boot Mode [Legacy] or [Secure] Applicable when Boot Type Selected is UEFI, otherwise Legacy only for BIOS. Not applicable with VMware if the template is marked as deploy-as-is, as we honour what is defined in the template.",
          "length": 255,
          "name": "bootmode",
          "required": false,
          "since": "4.14.0.0",
          "type": "string"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "if true the image tags (if any) will be copied to the VM, default value is false",
          "length": 255,
          "name": "copyimagetags",
          "required": false,
          "since": "4.13",
          "type": "boolean"
        },
        {
          "description": "the mac address for default vm's network",
          "length": 255,
          "name": "macaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listIsos,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional keyboard device type for the virtual machine. valid value can be one of de,de-ch,es,fi,fr,fr-be,fr-ch,is,it,jp,nl-be,no,pt,uk,us",
          "length": 255,
          "name": "keyboard",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional user generated name for the virtual machine",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional group for the virtual machine",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ipv6 address for default vm's network",
          "length": 255,
          "name": "ip6address",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma separated list of security groups names that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
          "length": 255,
          "name": "securitygroupnames",
          "related": "createSecurityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "the ID of the disk offering for the virtual machine to be used for root volume instead of the disk offering mapped in service offering.In case of virtual machine deploying from ISO, then the diskofferingid specified for root volume is ignored and uses this override disk offering id",
          "length": 255,
          "name": "overridediskofferingid",
          "related": "createDiskOffering",
          "required": false,
          "since": "4.17",
          "type": "uuid"
        },
        {
          "description": "the arbitrary size for the DATADISK volume. Mutually exclusive with diskOfferingId",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ip address for default vm's network",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "datadisk template to disk-offering mapping; an optional parameter used to create additional data disks from datadisk templates; can't be specified with diskOfferingId parameter",
          "length": 255,
          "name": "datadiskofferinglist",
          "required": false,
          "since": "4.11",
          "type": "map"
        },
        {
          "description": "true if start vm after creating; defaulted to true if not specified",
          "length": 255,
          "name": "startvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Guest VM Boot option either custom[UEFI] or default boot [BIOS]. Not applicable with VMware if the template is marked as deploy-as-is, as we honour what is defined in the template.",
          "length": 255,
          "name": "boottype",
          "required": false,
          "since": "4.14.0.0",
          "type": "string"
        },
        {
          "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine.Mutually exclusive with affinitygroupids parameter",
          "length": 255,
          "name": "affinitygroupnames",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "Deployment planner to use for vm allocation. Available to ROOT admin only",
          "length": 255,
          "name": "deploymentplanner",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "Deploy vm for the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "comma separated list of security groups id that going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter",
          "length": 255,
          "name": "securitygroupids",
          "related": "createSecurityGroup",
          "required": false,
          "type": "list"
        },
        {
          "description": "destination Cluster ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "since": "4.13",
          "type": "uuid"
        },
        {
          "description": "Boot into hardware setup or not (ignored if startVm = false, only valid for vmware)",
          "length": 255,
          "name": "bootintosetup",
          "required": false,
          "since": "4.15.0.0",
          "type": "boolean"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if virtual machine needs to be dynamically scalable",
          "length": 255,
          "name": "dynamicscalingenabled",
          "required": false,
          "since": "4.16",
          "type": "boolean"
        },
        {
          "description": "ip to network mapping. Can't be specified with networkIds parameter. Example: iptonetworklist[0].ip=10.10.10.11&iptonetworklist[0].ipv6=fc00:1234:5678::abcd&iptonetworklist[0].networkid=uuid&iptonetworklist[0].mac=aa:bb:cc:dd:ee::ff - requests to use ip 10.10.10.11 in network id=uuid",
          "length": 255,
          "name": "iptonetworklist",
          "required": false,
          "type": "map"
        },
        {
          "description": "used to specify the custom parameters. 'extraconfig' is not allowed to be passed in details",
          "length": 255,
          "name": "details",
          "required": false,
          "since": "4.3",
          "type": "map"
        },
        {
          "description": "the hypervisor on which to deploy the virtual machine. The parameter is required and respected only when hypervisor info is not set on the ISO/Template passed to the call",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Userdata",
          "length": 255,
          "name": "userdataid",
          "related": "",
          "required": false,
          "since": "4.18",
          "type": "uuid"
        },
        {
          "description": "Optional field to resize root disk on deploy. Value is in GB. Only applies to template-based deployments. Analogous to details[0].rootdisksize, which takes precedence over this parameter if both are provided",
          "length": 255,
          "name": "rootdisksize",
          "required": false,
          "since": "4.4",
          "type": "long"
        },
        {
          "description": "names of the ssh key pairs used to login to the virtual machine",
          "length": 255,
          "name": "keypairs",
          "required": false,
          "since": "4.17",
          "type": "list"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 4KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 1MB of data after base64 encoding.",
          "length": 1048576,
          "name": "userdata",
          "required": false,
          "type": "string"
        },
        {
          "description": "list of network ids used by virtual machine. Can't be specified with ipToNetworkList parameter",
          "length": 255,
          "name": "networkids",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "list"
        },
        {
          "description": "DHCP options which are passed to the VM on start up Example: dhcpoptionsnetworklist[0].dhcp:114=url&dhcpoptionsetworklist[0].networkid=networkid&dhcpoptionsetworklist[0].dhcp:66=www.test.com",
          "length": 255,
          "name": "dhcpoptionsnetworklist",
          "required": false,
          "type": "map"
        },
        {
          "description": "an optional field, whether to the display the vm to the end user or not.",
          "length": 255,
          "name": "displayvm",
          "required": false,
          "since": "4.2",
          "type": "boolean"
        },
        {
          "description": "used to specify the parameters values for the variables in userdata.",
          "length": 255,
          "name": "userdatadetails",
          "required": false,
          "since": "4.18",
          "type": "map"
        },
        {
          "description": "availability zone for the virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "used to specify the vApp properties.",
          "length": 255,
          "name": "properties",
          "required": false,
          "since": "4.15",
          "type": "map"
        },
        {
          "description": "an optional URL encoded string that can be passed to the virtual machine upon successful deployment",
          "length": 5120,
          "name": "extraconfig",
          "required": false,
          "since": "4.12",
          "type": "string"
        },
        {
          "description": "host name for the virtual machine",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "destination Pod ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "since": "4.13",
          "type": "uuid"
        },
        {
          "description": "VMware only: used to specify network mapping of a vApp VMware template registered \"as-is\". Example nicnetworklist[0].ip=Nic-101&nicnetworklist[0].network=uuid",
          "length": 255,
          "name": "nicnetworklist",
          "required": false,
          "since": "4.15",
          "type": "map"
        },
        {
          "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Mutually exclusive with affinitygroupnames parameter",
          "length": 255,
          "name": "affinitygroupids",
          "related": "",
          "required": false,
          "type": "list"
        }
      ],
      "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {},
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Upgrades router to use newer template",
      "isasync": false,
      "name": "upgradeRouterTemplate",
      "params": [
        {
          "description": "upgrades router with the specified Id",
          "length": 255,
          "name": "id",
          "related": "destroyRouter,listRouters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers owned by the specified account",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "upgrades all routers within the specified pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers owned by the specified domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers within the specified cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "upgrades all routers within the specified zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Cancels host maintenance.",
      "isasync": true,
      "name": "cancelHostMaintenance",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "addHost,cancelHostMaintenance,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addHost,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
      "response": [
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all VLAN IP ranges.",
      "isasync": false,
      "name": "listVlanIpRanges",
      "params": [
        {
          "description": "physical network id of the VLAN IP range",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account with which the VLAN IP range is associated. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Pod ID of the VLAN IP range",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,updateZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if VLAN is of Virtual type, false if Direct",
          "length": 255,
          "name": "forvirtualnetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the domain ID with which the VLAN IP range is associated.  If used with the account parameter, returns all VLAN IP ranges for that account in the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "updateVlanIpRange,listVlanIpRanges,dedicatePublicIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID or VID of the VLAN. Default is an \"untagged\" VLAN.",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "network id of the VLAN IP range",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "project who will own the VLAN",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "updateVlanIpRange,dedicatePublicIpRange",
      "response": [
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "indicates whether VLAN IP range is dedicated to system vms or not",
          "name": "forsystemvms",
          "type": "boolean"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the cidr of the VLAN IP range",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {},
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a Zone.",
      "isasync": false,
      "name": "updateZone",
      "params": [
        {
          "description": "the dns search order list",
          "length": 255,
          "name": "dnssearchorder",
          "required": false,
          "type": "list"
        },
        {
          "description": "the first DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "length": 255,
          "name": "internaldns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "id",
          "related": "createZone,updateZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Network domain name for the networks in the zone; empty string will update domain with NULL value",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "length": 255,
          "name": "localstorageenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the first DNS for the Zone",
          "length": 255,
          "name": "dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "updates a private zone to public if set, but not vice-versa",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the details for the Zone",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "length": 255,
          "name": "dhcpprovider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the Zone",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "length": 255,
          "name": "dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the zone, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the second internal DNS for the Zone",
          "length": 255,
          "name": "internaldns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "length": 255,
          "name": "guestcidraddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createZone,listZones,listZones",
      "response": [
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "The maximum value the MTU can have on the VR's public interfaces",
          "name": "routerpublicinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {},
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the type of the zone - core or edge",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {
          "description": "Allow end users to specify VR MTU",
          "name": "allowuserspecifyvrmtu",
          "type": "boolean"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "The maximum value the MTU can have on the VR's private interfaces",
          "name": "routerprivateinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Extracts volume",
      "isasync": true,
      "name": "extractVolume",
      "params": [
        {
          "description": "the ID of the zone where the volume is located",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the url to which the volume would be extracted",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        }
      ],
      "related": "extractTemplate",
      "response": [
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        },
        {},
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists project's accounts",
      "isasync": false,
      "name": "listProjectAccounts",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "ID of the project",
          "length": 255,
          "name": "projectid",
          "related": "listProjectAccounts,activateProject,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list accounts of the project by account name",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list invitation by user ID",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list accounts of the project by project role id",
          "length": 255,
          "name": "projectroleid",
          "related": "updateProjectRole",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list accounts of the project by role",
          "length": 255,
          "name": "role",
          "required": false,
          "type": "string"
        }
      ],
      "related": "activateProject,suspendProject,updateProject",
      "response": [
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the date this project was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the account name of the project's owners",
          "name": "owner",
          "type": "list"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the project account name of the project",
          "name": "projectaccountname",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {},
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates an existing autoscale policy.",
      "isasync": true,
      "name": "updateAutoScalePolicy",
      "params": [
        {
          "description": "the ID of the autoscale policy",
          "length": 255,
          "name": "id",
          "related": "listAutoScalePolicies,updateAutoScalePolicy",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "length": 255,
          "name": "conditionids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "the name of the autoscale policy",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the cool down period in which the policy should not be evaluated after the action has been taken",
          "length": 255,
          "name": "quiettime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the duration in which the conditions have to be true before action is taken",
          "length": 255,
          "name": "duration",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listAutoScalePolicies",
      "response": [
        {
          "description": "the account owning the autoscale policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "name": "conditions",
          "type": "list"
        },
        {
          "description": "the project name of the autoscale policy",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the autoscale policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "name": "quiettime",
          "type": "integer"
        },
        {
          "description": "the domain name of the autoscale policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the autoscale policy ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the project id autoscale policy",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain ID of the autoscale policy",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "name": "duration",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "name": "action",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a disk offering.",
      "isasync": false,
      "name": "createDiskOffering",
      "params": [
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "length": 255,
          "name": "cachemode",
          "required": false,
          "since": "4.14",
          "type": "string"
        },
        {
          "description": "alternate display text of the disk offering",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "tags for the disk offering",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to display the offering to the end user or not.",
          "length": 255,
          "name": "displayoffering",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "whether disk offering size is custom or not",
          "length": 255,
          "name": "customized",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "whether disk offering iops is custom or not",
          "length": 255,
          "name": "customizediops",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Name of the storage policy defined at vCenter, this is applicable only for VMware",
          "length": 255,
          "name": "storagepolicy",
          "related": "listVsphereStoragePolicies",
          "required": false,
          "since": "4.15",
          "type": "uuid"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "iopswriteratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "io requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "max iops of the disk offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "Volumes using this offering should be encrypted",
          "length": 255,
          "name": "encrypt",
          "required": false,
          "since": "4.18",
          "type": "boolean"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriteratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "byteswriteratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "the storage type of the disk offering. Values are local and shared.",
          "length": 255,
          "name": "storagetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "io requests write rate of the disk offering",
          "length": 255,
          "name": "iopswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "length": 255,
          "name": "hypervisorsnapshotreserve",
          "required": false,
          "type": "integer"
        },
        {
          "description": "burst requests read rate of the disk offering",
          "length": 255,
          "name": "iopsreadratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "bytesreadratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "To allow or disallow the resize operation on the disks created from this disk offering, if the flag is true then resize is not allowed",
          "length": 255,
          "name": "disksizestrictness",
          "required": false,
          "since": "4.17",
          "type": "boolean"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriteratemax",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the containing domain(s), null for public offerings",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "list"
        },
        {
          "description": "length (in seconds) of the burst",
          "length": 255,
          "name": "iopsreadratemaxlength",
          "required": false,
          "type": "long"
        },
        {
          "description": "details to specify disk offering parameters",
          "length": 255,
          "name": "details",
          "required": false,
          "since": "4.16",
          "type": "map"
        },
        {
          "description": "size of the disk offering in GB (1GB = 1,073,741,824 bytes)",
          "length": 255,
          "name": "disksize",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the containing zone(s), null for public offerings",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": false,
          "since": "4.13",
          "type": "list"
        },
        {
          "description": "bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadrate",
          "required": false,
          "type": "long"
        },
        {
          "description": "name of the disk offering",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "length": 255,
          "name": "provisioningtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "min iops of the disk offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "bytes write rate of the disk offering",
          "length": 255,
          "name": "byteswriterate",
          "required": false,
          "type": "long"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "length": 255,
          "name": "bytesreadratemax",
          "required": false,
          "type": "long"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the vsphere storage policy tagged to the disk offering in case of VMware",
          "name": "vspherestoragepolicy",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with this disk offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the storage type for this disk offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "bytes read rate of the disk offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "true if disk offering uses custom size, false otherwise",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "name": "diskIopsWriteRateMax",
          "type": "long"
        },
        {
          "description": "To allow or disallow the resize operation on the disks created from this disk offering, if the flag is true then resize is not allowed",
          "name": "disksizestrictness",
          "type": "boolean"
        },
        {
          "description": "unique ID of the disk offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "name": "diskBytesWriteRateMax",
          "type": "long"
        },
        {
          "description": "io requests read rate of the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {},
        {
          "description": "the date this disk offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "whether to display the offering to the end user or not.",
          "name": "displayoffering",
          "type": "boolean"
        },
        {
          "description": "burst io requests read rate of the disk offering",
          "name": "diskIopsReadRateMax",
          "type": "long"
        },
        {
          "description": "Whether disks using this offering will be encrypted on primary storage",
          "name": "encrypt",
          "type": "boolean"
        },
        {
          "description": "io requests write rate of the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskIopsWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "length (in second) of the burst",
          "name": "diskIopsReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "the size of the disk offering in GB",
          "name": "disksize",
          "type": "long"
        },
        {
          "description": "the tags for the disk offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the name of the disk offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "name": "diskBytesReadRateMax",
          "type": "long"
        },
        {
          "description": "an alternate display text of the disk offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {}
      ]
    },
    {
      "description": "Lists all volumes.",
      "isasync": false,
      "name": "listVolumes",
      "params": [
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "state of the volume. Possible values are: Ready, Allocated, Destroy, Expunging, Expunged.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the pod id the disk volume belongs to",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the IDs of the volumes, mutually exclusive with id",
          "length": 255,
          "name": "ids",
          "related": "attachVolume,createVolume,listVolumes,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "since": "4.9",
          "type": "list"
        },
        {
          "description": "the cluster id the disk volume belongs to",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the storage pool, available to ROOT admin only",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "since": "4.3",
          "type": "string"
        },
        {
          "description": "list system VMs; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "listsystemvms",
          "required": false,
          "since": "4.18",
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the type of disk volume",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list volumes by disk offering",
          "length": 255,
          "name": "diskofferingid",
          "related": "",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "list volumes on specified host",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "attachVolume,createVolume,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {},
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a load balancer health check policy",
      "isasync": true,
      "name": "createLBHealthCheckPolicy",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "HTTP ping path",
          "length": 255,
          "name": "pingpath",
          "required": false,
          "type": "string"
        },
        {
          "description": "Number of consecutive health check success before declaring an instance healthy",
          "length": 255,
          "name": "healthythreshold",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Number of consecutive health check failures before declaring an instance unhealthy",
          "length": 255,
          "name": "unhealthythreshold",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Amount of time between health checks (1 sec - 20940 sec)",
          "length": 255,
          "name": "intervaltime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the description of the load balancer health check policy",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "Time to wait when receiving a response from the health check (2sec - 60 sec)",
          "length": 255,
          "name": "responsetimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "listLBHealthCheckPolicies",
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Locks a user account",
      "isasync": false,
      "name": "lockUser",
      "params": [
        {
          "description": "Locks user by user ID.",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,lockUser,updateUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createUser,disableUser,enableUser,getUser,listUsers,updateUser",
      "response": [
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Checks if the Cloudian Connector is enabled",
      "isasync": false,
      "name": "cloudianIsEnabled",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Cloudian Management Console base URL",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Cloudian connector enabled state",
          "name": "enabled",
          "type": "boolean"
        },
        {},
        {}
      ],
      "since": "4.11.0"
    },
    {
      "description": "Lists load balancer health check policies.",
      "isasync": false,
      "name": "listLBHealthCheckPolicies",
      "params": [
        {
          "description": "the ID of the health check policy",
          "length": 255,
          "name": "id",
          "related": "listLBHealthCheckPolicies",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain of the HealthCheck policy",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the account of the HealthCheck policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of healthcheckpolicies",
          "name": "healthcheckpolicy",
          "response": [
            {
              "description": "Number of consecutive health check success before declaring an instance healthy",
              "name": "healthcheckthresshold",
              "type": "int"
            },
            {
              "description": "Number of consecutive health check failures before declaring an instance unhealthy.",
              "name": "unhealthcheckthresshold",
              "type": "int"
            },
            {
              "description": "the description of the healthcheck policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "Amount of time between health checks",
              "name": "healthcheckinterval",
              "type": "int"
            },
            {
              "description": "Time to wait when receiving a response from the health check",
              "name": "responsetime",
              "type": "int"
            },
            {
              "description": "the LB HealthCheck policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the pingpath  of the healthcheck policy",
              "name": "pingpath",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain ID of the HealthCheck policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the HealthCheck policy belongs to",
          "name": "zoneid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Creates a network",
      "isasync": false,
      "name": "createNetwork",
      "params": [
        {
          "description": "IPV4 address to be assigned to a router in a shared network",
          "length": 255,
          "name": "routerip",
          "required": false,
          "since": "4.16",
          "type": "string"
        },
        {
          "description": "the beginning IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "startipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "Defines whether to allow subdomains to use networks dedicated to their parent domain(s). Should be used with aclType=Domain, defaulted to allow.subdomain.network.access global config if not specified",
          "length": 255,
          "name": "subdomainaccess",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "length": 255,
          "name": "tungstenvirtualrouteruuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Network ACL ID associated for the network",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "when true ip address usage for the network will not be exported by the listUsageRecords API",
          "length": 255,
          "name": "hideipaddressusage",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The network this network is associated to. only available if create a Shared network",
          "length": 255,
          "name": "associatednetworkid",
          "related": "createNetwork,createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "since": "4.17.0",
          "type": "uuid"
        },
        {
          "description": "the ID or VID of the network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the zone ID for the network",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the physical network ID the network belongs to",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "MTU to be configured on the network VR's public facing interfaces",
          "length": 255,
          "name": "publicmtu",
          "required": false,
          "since": "4.18.0",
          "type": "integer"
        },
        {
          "description": "the isolated private VLAN type for this network",
          "length": 255,
          "name": "isolatedpvlantype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the VPC network belongs to",
          "length": 255,
          "name": "vpcid",
          "related": "listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the gateway of the IPv6 network. Required for Shared networks",
          "length": 255,
          "name": "ip6gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "length": 255,
          "name": "displaynetwork",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the netmask of the network. Required for shared networks and isolated networks when it belongs to VPC",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "account that will own the network",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "network domain",
          "length": 255,
          "name": "networkdomain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IP address in the network IP range",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "MTU to be configured on the network VR's private interface(s)",
          "length": 255,
          "name": "privatemtu",
          "required": false,
          "since": "4.18.0",
          "type": "integer"
        },
        {
          "description": "the isolated private VLAN for this network",
          "length": 255,
          "name": "isolatedpvlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the network. Required for shared networks and isolated networks when it belongs to VPC",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the network",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "length": 255,
          "name": "dns2",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "listNetworkOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the CIDR of IPv6 network, must be at least /64",
          "length": 255,
          "name": "ip6cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the network in an external system.",
          "length": 255,
          "name": "externalid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Access control type; supported values are account and domain. In 3.0 all shared networks should have aclType=Domain, and all isolated networks - Account. Account means that only the account owner can use the network, domain - all accounts in the domain can use the network",
          "length": 255,
          "name": "acltype",
          "required": false,
          "type": "string"
        },
        {
          "description": "IPV6 address to be assigned to a router in a shared network",
          "length": 255,
          "name": "routeripv6",
          "required": false,
          "since": "4.16",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "length": 255,
          "name": "dns1",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the display text of the network",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the network",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "when true bypasses VLAN id/range overlap check during network creation for shared and L2 networks",
          "length": 255,
          "name": "bypassvlanoverlapcheck",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a network",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ending IP address in the network IP range. If not specified, will be defaulted to startIP",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "endipv6",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
      "response": [
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {},
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {}
      ]
    },
    {
      "description": "Lists all available network offerings.",
      "isasync": false,
      "name": "listNetworkOfferings",
      "params": [
        {
          "description": "list network offerings available for network creation in specific domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "since": "4.13",
          "type": "uuid"
        },
        {
          "description": "list network offerings by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the availability of network offering. Default value is required",
          "length": 255,
          "name": "availability",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network offerings by tags",
          "length": 4096,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network offerings by ID",
          "length": 255,
          "name": "id",
          "related": "listNetworkOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the tags for the network offering.",
          "length": 255,
          "name": "specifyvlan",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by traffic type",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network offerings available for network creation in specific zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network offerings by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the network. Pass this in if you want to see the available network offering that a network can be changed to.",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if need to list only netwok offerings where source NAT is supported, false otherwise",
          "length": 255,
          "name": "sourcenatsupported",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if need to list only network offerings which support specifying ip ranges",
          "length": 255,
          "name": "specifyipranges",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network offering can be used only for network creation inside the VPC",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list network offerings supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "true if offering has tags specified",
          "length": 255,
          "name": "istagged",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list network offerings by guest type: shared or isolated",
          "length": 255,
          "name": "guestiptype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list network offerings by display text",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if need to list only default network offerings. Default value is false",
          "length": 255,
          "name": "isdefault",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "availability of the network offering",
          "name": "availability",
          "type": "string"
        },
        {
          "description": "true if network offering supports persistent networks, false otherwise",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "the internet protocol of the network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the date this network offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "true if network offering can be used by VPC networks only",
          "name": "forvpc",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports vlans, false otherwise",
          "name": "specifyvlan",
          "type": "boolean"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "conservemode",
          "type": "boolean"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering used by virtual router provider",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the id of the network offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "true if network offering can be used by Tungsten-Fabric networks only",
          "name": "fortungsten",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the network offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if network offering supports network that span multiple zones",
          "name": "supportsstrechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports public access for guest networks",
          "name": "supportspublicaccess",
          "type": "boolean"
        },
        {
          "description": "guest type of the network offering, can be Shared or Isolated",
          "name": "guestiptype",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the tags for the network offering",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "state of the network offering. Can be Disabled/Enabled/Inactive",
          "name": "state",
          "type": "string"
        },
        {
          "description": "maximum number of concurrents connections to be handled by lb",
          "name": "maxconnections",
          "type": "integer"
        },
        {
          "description": "additional key/value details tied with network offering",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the network offering",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if network offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "true if network offering supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists dedicated pods.",
      "isasync": false,
      "name": "listDedicatedPods",
      "params": [
        {
          "description": "the ID of the domain associated with the pod",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list dedicated pods by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the pod",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the account associated with the pod. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Dedication Affinity Group ID of the pod",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the Pod",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Account Id to which the Pod is dedicated",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the Name of the Pod",
          "name": "podname",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the domain ID to which the Pod is dedicated",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attempts Migration of a VM with its volumes to a different host",
      "isasync": true,
      "name": "migrateVirtualMachineWithVolume",
      "params": [
        {
          "description": "Storage to pool mapping. This parameter specifies the mapping between a volume and a pool where you want to migrate that volume. Format of this parameter: migrateto[volume-index].volume=<uuid>&migrateto[volume-index].pool=<uuid>Where, [volume-index] indicates the index to identify the volume that you want to migrate, volume=<uuid> indicates the UUID of the volume that you want to migrate, and pool=<uuid> indicates the UUID of the pool where you want to migrate the volume. Example: migrateto[0].volume=<71f43cd6-69b0-4d3b-9fbc-67f50963d60b>&migrateto[0].pool=<a382f181-3d2b-4413-b92d-b8931befa7e1>&migrateto[1].volume=<88de0173-55c0-4c1c-a269-83d0279eeedf>&migrateto[1].pool=<95d6e97c-6766-4d67-9a30-c449c15011d1>&migrateto[2].volume=<1b331390-59f2-4796-9993-bf11c6e76225>&migrateto[2].pool=<41fdb564-9d3b-447d-88ed-7628f7640cbc>",
          "length": 255,
          "name": "migrateto",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateVirtualMachineWithVolume,recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Destination Host ID to migrate VM to.",
          "length": 255,
          "name": "hostid",
          "related": "addHost,cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {},
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {},
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists VPCs",
      "isasync": false,
      "name": "listVPCs",
      "params": [
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject,updateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list VPCs by restartRequired option",
          "length": 255,
          "name": "restartrequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by name of the VPC",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by display text of the VPC",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list by ID of the VPC offering",
          "length": 255,
          "name": "vpcofferingid",
          "related": "updateVPCOffering",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by cidr of the VPC. All VPC guest networks' cidrs should be within this CIDR",
          "length": 255,
          "name": "cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list VPC by id",
          "length": 255,
          "name": "id",
          "related": "listVPCs,createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list VPC supporting certain services",
          "length": 255,
          "name": "supportedservices",
          "required": false,
          "type": "list"
        },
        {
          "description": "list by zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the resource icon for VPCs",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list VPCs by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVPC,listVPCs,updateVPC,migrateVPC",
      "response": [
        {
          "description": "the second IPv4 DNS for the VPC",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "type": "list"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the VPC",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "vpc offering name the VPC is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the VPC",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "MTU configured on the public interfaces of the VPC VR",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the VPC",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "true if VPC is region level",
          "name": "regionlevelvpc",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "is VPC uses distributed router for one hop forwarding and host based network ACL's",
          "name": "distributedvpcrouter",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Adds a network device of one of the following types: ExternalDhcp, ExternalFirewall, ExternalLoadBalancer, PxeServer",
      "isasync": false,
      "name": "addNetworkDevice",
      "params": [
        {
          "description": "Network device type, now supports ExternalDhcp, PxeServer, NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer, F5BigIpLoadBalancer, JuniperSRXFirewall, PaloAltoFirewall",
          "length": 255,
          "name": "networkdevicetype",
          "required": false,
          "type": "string"
        },
        {
          "description": "parameters for network device",
          "length": 255,
          "name": "networkdeviceparameterlist",
          "required": false,
          "type": "map"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the network device",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Execute network-utility command (ping/arping/tracert) on system VMs remotely",
      "isasync": true,
      "name": "runDiagnostics",
      "params": [
        {
          "description": "The system VM diagnostics type  valid options are: ping, traceroute, arping",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "The IP/Domain address to test connection to",
          "length": 255,
          "name": "ipaddress",
          "required": true,
          "type": "string"
        },
        {
          "description": "The ID of the system VM instance to diagnose",
          "length": 255,
          "name": "targetid",
          "related": "migrateSystemVm,startSystemVm",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Additional command line options that apply for each command",
          "length": 255,
          "name": "params",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the standard output from the command execution",
          "name": "stdout",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the standard error output from the command execution",
          "name": "stderr",
          "type": "string"
        },
        {
          "description": "the command execution return code",
          "name": "exitcode",
          "type": "string"
        }
      ],
      "since": "4.12.0.0"
    },
    {
      "description": "Updates a user account",
      "isasync": false,
      "name": "updateUser",
      "params": [
        {
          "description": "Provide true to mandate the user to use two factor authentication has to be enabled.This parameter is only used to mandate 2FA, not to disable 2FA",
          "length": 255,
          "name": "mandate2fa",
          "required": false,
          "since": "4.18.0.0",
          "type": "boolean"
        },
        {
          "description": "The API key for the user. Must be specified with userSecretKey",
          "length": 255,
          "name": "userapikey",
          "required": false,
          "type": "string"
        },
        {
          "description": "first name",
          "length": 255,
          "name": "firstname",
          "required": false,
          "type": "string"
        },
        {
          "description": "User uuid",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser,listUsers,updateUser",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "The secret key for the user. Must be specified with userApiKey",
          "length": 255,
          "name": "usersecretkey",
          "required": false,
          "type": "string"
        },
        {
          "description": "Clear text password (default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter. Can't be passed when command is executed via integration.api.port",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "last name",
          "length": 255,
          "name": "lastname",
          "required": false,
          "type": "string"
        },
        {
          "description": "Current password that was being used by the user. You must inform the current password when updating the password.",
          "length": 255,
          "name": "currentpassword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Unique username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createUser,disableUser,enableUser,getUser,listUsers",
      "response": [
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {},
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        },
        {},
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Restarts a VPC",
      "isasync": true,
      "name": "restartVPC",
      "params": [
        {
          "description": "Turn a single VPC into a redundant one.",
          "length": 255,
          "name": "makeredundant",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Live patches the router software before restarting it. This parameter will only work when 'cleanup' is false.",
          "length": 255,
          "name": "livepatch",
          "required": false,
          "since": "4.17.0",
          "type": "boolean"
        },
        {
          "description": "the id of the VPC",
          "length": 255,
          "name": "id",
          "related": "createVPC,listVPCs,updateVPC,migrateVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "If cleanup old network elements",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Removes a certificate from a load balancer rule",
      "isasync": true,
      "name": "removeCertFromLoadBalancer",
      "params": [
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a new host.",
      "isasync": false,
      "name": "addHost",
      "params": [
        {
          "description": "the cluster ID for the host",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Allocation state of this Host for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the password for the host; required to be passed for hypervisors other than VMWare",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "list of tags to be added to the host",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the username for the host; required to be passed for hypervisors other than VMWare",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "hypervisor type of the host",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Zone ID for the host",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the host URL",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the cluster name for the host",
          "length": 255,
          "name": "clustername",
          "required": false,
          "type": "string"
        }
      ],
      "related": "cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
      "response": [
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {},
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {},
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attaches a disk volume to a virtual machine.",
      "isasync": true,
      "name": "attachVolume",
      "params": [
        {
          "description": "    the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "attachVolume,createVolume,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The ID of the device to map the volume to the guest OS. If no deviceID is informed, the next available deviceID will be chosen. Use 0 when volume needs to be attached as ROOT.<br>When using a linux operating system and the hypervisor XenServer, the devices IDs will be mapped as follows:<ul><li>0 maps to /dev/xvda;</li><li>1 maps to /dev/xvdb;</li><li>2 maps /dev/xvdc and so on.</li></ul>Please refer to the docs of your hypervisor for the correct mapping of the deviceID and the actual logical disk structure.",
          "length": 255,
          "name": "deviceid",
          "required": false,
          "type": "long"
        }
      ],
      "related": "createVolume,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {},
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        }
      ]
    },
    {
      "description": "adds a baremetal dhcp server",
      "isasync": true,
      "name": "addBaremetalDhcp",
      "params": [
        {
          "description": "URL of the external dhcp appliance.",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach external dhcp device",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach external dhcp device",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of dhcp device",
          "length": 255,
          "name": "dhcpservertype",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listBaremetalDhcp",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "name of the provider",
          "name": "dhcpservertype",
          "type": "string"
        },
        {
          "description": "device id of ",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network to which this external dhcp device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "url",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        }
      ]
    },
    {
      "description": "delete Tungsten-Fabric application policy set",
      "isasync": true,
      "name": "deleteTungstenFabricApplicationPolicySet",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Adds Traffic Monitor Host for Direct Network Usage",
      "isasync": false,
      "name": "addTrafficMonitor",
      "params": [
        {
          "description": "Traffic going into the listed zones will be metered",
          "length": 255,
          "name": "includezones",
          "required": false,
          "type": "string"
        },
        {
          "description": "URL of the traffic monitor Host",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Traffic going into the listed zones will not be metered",
          "length": 255,
          "name": "excludezones",
          "required": false,
          "type": "string"
        },
        {
          "description": "Zone in which to add the external firewall appliance.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the zone ID of the external firewall",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the management IP address of the external firewall",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the timeout (in seconds) for requests to the external firewall",
          "name": "timeout",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the number of times to retry requests to the external firewall",
          "name": "numretries",
          "type": "string"
        },
        {
          "description": "the ID of the external firewall",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Updates a project",
      "isasync": true,
      "name": "updateProject",
      "params": [
        {
          "description": "id of the project to be modified",
          "length": 255,
          "name": "id",
          "related": "activateProject,suspendProject,updateProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "new Admin account for the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Account level role to be assigned to the user/account : Admin/Regular",
          "length": 255,
          "name": "roletype",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the user to be promoted/demoted",
          "length": 255,
          "name": "userid",
          "related": "createUser,disableUser,enableUser,getUser,listUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "display text of the project",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "when true, it swaps ownership with the account/ user provided. Ideally to be used when a single project administrator is present. In case of multiple project admins, swapowner is to be set to false,to promote or demote the user/account based on the roleType (Regular or Admin) provided. Defaults to true",
          "length": 255,
          "name": "swapowner",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "activateProject,suspendProject",
      "response": [
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the date this project was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the account name of the project's owners",
          "name": "owner",
          "type": "list"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {},
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the project account name of the project",
          "name": "projectaccountname",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {},
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists internal load balancers",
      "isasync": false,
      "name": "listLoadBalancers",
      "params": [
        {
          "description": "the name of the load balancer",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the network ID of the source IP address",
          "length": 255,
          "name": "sourceipaddressnetworkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "the scheme of the load balancer. Supported value is internal in the current release",
          "length": 255,
          "name": "scheme",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the network ID of the load balancer",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer",
          "length": 255,
          "name": "id",
          "related": "updateIpv6FirewallRule",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the source IP address of the load balancer",
          "length": 255,
          "name": "sourceipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createLoadBalancer",
      "response": [
        {
          "description": "the Load Balancer ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "Load Balancer network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "Load Balancer source ip network id",
          "name": "sourceipaddressnetworkid",
          "type": "string"
        },
        {},
        {
          "description": "the list of instances associated with the Load Balancer",
          "name": "loadbalancerinstance",
          "response": [
            {
              "description": "the ip address of the instance",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the state of the instance",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the instance ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the instance",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the description of the Load Balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the project id of the Load Balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain ID of the Load Balancer",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the Load Balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the Load Balancer",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the domain of the Load Balancer",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "Load Balancer source ip",
          "name": "sourceipaddress",
          "type": "string"
        },
        {
          "description": "the account of the Load Balancer",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of rules associated with the Load Balancer",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "source port of the load balancer rule",
              "name": "sourceport",
              "type": "integer"
            },
            {
              "description": "the state of the load balancer rule",
              "name": "state",
              "type": "string"
            },
            {
              "description": "instance port of the load balancer rule",
              "name": "instanceport",
              "type": "integer"
            }
          ],
          "type": "list"
        },
        {
          "description": "the project name of the Load Balancer",
          "name": "project",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists user accounts",
      "isasync": false,
      "name": "listUsers",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List users by account type. Valid types include admin, domain-admin, read-only-admin, or user.",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List user by the username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the resource icon for users",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List user by ID.",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser,listUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List users by state of the user account.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createUser,disableUser,enableUser,getUser",
      "response": [
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {},
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "This command allows a user to register for the developer API, returning a secret key and an API key. This request is made through the integration API port, so it is a privileged command and must be made on behalf of a user. It is up to the implementer just how the username and password are entered, and then how that translates to an integration API request. Both secret key and API key should be returned to the user",
      "isasync": false,
      "name": "registerUserKeys",
      "params": [
        {
          "description": "User id",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the api key of the registered user",
          "name": "apikey",
          "type": "string"
        },
        {},
        {
          "description": "the secret key of the registered user",
          "name": "secretkey",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a load balancer stickiness policy.",
      "isasync": true,
      "name": "deleteLBStickinessPolicy",
      "params": [
        {
          "description": "the ID of the LB stickiness policy",
          "length": 255,
          "name": "id",
          "related": "createLBStickinessPolicy,listLBStickinessPolicies",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates a VLAN IP range.",
      "isasync": false,
      "name": "updateVlanIpRange",
      "params": [
        {
          "description": "the gateway of the IPv6 network",
          "length": 255,
          "name": "ip6gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the CIDR of IPv6 network, must be at least /64",
          "length": 255,
          "name": "ip6cidr",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ending IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "endipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        },
        {
          "description": "the UUID of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "updateVlanIpRange,dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the beginning IP address in the VLAN IP range",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the beginning IPv6 address in the IPv6 network range",
          "length": 255,
          "name": "startipv6",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if IP range is set to system vms, false if not",
          "length": 255,
          "name": "forsystemvms",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ending IP address in the VLAN IP range",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        }
      ],
      "related": "dedicatePublicIpRange",
      "response": [
        {
          "description": "the cidr of the VLAN IP range",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "indicates whether VLAN IP range is dedicated to system vms or not",
          "name": "forsystemvms",
          "type": "boolean"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.16.0"
    },
    {
      "description": "Lists site to site vpn connection gateways",
      "isasync": false,
      "name": "listVpnConnections",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "id of the vpn connection",
          "length": 255,
          "name": "id",
          "related": "createVpnConnection,listVpnConnections",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "id of vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,migrateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVpnConnection",
      "response": [
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Split multiple remote networks into multiple phase 2 SAs. Often used with Cisco some products.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {},
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists resource limits.",
      "isasync": false,
      "name": "listResourceLimits",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Lists resource limits by ID.",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Type of resource. Values are 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 and 11. 0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses an account can own. 2 - Volume. Number of disk volumes an account can own. 3 - Snapshot. Number of snapshots an account can own. 4 - Template. Number of templates an account can register/create. 5 - Project. Number of projects an account can own. 6 - Network. Number of networks an account can own. 7 - VPC. Number of VPC an account can own. 8 - CPU. Number of CPU an account can allocate for their resources. 9 - Memory. Amount of RAM an account can allocate for their resources. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Type of resource (wins over resourceType if both are provided). Values are: user_vm - Instance. Number of instances a user can create. public_ip - IP. Number of public IP addresses an account can own. volume - Volume. Number of disk volumes an account can own. snapshot - Snapshot. Number of snapshots an account can own. template - Template. Number of templates an account can register/create. project - Project. Number of projects an account can own. network - Network. Number of networks an account can own. vpc - VPC. Number of VPC an account can own. cpu - CPU. Number of CPU an account can allocate for their resources. memory - Memory. Amount of RAM an account can allocate for their resources. primary_storage - PrimaryStorage. Total primary storage space (in GiB) a user can use. secondary_storage - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetypename",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account of the resource limit",
          "name": "account",
          "type": "string"
        },
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain ID of the resource limit",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the resource limit",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the resource limit",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "resource type name. Values include user_vm, public_ip, volume, snapshot, template, project, network, vpc, cpu, memory, primary_storage, secondary_storage.",
          "name": "resourcetypename",
          "type": "string"
        },
        {
          "description": "the domain name of the resource limit",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the maximum number of the resource. A -1 means the resource currently has no limit.",
          "name": "max",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Disables a user account",
      "isasync": true,
      "name": "disableUser",
      "params": [
        {
          "description": "Disables user by user ID.",
          "length": 255,
          "name": "id",
          "related": "createUser,disableUser,enableUser,getUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createUser,enableUser,getUser",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {},
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "remove Tungsten-Fabric policy",
      "isasync": true,
      "name": "removeTungstenFabricPolicy",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric network",
          "length": 255,
          "name": "networkuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listTungstenFabricPolicy,applyTungstenFabricPolicy",
      "response": [
        {},
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available ISO files.",
      "isasync": false,
      "name": "listIsos",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "show removed ISOs as well",
          "length": 255,
          "name": "showremoved",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list all ISOs by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list ISO by ID",
          "length": 255,
          "name": "id",
          "related": "listIsos,registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the ISO is publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the hypervisor for which to restrict the search",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if this ISO is ready to be deployed",
          "length": 255,
          "name": "isready",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the resource image for the isos",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "possible values are \"featured\", \"self\", \"selfexecutable\",\"sharedexecutable\",\"executable\", and \"community\". * featured : templates that have been marked as featured and public. * self : templates that have been registered or created by the calling user. * selfexecutable : same as self, but only returns templates that can be used to deploy a new VM. * sharedexecutable : templates ready to be deployed that have been granted to the calling user by another user. * executable : templates that are owned by the calling user, or public templates, that can be used to deploy a VM. * community : templates that have been marked as public but not featured. * all : all templates (only usable by admins).",
          "length": 255,
          "name": "isofilter",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to true, list only unique isos across zones",
          "length": 255,
          "name": "showunique",
          "required": false,
          "since": "4.13.2",
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
      "response": [
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {},
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        }
      ]
    },
    {
      "description": "Migrate current NFS secondary storages to use object store.",
      "isasync": false,
      "name": "updateCloudToUseObjectStore",
      "params": [
        {
          "description": "the name for the image store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the URL for the image store",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the image store provider name",
          "length": 255,
          "name": "provider",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listSwifts,addImageStoreS3,listImageStores",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.3.0"
    },
    {
      "description": "Lists autoscale policies.",
      "isasync": false,
      "name": "listAutoScalePolicies",
      "params": [
        {
          "description": "the ID of the condition of the policy",
          "length": 255,
          "name": "conditionid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the autoscale policy",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the autoscale policy",
          "length": 255,
          "name": "id",
          "related": "listAutoScalePolicies",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the autoscale vm group",
          "length": 255,
          "name": "vmgroupid",
          "related": "listAutoScaleVmGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the project name of the autoscale policy",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the action to be executed if all the conditions evaluate to true for the specified duration.",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the project id autoscale policy",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the autoscale policy ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account owning the autoscale policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain name of the autoscale policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the cool down period for which the policy should not be evaluated after the action has been taken",
          "name": "quiettime",
          "type": "integer"
        },
        {
          "description": "the duration for which the conditions have to be true before action is taken",
          "name": "duration",
          "type": "integer"
        },
        {},
        {
          "description": "the domain ID of the autoscale policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the autoscale policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of IDs of the conditions that are being evaluated on every interval",
          "name": "conditions",
          "type": "list"
        }
      ]
    },
    {
      "description": "adds baremetal rack configuration text",
      "isasync": true,
      "name": "addBaremetalRct",
      "params": [
        {
          "description": "http url to baremetal RCT configuration",
          "length": 255,
          "name": "baremetalrcturl",
          "required": true,
          "type": "object"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "id of rct",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "url",
          "name": "url",
          "type": "string"
        }
      ]
    },
    {
      "description": "add Tungsten-Fabric network gateway to logical router",
      "isasync": true,
      "name": "addTungstenFabricNetworkGatewayToLogicalRouter",
      "params": [
        {
          "description": "Tungsten-Fabric network uuid",
          "length": 255,
          "name": "networkuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric logical router uuid",
          "length": 255,
          "name": "logicalrouteruuid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "removeTungstenFabricNetworkGatewayFromLogicalRouter",
      "response": [
        {
          "description": "Tungsten-Fabric logical router name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {},
        {
          "description": "Tungsten-Fabric logical router uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates a role",
      "isasync": false,
      "name": "updateRole",
      "params": [
        {
          "description": "The type of the role, valid options are: Admin, ResourceAdmin, DomainAdmin, User",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "creates a role with this unique name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The description of the role",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the role",
          "length": 255,
          "name": "id",
          "related": "importRole,listRoles,updateRole",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The description of the role",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "importRole,listRoles",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if role is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "list Tungsten-Fabric nic",
      "isasync": false,
      "name": "listTungstenFabricNic",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric nic",
          "length": 255,
          "name": "nicuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric nic name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric nic uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Retrieves VMware DC(s) associated with a zone.",
      "isasync": false,
      "name": "listVmwareDcs",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Id of the CloudStack zone.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addVmwareDc",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "The VMware Datacenter ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Zone ID associated with this VMware Datacenter",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "The VMware Datacenter name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "The VMware vCenter name/ip",
          "name": "vcenter",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "apply Tungsten-Fabric policy",
      "isasync": true,
      "name": "applyTungstenFabricPolicy",
      "params": [
        {
          "description": "the uuid of network",
          "length": 255,
          "name": "networkuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the minor sequence of Tungsten-Fabric policy",
          "length": 255,
          "name": "minorsequence",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the major sequence of Tungsten-Fabric policy",
          "length": 255,
          "name": "majorsequence",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "listTungstenFabricPolicy",
      "response": [
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists zones",
      "isasync": false,
      "name": "listZones",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "flag to display the resource image for the zones",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List zones by resource tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "since": "4.3",
          "type": "map"
        },
        {
          "description": "the name of the zone",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the zone",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if you want to retrieve all available Zones. False if you only want to return the Zones from which you have at least one VM. Default is false.",
          "length": 255,
          "name": "available",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the network type of the zone that the virtual machine belongs to",
          "length": 255,
          "name": "networktype",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the capacity of the zones",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "id",
          "related": "createZone,listZones,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createZone,listZones",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "The maximum value the MTU can have on the VR's public interfaces",
          "name": "routerpublicinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "Allow end users to specify VR MTU",
          "name": "allowuserspecifyvrmtu",
          "type": "boolean"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {},
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the type of the zone - core or edge",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "The maximum value the MTU can have on the VR's private interfaces",
          "name": "routerprivateinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists remote access vpns",
      "isasync": false,
      "name": "listRemoteAccessVpns",
      "params": [
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Lists remote access vpn rule with the specified ID",
          "length": 255,
          "name": "id",
          "related": "listRemoteAccessVpns,updateRemoteAccessVpn",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "public ip address id of the vpn server",
          "length": 255,
          "name": "publicipid",
          "related": "updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list remote access VPNs for certain network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": false,
          "since": "4.3",
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "updateRemoteAccessVpn",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "is vpn for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a network ACL",
      "isasync": true,
      "name": "deleteNetworkACLList",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "createNetworkACLList",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Removes secondary IP from the NIC.",
      "isasync": true,
      "name": "removeIpFromNic",
      "params": [
        {
          "description": "the ID of the secondary ip address to nic",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a system virtual-machine that implements network services",
      "isasync": true,
      "name": "createServiceInstance",
      "params": [
        {
          "description": "The right (outside) network ID for the service instance",
          "length": 255,
          "name": "rightnetworkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Availability zone for the service instance",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The template ID that specifies the image for the service appliance",
          "length": 255,
          "name": "templateid",
          "related": "registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The left (inside) network for service instance",
          "length": 255,
          "name": "leftnetworkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listNetscalerLoadBalancerNetworks,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Project ID for the service instance",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The name of the service instance",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "An optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The service offering ID that defines the resources consumed by the service appliance",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "An optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Releases a Public IP range back to the system pool",
      "isasync": false,
      "name": "releasePublicIpRange",
      "params": [
        {
          "description": "the id of the Public IP range",
          "length": 255,
          "name": "id",
          "related": "dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "lists network that are using a netscaler load balancer device",
      "isasync": false,
      "name": "listNetscalerLoadBalancerNetworks",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "netscaler load balancer device ID",
          "length": 255,
          "name": "lbdeviceid",
          "related": "addNetscalerLoadBalancer,listNetscalerLoadBalancers,registerNetscalerControlCenter",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
      "response": [
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {},
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {},
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "create Tungsten-Fabric public network",
      "isasync": false,
      "name": "createTungstenFabricPublicNetwork",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Starts a system virtual machine.",
      "isasync": true,
      "name": "startSystemVm",
      "params": [
        {
          "description": "The ID of the system virtual machine",
          "length": 255,
          "name": "id",
          "related": "migrateSystemVm,startSystemVm",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "migrateSystemVm",
      "response": [
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {},
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {},
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists supported methods of network isolation",
      "isasync": false,
      "name": "listNetworkIsolationMethods",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Network isolation method name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists host HA resources",
      "isasync": false,
      "name": "listHostHAResources",
      "params": [
        {
          "description": "List by host ID",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "configureHAForHost,enableHAForHost,disableHAForHost,listHostHAProviders",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the HA state of the host",
          "name": "hastate",
          "type": "hastate"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "if host HA is enabled for the host",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "operation status",
          "name": "status",
          "type": "boolean"
        },
        {},
        {
          "description": "the host HA provider",
          "name": "haprovider",
          "type": "string"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "Lists VM stats",
      "isasync": false,
      "name": "listVirtualMachinesUsageHistory",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the IDs of the virtual machines, mutually exclusive with id.",
          "length": 255,
          "name": "ids",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "list"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "start date to filter stats.Use format \"yyyy-MM-dd hh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the ID of the virtual machine.",
          "length": 255,
          "name": "id",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "end date to filter stats.Use format \"yyyy-MM-dd hh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the virtual machine (a substring match is made against the parameter value returning the data for all matching VMs).",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listSystemVmsUsageHistory",
      "response": [
        {},
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the list of VM stats",
          "name": "stats",
          "type": "list"
        },
        {}
      ],
      "since": "4.17"
    },
    {
      "description": "list Tungsten-Fabric firewall policy",
      "isasync": false,
      "name": "listTungstenFabricFirewallPolicy",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric firewall policy",
          "length": 255,
          "name": "firewallpolicyuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric firewall policy uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {},
        {
          "description": "list Tungsten-Fabric firewall rule",
          "name": "firewallrule",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric firewall policy name",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Declare host as 'Degraded'. Host must be on 'Disconnected' or 'Alert' state. The ADMIN must be sure that there are no VMs running on the respective host otherwise this command might corrupted VMs that were running on the 'Degraded' host.",
      "isasync": true,
      "name": "declareHostAsDegraded",
      "params": [
        {
          "description": "host ID",
          "length": 255,
          "name": "id",
          "related": "cancelHostAsDegraded,declareHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
      "response": [
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            },
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {},
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {},
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        }
      ],
      "since": "4.16.0.0"
    },
    {
      "description": "Creates a Kubernetes cluster",
      "isasync": true,
      "name": "createKubernetesCluster",
      "params": [
        {
          "description": "Network in which Kubernetes cluster is to be launched",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "password for the docker image private registry",
          "length": 255,
          "name": "dockerregistrypassword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Deploy cluster for the project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the ssh key pair used to login to the virtual machines",
          "length": 255,
          "name": "keypair",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the virtual machines in the cluster.",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "URL for the docker image private registry",
          "length": 255,
          "name": "dockerregistryurl",
          "required": false,
          "type": "string"
        },
        {
          "description": "number of Kubernetes cluster control nodes, default is 1",
          "length": 255,
          "name": "controlnodes",
          "required": false,
          "type": "long"
        },
        {
          "description": "description for the Kubernetes cluster",
          "length": 255,
          "name": "description",
          "required": true,
          "type": "string"
        },
        {
          "description": "number of Kubernetes cluster worker nodes",
          "length": 255,
          "name": "size",
          "required": true,
          "type": "long"
        },
        {
          "description": "root disk size in GB for each node",
          "length": 255,
          "name": "noderootdisksize",
          "required": false,
          "type": "long"
        },
        {
          "description": "Kubernetes version with which cluster to be launched",
          "length": 255,
          "name": "kubernetesversionid",
          "related": "listKubernetesSupportedVersions",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "number of Kubernetes cluster master nodes, default is 1. This option is deprecated, please use 'controlnodes' parameter.",
          "length": 255,
          "name": "masternodes",
          "required": false,
          "type": "long"
        },
        {
          "description": "user name for the docker image private registry",
          "length": 255,
          "name": "dockerregistryusername",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the virtual machine. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name for the Kubernetes cluster",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "availability zone in which Kubernetes cluster to be launched",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "external load balancer IP address while using shared network with Kubernetes HA cluster",
          "length": 255,
          "name": "externalloadbalanceripaddress",
          "required": false,
          "type": "string"
        }
      ],
      "related": "startKubernetesCluster",
      "response": [
        {
          "description": "the name of the domain in which the Kubernetes cluster exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the Kubernetes cluster",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the network of the Kubernetes cluster",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster dashboard UI",
          "name": "consoleendpoint",
          "type": "string"
        },
        {},
        {
          "description": "the master nodes count for the Kubernetes cluster. This parameter is deprecated, please use 'controlnodes' parameter.",
          "name": "masternodes",
          "type": "long"
        },
        {
          "description": "Public IP Address ID of the cluster",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the Kubernetes cluster exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the control nodes count for the Kubernetes cluster",
          "name": "controlnodes",
          "type": "long"
        },
        {
          "description": "the cpu cores of the Kubernetes cluster",
          "name": "cpunumber",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the Kubernetes cluster",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the name of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionname",
          "type": "string"
        },
        {
          "description": "the name of the network of the Kubernetes cluster",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the memory the Kubernetes cluster",
          "name": "memory",
          "type": "string"
        },
        {
          "description": "Maximum size of the cluster",
          "name": "maxsize",
          "type": "long"
        },
        {
          "description": "Public IP Address of the cluster",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the account associated with the Kubernetes cluster",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Whether autoscaling is enabled for the cluster",
          "name": "autoscalingenabled",
          "type": "boolean"
        },
        {
          "description": "the list of virtualmachine associated with this Kubernetes cluster",
          "name": "virtualmachines",
          "type": "list"
        },
        {
          "description": "the date when this Kubernetes cluster was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the Kubernetes cluster",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the Kubernetes cluster",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionid",
          "type": "string"
        },
        {
          "description": "the id of the Kubernetes cluster",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the Kubernetes cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes cluster",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the template of the Kubernetes cluster",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the size (worker nodes count) of the Kubernetes cluster",
          "name": "size",
          "type": "long"
        },
        {
          "description": "Minimum size of the cluster",
          "name": "minsize",
          "type": "long"
        },
        {
          "description": "the description of the Kubernetes cluster",
          "name": "description",
          "type": "string"
        },
        {
          "description": "keypair details",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster",
          "name": "endpoint",
          "type": "string"
        }
      ]
    },
    {
      "description": "List a storage network IP range.",
      "isasync": false,
      "name": "listStorageNetworkIpRange",
      "params": [
        {
          "description": "optional parameter. Pod uuid, if specicied and range uuid is absent, using it to search the range.",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "optional parameter. Storaget network IP range uuid, if specicied, using it to search the range.",
          "length": 255,
          "name": "id",
          "related": "createStorageNetworkIpRange,listStorageNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "optional parameter. Zone uuid, if specicied and both pod uuid and range uuid are absent, using it to search the range.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createStorageNetworkIpRange",
      "response": [
        {
          "description": "the Pod uuid for the storage network IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the network uuid of storage network IP range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "integer"
        },
        {
          "description": "the gateway of the storage network IP range",
          "name": "gateway",
          "type": "string"
        },
        {},
        {
          "description": "the Zone uuid of the storage network IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the netmask of the storage network IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the end ip of the storage network IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the start ip of the storage network IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the uuid of storage network IP range.",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Deletes a specified domain",
      "isasync": true,
      "name": "deleteDomain",
      "params": [
        {
          "description": "true if all domain resources (child domains, accounts) have to be cleaned up, false otherwise",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "ID of domain to delete",
          "length": 255,
          "name": "id",
          "related": "listDomainChildren,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Configures a virtual router element.",
      "isasync": true,
      "name": "configureVirtualRouterElement",
      "params": [
        {
          "description": "the ID of the virtual router provider",
          "length": 255,
          "name": "id",
          "related": "configureVirtualRouterElement,listVirtualRouterElements",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "length": 255,
          "name": "enabled",
          "required": true,
          "type": "boolean"
        }
      ],
      "related": "listVirtualRouterElements",
      "response": [
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {},
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Enables HA for a host",
      "isasync": true,
      "name": "enableHAForHost",
      "params": [
        {
          "description": "ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "configureHAForHost,disableHAForHost,listHostHAProviders",
      "response": [
        {
          "description": "operation status",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "if host HA is enabled for the host",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the host HA provider",
          "name": "haprovider",
          "type": "string"
        },
        {
          "description": "the HA state of the host",
          "name": "hastate",
          "type": "hastate"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "Migrate volume",
      "isasync": true,
      "name": "migrateVolume",
      "params": [
        {
          "description": "destination storage pool ID to migrate the volume to",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "volumeid",
          "related": "createVolume,migrateVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "if the volume should be live migrated when it is attached to a running vm",
          "length": 255,
          "name": "livemigrate",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The new disk offering ID that replaces the current one used by the volume. This new disk offering is used to better reflect the new storage where the volume is going to be migrated to.",
          "length": 255,
          "name": "newdiskofferingid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {},
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {},
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "create Tungsten-Fabric application policy set",
      "isasync": true,
      "name": "createTungstenFabricApplicationPolicySet",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric application policy set name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric application policy uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric firewall policy",
          "name": "firewallpolicy",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "list Tungsten-Fabric tag",
          "name": "tag",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        }
      ]
    },
    {
      "description": "A command to list events.",
      "isasync": false,
      "name": "listEvents",
      "params": [
        {
          "description": "the ID of the resource associated with the event",
          "length": 255,
          "name": "resourceid",
          "required": false,
          "since": "4.17.0",
          "type": "string"
        },
        {
          "description": "the time the event was entered",
          "length": 255,
          "name": "entrytime",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the event type (see event types)",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the event",
          "length": 255,
          "name": "id",
          "related": "listEvents",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the parent/start ID of the event, when provided this will list all the events with the start/parent ID including the parent event",
          "length": 255,
          "name": "startid",
          "related": "listEvents",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the start date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the end date range of the list you want to retrieve (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the event level (INFO, WARN, ERROR)",
          "length": 255,
          "name": "level",
          "required": false,
          "type": "string"
        },
        {
          "description": "the type of the resource associated with the event",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "since": "4.17.0",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the duration of the event",
          "length": 255,
          "name": "duration",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the resource",
          "name": "resourcename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the user who performed the action (can be different from the account if an admin is performing an action for a user, e.g. starting/stopping a user's virtual machine)",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the date the event was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the id of the resource",
          "name": "resourceid",
          "type": "string"
        },
        {
          "description": "the event level (INFO, WARN, ERROR)",
          "name": "level",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the event",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the type of the resource",
          "name": "resourcetype",
          "type": "string"
        },
        {
          "description": "the name of the account's domain",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "whether the event is parented",
          "name": "parentid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the id of the account's domain",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "a brief description of the event",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the type of the event (see event types)",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the event",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the account name for the account that owns the object being acted on in the event (e.g. the owner of the virtual machine, ip address, or security group)",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates the affinity/anti-affinity group associations of a virtual machine. The VM has to be stopped and restarted for the new properties to take effect.",
      "isasync": true,
      "name": "updateVMAffinityGroup",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVMAffinityGroup,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "comma separated list of affinity groups names that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupids parameter",
          "length": 255,
          "name": "affinitygroupnames",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "comma separated list of affinity groups id that are going to be applied to the virtual machine. Should be passed only when vm is created from a zone with Basic Network support. Mutually exclusive with securitygroupnames parameter",
          "length": 255,
          "name": "affinitygroupids",
          "related": "",
          "required": false,
          "type": "list"
        }
      ],
      "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {},
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {},
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists HA providers",
      "isasync": false,
      "name": "listHostHAProviders",
      "params": [
        {
          "description": "Hypervisor type of the resource",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        }
      ],
      "related": "configureHAForHost,disableHAForHost",
      "response": [
        {
          "description": "if host HA is enabled for the host",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "the host HA provider",
          "name": "haprovider",
          "type": "string"
        },
        {},
        {
          "description": "the HA state of the host",
          "name": "hastate",
          "type": "hastate"
        },
        {
          "description": "operation status",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "Registers NCC Service Package",
      "isasync": false,
      "name": "registerNetscalerServicePackage",
      "params": [
        {
          "description": "Description of Service Package",
          "length": 255,
          "name": "description",
          "required": true,
          "type": "string"
        },
        {
          "description": "Name of the service Package.",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listRegisteredServicePackages",
      "response": [
        {
          "description": "Description of Service Package",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "Service Package Name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Service Package UUID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates resource tag(s)",
      "isasync": true,
      "name": "createTags",
      "params": [
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "list of resources to create the tags for",
          "length": 255,
          "name": "resourceids",
          "required": true,
          "type": "list"
        },
        {
          "description": "Map of tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": true,
          "type": "map"
        },
        {
          "description": "identifies client specific tag. When the value is not null, the tag can't be used by cloudStack code internally",
          "length": 255,
          "name": "customer",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {}
      ],
      "since": "4.0.0"
    },
    {
      "description": "Create an Internal Load Balancer element.",
      "isasync": true,
      "name": "createInternalLoadBalancerElement",
      "params": [
        {
          "description": "the network service provider ID of the internal load balancer element",
          "length": 255,
          "name": "nspid",
          "related": "listNetworkServiceProviders",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "configureInternalLoadBalancerElement",
      "response": [
        {
          "description": "the id of the internal load balancer element",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the physical network service provider id of the element",
          "name": "nspid",
          "type": "string"
        },
        {},
        {
          "description": "Enabled/Disabled the element",
          "name": "enabled",
          "type": "boolean"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists the CA public certificate(s) as support by the configured/provided CA plugin",
      "isasync": false,
      "name": "listCaCertificate",
      "params": [
        {
          "description": "Name of the CA service provider, otherwise the default configured provider plugin will be used",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Private key for the certificate",
          "name": "privatekey",
          "type": "string"
        },
        {},
        {
          "description": "The client certificate",
          "name": "certificate",
          "type": "string"
        },
        {
          "description": "The CA certificate(s)",
          "name": "cacertificates",
          "type": "string"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "Reset api count",
      "isasync": false,
      "name": "resetApiLimit",
      "params": [
        {
          "description": "the ID of the acount whose limit to be reset",
          "length": 255,
          "name": "account",
          "related": "enableAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a VLAN IP range.",
      "isasync": false,
      "name": "deleteVlanIpRange",
      "params": [
        {
          "description": "the id of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Provisions a host with a direct download certificate",
      "isasync": false,
      "name": "provisionTemplateDirectDownloadCertificate",
      "params": [
        {
          "description": "the id of the direct download certificate to provision",
          "length": 255,
          "name": "id",
          "related": "uploadTemplateDirectDownloadCertificate",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the host to provision the certificate",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "indicates if the certificate has been revoked from the host, failed or skipped",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "indicates the details in case of failure or host skipped",
          "name": "details",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "hostname",
          "type": "string"
        },
        {}
      ],
      "since": "4.17.0"
    },
    {
      "description": "Generates an alert",
      "isasync": true,
      "name": "generateAlert",
      "params": [
        {
          "description": "Pod id for which alert is generated",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Alert description",
          "length": 999,
          "name": "description",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of the alert",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "short"
        },
        {
          "description": "Zone id for which alert is generated",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name of the alert",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.3"
    },
    {
      "description": "Creates a Project role",
      "isasync": false,
      "name": "updateProjectRole",
      "params": [
        {
          "description": "creates a project role with this unique name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The description of the Project role",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of project where role is being created",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the Project role",
          "length": 255,
          "name": "id",
          "related": "updateProjectRole",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the id of the project",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Add a new Ldap Configuration",
      "isasync": false,
      "name": "addLdapConfiguration",
      "params": [
        {
          "description": "linked domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Port",
          "length": 255,
          "name": "port",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Hostname",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "linked domain",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "name of the host running the ldap server",
          "name": "hostname",
          "type": "string"
        },
        {},
        {
          "description": "port teh ldap server is running on",
          "name": "port",
          "type": "int"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "(Deprecated, use addLdapConfiguration) Configure the LDAP context for this site.",
      "isasync": false,
      "name": "ldapConfig",
      "params": [
        {
          "description": "Enter the password.",
          "length": 255,
          "name": "bindpass",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specify the LDAP port if required, default is 389.",
          "length": 255,
          "name": "port",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Check Use SSL if the external LDAP server is configured for LDAP over SSL.",
          "length": 255,
          "name": "ssl",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Specify the distinguished name of a user with the search permission on the directory.",
          "length": 255,
          "name": "binddn",
          "required": false,
          "type": "string"
        },
        {
          "description": "If true return current LDAP configuration",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The search base defines the starting point for the search in the directory tree Example:  dc=cloud,dc=com.",
          "length": 255,
          "name": "searchbase",
          "required": false,
          "type": "string"
        },
        {
          "description": "You specify a query filter here, which narrows down the users, who can be part of this domain.",
          "length": 255,
          "name": "queryfilter",
          "required": false,
          "type": "string"
        },
        {
          "description": "Enter the password for trust store.",
          "length": 255,
          "name": "truststorepass",
          "required": false,
          "type": "string"
        },
        {
          "description": "Hostname or ip address of the ldap server eg: my.ldap.com",
          "length": 255,
          "name": "hostname",
          "required": false,
          "type": "string"
        },
        {
          "description": "Enter the path to trust certificates store.",
          "length": 255,
          "name": "truststore",
          "required": false,
          "type": "string"
        }
      ],
      "related": "ldapRemove",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "DN password",
          "name": "bindpass",
          "type": "string"
        },
        {},
        {
          "description": "Specify the distinguished name of a user with the search permission on the directory",
          "name": "binddn",
          "type": "string"
        },
        {
          "description": "The search base defines the starting point for the search in the directory tree Example:  dc=cloud,dc=com",
          "name": "searchbase",
          "type": "string"
        },
        {
          "description": "Check Use SSL if the external LDAP server is configured for LDAP over SSL",
          "name": "ssl",
          "type": "string"
        },
        {},
        {
          "description": "Hostname or ip address of the ldap server eg: my.ldap.com",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "You specify a query filter here, which narrows down the users, who can be part of this domain",
          "name": "queryfilter",
          "type": "string"
        },
        {
          "description": "Specify the LDAP port if required, default is 389",
          "name": "port",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "List vSphere storage policies",
      "isasync": false,
      "name": "listVsphereStoragePolicies",
      "params": [
        {
          "description": "ID of the zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the Storage Policy",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the description of the Storage Policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the Storage Policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the Zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the identifier of the Storage Policy in vSphere DataCenter",
          "name": "policyid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Deletes a port forwarding rule",
      "isasync": true,
      "name": "deletePortForwardingRule",
      "params": [
        {
          "description": "the ID of the port forwarding rule",
          "length": 255,
          "name": "id",
          "related": "updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "moves a vpc to another physical network",
      "isasync": true,
      "name": "migrateVPC",
      "params": [
        {
          "description": "vpc offering ID",
          "length": 255,
          "name": "vpcofferingid",
          "related": "updateVPCOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC,migrateVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if previous network migration cmd failed",
          "length": 255,
          "name": "resume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "network offering ids for each network in the vpc. Example: tierNetworkOfferings[0].networkId=networkId1&tierNetworkOfferings[0].networkOfferingId=newNetworkofferingId1&tierNetworkOfferings[1].networkId=networkId2&tierNetworkOfferings[1].networkOfferingId=newNetworkofferingId2",
          "length": 255,
          "name": "tiernetworkofferings",
          "required": false,
          "type": "map"
        }
      ],
      "related": "createVPC,listVPCs,updateVPC",
      "response": [
        {
          "description": "the second IPv6 DNS for the VPC",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "zone id of the vpc",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "is VPC uses distributed router for one hop forwarding and host based network ACL's",
          "name": "distributedvpcrouter",
          "type": "boolean"
        },
        {
          "description": "the project name of the VPC",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "an alternate display text of the VPC.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the VPC",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "state of the VPC. Can be Inactive/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "if this VPC has redundant router",
          "name": "redundantvpcrouter",
          "type": "boolean"
        },
        {
          "description": "vpc offering name the VPC is created from",
          "name": "vpcofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the project",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the VPC",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the owner of the VPC",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the name of the zone the VPC belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the network domain of the VPC",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "vpc offering id the VPC is created from",
          "name": "vpcofferingid",
          "type": "string"
        },
        {
          "description": "MTU configured on the public interfaces of the VPC VR",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the date this VPC was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of networks belongign to the VPC",
          "name": "network",
          "type": "list"
        },
        {
          "description": "true VPC requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the project id of the VPC",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the VPC",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the VPC",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if VPC is region level",
          "name": "regionlevelvpc",
          "type": "boolean"
        },
        {
          "description": "is vpc for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the second IPv4 DNS for the VPC",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the cidr the VPC",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the domain id of the VPC owner",
          "name": "domainid",
          "type": "string"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "Deletes a global load balancer rule.",
      "isasync": true,
      "name": "deleteGlobalLoadBalancerRule",
      "params": [
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "update an annotation visibility.",
      "isasync": false,
      "name": "updateAnnotationVisibility",
      "params": [
        {
          "description": "the annotation is visible for admins only",
          "length": 255,
          "name": "adminsonly",
          "required": true,
          "type": "boolean"
        },
        {
          "description": "the id of the annotation",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "related": "removeAnnotation",
      "response": [
        {
          "description": "the creation timestamp for this annotation",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the (uu)id of the annotation",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the type of the annotated entity",
          "name": "entitytype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the entity to which this annotation pertains",
          "name": "entityname",
          "type": "string"
        },
        {
          "description": "The (uu)id of the user that entered the annotation",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the contents of the annotation",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the (uu)id of the entity to which this annotation pertains",
          "name": "entityid",
          "type": "string"
        },
        {
          "description": "the removal timestamp for this annotation",
          "name": "removed",
          "type": "date"
        },
        {},
        {
          "description": "True if the annotation is available for admins only",
          "name": "adminsonly",
          "type": "boolean"
        },
        {
          "description": "The username of the user that entered the annotation",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.16"
    },
    {
      "description": "create Tungsten-Fabric address group",
      "isasync": true,
      "name": "createTungstenFabricAddressGroup",
      "params": [
        {
          "description": "Tungsten-Fabric ip prefix length",
          "length": 255,
          "name": "ipprefixlen",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric address group name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric ip prefix",
          "length": 255,
          "name": "ipprefix",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric address group name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric address group ip prefix length",
          "name": "ipprefixlen",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric address group ip prefix",
          "name": "ipprefix",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric address group uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists BigSwitch BCF Controller devices",
      "isasync": false,
      "name": "listBigSwitchBcfDevices",
      "params": [
        {
          "description": "bigswitch BCF controller device ID",
          "length": 255,
          "name": "bcfdeviceid",
          "related": "listBigSwitchBcfDevices",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "device name",
          "name": "bigswitchdevicename",
          "type": "string"
        },
        {
          "description": "the controller username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "NAT support",
          "name": "nat",
          "type": "boolean"
        },
        {
          "description": "the physical network to which this BigSwitch BCF segment belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "device id of the BigSwitch BCF Controller",
          "name": "bcfdeviceid",
          "type": "string"
        },
        {
          "description": "the controller password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the controller Ip address",
          "name": "hostname",
          "type": "string"
        }
      ],
      "since": "4.6.0"
    },
    {
      "description": "Updates a configuration.",
      "isasync": false,
      "name": "updateConfiguration",
      "params": [
        {
          "description": "the value of the configuration",
          "length": 4096,
          "name": "value",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Cluster to update the parameter value for corresponding cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Domain to update the parameter value for corresponding domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Account to update the parameter value for corresponding account",
          "length": 255,
          "name": "accountid",
          "related": "enableAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Storage pool to update the parameter value for corresponding storage pool",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the Zone to update the parameter value for corresponding zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the configuration",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the Image Store to update the parameter value for corresponding image store",
          "length": 255,
          "name": "imagestoreuuid",
          "related": "listSwifts,addImageStoreS3,listImageStores",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the type of the configuration value",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if the configuration is dynamic",
          "name": "isdynamic",
          "type": "boolean"
        },
        {},
        {
          "description": "the category of the configuration",
          "name": "category",
          "type": "string"
        },
        {
          "description": "the subgroup of the configuration",
          "name": "subgroup",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the possible options of the configuration value",
          "name": "options",
          "type": "string"
        },
        {
          "description": "scope(zone/cluster/pool/account) of the parameter that needs to be updated",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the description of the configuration",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the value of the configuration",
          "name": "id",
          "type": "long"
        },
        {
          "description": "the value of the configuration",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the name of the configuration",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the name of the parent configuration",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "the component of the configuration",
          "name": "component",
          "type": "string"
        },
        {
          "description": "the group of the configuration",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the default value of the configuration",
          "name": "defaultvalue",
          "type": "string"
        },
        {
          "description": "the display text of the configuration",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Configures HA for a host",
      "isasync": true,
      "name": "configureHAForHost",
      "params": [
        {
          "description": "HA provider",
          "length": 255,
          "name": "provider",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "disableHAForHost",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the host HA provider",
          "name": "haprovider",
          "type": "string"
        },
        {
          "description": "operation status",
          "name": "status",
          "type": "boolean"
        },
        {},
        {
          "description": "if host HA is enabled for the host",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the HA state of the host",
          "name": "hastate",
          "type": "hastate"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {}
      ],
      "since": "4.11"
    },
    {
      "description": "Lists volume stats",
      "isasync": false,
      "name": "listVolumesUsageHistory",
      "params": [
        {
          "description": "end date to filter stats.Use format \"yyyy-MM-dd hh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "start date to filter stats.Use format \"yyyy-MM-dd hh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "name of the volume (a substring match is made against the parameter value returning the data for all matching Volumes).",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the volumes, mutually exclusive with id.",
          "length": 255,
          "name": "ids",
          "related": "migrateSystemVm",
          "required": false,
          "type": "list"
        },
        {
          "description": "the ID of the volume.",
          "length": 255,
          "name": "id",
          "related": "createVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the name of the volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of VM stats",
          "name": "stats",
          "type": "list"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Dedicates a Public IP range to an account",
      "isasync": false,
      "name": "dedicatePublicIpRange",
      "params": [
        {
          "description": "domain ID of the account owning a VLAN",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "project who will own the VLAN",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the id of the VLAN IP range",
          "length": 255,
          "name": "id",
          "related": "dedicatePublicIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "account who will own the VLAN",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "indicates whether VLAN IP range is dedicated to system vms or not",
          "name": "forsystemvms",
          "type": "boolean"
        },
        {
          "description": "the Pod ID for the VLAN IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the domain name of the VLAN IP range",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the netmask of the VLAN IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the domain ID of the VLAN IP range",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the Pod name for the VLAN IP range",
          "name": "podname",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the vlan range",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the start ip of the VLAN IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the start ipv6 of the VLAN IP range",
          "name": "startipv6",
          "type": "string"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the cidr of the VLAN IP range",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the account of the VLAN IP range",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the virtual network for the VLAN IP range",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the description of the VLAN IP range",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the end ip of the VLAN IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the end ipv6 of the VLAN IP range",
          "name": "endipv6",
          "type": "string"
        },
        {
          "description": "the Zone ID of the VLAN IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the gateway of the VLAN IP range",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN IP range",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the network id of vlan range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the project id of the vlan range",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds API permissions to a project role",
      "isasync": false,
      "name": "createProjectRolePermission",
      "params": [
        {
          "description": "The rule permission, allow or deny. Default: deny.",
          "length": 255,
          "name": "permission",
          "required": true,
          "type": "string"
        },
        {
          "description": "The description of the role permission",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of project where project role permission is to be created",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The API name or wildcard rule such as list*",
          "length": 255,
          "name": "rule",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the project role",
          "length": 255,
          "name": "projectroleid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the permission type of the api name or wildcard rule, allow/deny",
          "name": "permission",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the project role permission",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID of the project",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the project role to which the role permission belongs",
          "name": "projectrolename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the api name or wildcard rule",
          "name": "rule",
          "type": "string"
        },
        {
          "description": "the description of the role permission",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the project role to which the role permission belongs",
          "name": "projectroleid",
          "type": "string"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "lists registered service packages",
      "isasync": false,
      "name": "listRegisteredServicePackages",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Description of Service Package",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Service Package Name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Service Package UUID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Create a console endpoint to connect to a VM console",
      "isasync": false,
      "name": "createConsoleEndpoint",
      "params": [
        {
          "description": "(optional) extra security token, valid when the extra validation is enabled",
          "length": 255,
          "name": "token",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the VM",
          "length": 255,
          "name": "virtualmachineid",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {
          "description": "the console url",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the console endpoint is generated properly",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "details in case of an error",
          "name": "details",
          "type": "string"
        },
        {
          "description": "the console websocket options",
          "name": "websocket",
          "type": "consoleendpointwebsocketresponse"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Updates a project role permission and/or order",
      "isasync": false,
      "name": "updateProjectRolePermission",
      "params": [
        {
          "description": "The parent role permission uuid, use 0 to move this rule at the top of the list",
          "length": 255,
          "name": "ruleorder",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "Project Role permission rule id",
          "length": 255,
          "name": "projectrolepermissionid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Rule permission, can be: allow or deny",
          "length": 255,
          "name": "permission",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the project role",
          "length": 255,
          "name": "projectroleid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of project where project role permission is to be updated",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Enables static NAT for given IP address",
      "isasync": false,
      "name": "enableStaticNat",
      "params": [
        {
          "description": "the public IP address ID for which static NAT feature is being enabled",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "VM guest NIC secondary IP address for the port forwarding rule",
          "length": 255,
          "name": "vmguestip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine for enabling static NAT feature",
          "length": 255,
          "name": "virtualmachineid",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The network of the VM the static NAT will be enabled for. Required when public IP address is not associated with any guest network yet (VPC case)",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Deletes a Zone.",
      "isasync": false,
      "name": "deleteZone",
      "params": [
        {
          "description": "the ID of the Zone",
          "length": 255,
          "name": "id",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds user to a project",
      "isasync": true,
      "name": "addUserToProject",
      "params": [
        {
          "description": "Name of the user to be added to the project",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "email ID of user to which invitation to the project is going to be sent",
          "length": 255,
          "name": "email",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the project to add the user to",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the project role",
          "length": 255,
          "name": "projectroleid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Project role type to be assigned to the user - Admin/Regular",
          "length": 255,
          "name": "roletype",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.14"
    },
    {
      "description": "Disables HA cluster-wide",
      "isasync": true,
      "name": "disableHAForCluster",
      "params": [
        {
          "description": "ID of the cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "delete Tungsten-Fabric firewall policy",
      "isasync": true,
      "name": "deleteTungstenFabricFirewallPolicy",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric firewall policy",
          "length": 255,
          "name": "firewallpolicyuuid",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Recovers a virtual machine.",
      "isasync": false,
      "name": "recoverVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "recoverVirtualMachine,attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
      "response": [
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {},
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        }
      ]
    },
    {
      "description": "upload an existing template into the CloudStack cloud. ",
      "isasync": false,
      "name": "getUploadParamsForTemplate",
      "params": [
        {
          "description": "the ID of the zone the volume/template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if the template or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Template details in key/value pairs.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the volume/template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the format for the volume/template. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "the checksum value of this volume/template The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "Upload volume/template for the project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template is available to all accounts; default is true",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if this template requires HVM",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "32 or 64 bits support. 64 by default",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template. Not required for VMware as the guest OS is obtained from the OVF file.",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "(VMware only) true if VM deployments should preserve all the configurations defined for this template",
          "length": 255,
          "name": "deployasis",
          "required": false,
          "since": "4.15.1",
          "type": "boolean"
        }
      ],
      "related": "getUploadParamsForIso",
      "response": [
        {
          "description": "signature to be sent in the POST request.",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "POST url to upload the file to",
          "name": "postURL",
          "type": "url"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the timestamp after which the signature expires",
          "name": "expires",
          "type": "string"
        },
        {},
        {
          "description": "the template/volume ID",
          "name": "id",
          "type": "uuid"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "encrypted data to be sent in the POST request.",
          "name": "metadata",
          "type": "string"
        },
        {}
      ],
      "since": "4.6.0"
    },
    {
      "description": "Resets network permissions.",
      "isasync": false,
      "name": "resetNetworkPermissions",
      "params": [
        {
          "description": "the network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "update Tungsten-Fabric loadbalancer health monitor",
      "isasync": true,
      "name": "updateTungstenFabricLBHealthMonitor",
      "params": [
        {
          "description": "loadbalancer health monitor url path",
          "length": 255,
          "name": "urlpath",
          "required": false,
          "type": "string"
        },
        {
          "description": "loadbalancer health monitor http method",
          "length": 255,
          "name": "httpmethodtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "loadbalancer health monitor timeout",
          "length": 255,
          "name": "timeout",
          "required": true,
          "type": "integer"
        },
        {
          "description": "loadbalancer health monitor expected code",
          "length": 255,
          "name": "expectedcode",
          "required": false,
          "type": "string"
        },
        {
          "description": "loadbalancer health monitor type",
          "length": 255,
          "name": "type",
          "required": true,
          "type": "string"
        },
        {
          "description": "loadbalancer health monitor retry",
          "length": 255,
          "name": "retry",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the ID of lb rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "loadbalancer health monitor interval",
          "length": 255,
          "name": "interval",
          "required": true,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the health monitor http method",
          "name": "httpmethod",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the health monitor type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the health monitor timeout",
          "name": "timeout",
          "type": "int"
        },
        {},
        {
          "description": "the health monitor expected code",
          "name": "expectedcode",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the health monitor ID",
          "name": "id",
          "type": "long"
        },
        {
          "description": "the health monitor url path",
          "name": "urlpath",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the health monitor retry",
          "name": "retry",
          "type": "int"
        },
        {},
        {
          "description": "the health monitor interval",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the health monitor UUID",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Release the dedication for host",
      "isasync": true,
      "name": "releaseDedicatedHost",
      "params": [
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Accepts or declines project invitation",
      "isasync": true,
      "name": "updateProjectInvitation",
      "params": [
        {
          "description": "if true, accept the invitation, decline if false. True by default",
          "length": 255,
          "name": "accept",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "related": "createUser,enableUser,getUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "account that is joining the project",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list invitations for specified account; this parameter has to be specified with domainId",
          "length": 255,
          "name": "token",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the project to join",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "This is supposed to revert a volume snapshot. This command is only supported with KVM so far",
      "isasync": true,
      "name": "revertSnapshot",
      "params": [
        {
          "description": "The ID of the snapshot",
          "length": 255,
          "name": "id",
          "related": "revertSnapshot",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "id of the os on volume",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the state of the snapshot. BackedUp means that snapshot is ready to be used; Creating - the snapshot is being allocated on the primary storage; BackingUp - the snapshot is being backed up on secondary storage",
          "name": "state",
          "type": "state"
        },
        {
          "description": "display name of the os on volume",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "type of the disk volume",
          "name": "volumetype",
          "type": "string"
        },
        {
          "description": "ID of the snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "valid location types are primary and secondary.",
          "name": "locationtype",
          "type": "string"
        },
        {
          "description": "the project name of the snapshot",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "id of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the account associated with the snapshot",
          "name": "account",
          "type": "string"
        },
        {
          "description": "valid types are hourly, daily, weekly, monthy, template, and none.",
          "name": "intervaltype",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "name of the snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the type of the snapshot",
          "name": "snapshottype",
          "type": "string"
        },
        {
          "description": "  the date the snapshot was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the domain name of the snapshot's account",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the snapshot's account",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the snapshot",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "indicates whether the underlying storage supports reverting the volume to this snapshot",
          "name": "revertable",
          "type": "boolean"
        },
        {},
        {
          "description": "name of the disk volume",
          "name": "volumename",
          "type": "string"
        },
        {
          "description": "virtual size of backedup snapshot on image store",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "physical size of backedup snapshot on image store",
          "name": "physicalsize",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates a condition for VM auto scaling",
      "isasync": true,
      "name": "updateCondition",
      "params": [
        {
          "description": "the ID of the condition.",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Value for which the Counter will be evaluated with the Operator selected.",
          "length": 255,
          "name": "threshold",
          "required": true,
          "type": "long"
        },
        {
          "description": "Relational Operator to be used with threshold. Valid values are EQ, GT, LT, GE, LE.",
          "length": 255,
          "name": "relationaloperator",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "4.18.0"
    },
    {
      "description": "Lists Regions",
      "isasync": false,
      "name": "listRegions",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "List Region by region ID.",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List Region by region name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addRegion",
      "response": [
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        },
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "true if GSLB service is enabled in the region, false otherwise",
          "name": "gslbserviceenabled",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "portableipserviceenabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "Configures an Internal Load Balancer element.",
      "isasync": true,
      "name": "configureInternalLoadBalancerElement",
      "params": [
        {
          "description": "Enables/Disables the Internal Load Balancer element",
          "length": 255,
          "name": "enabled",
          "required": true,
          "type": "boolean"
        },
        {
          "description": "the ID of the internal lb provider",
          "length": 255,
          "name": "id",
          "related": "configureInternalLoadBalancerElement",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "Enabled/Disabled the element",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the physical network service provider id of the element",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the id of the internal load balancer element",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Attempts Migration of a system virtual machine to the host specified.",
      "isasync": true,
      "name": "migrateSystemVm",
      "params": [
        {
          "description": "Destination storage pool ID to migrate VM volumes to. Required for migrating the root disk volume",
          "length": 255,
          "name": "storageid",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": false,
          "since": "4.16.0",
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "migrateSystemVm",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "destination Host ID to migrate VM to",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Automatically select a destination host which do not require storage migration, if hostId and storageId are not specified. false by default",
          "length": 255,
          "name": "autoselect",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the agent state of the system VM",
          "name": "agentstate",
          "type": "string"
        },
        {
          "description": "the date and time the system VM was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the last disconnected date of host",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the first DNS for the system VM",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the template name for the system VM",
          "name": "templatename",
          "type": "string"
        },
        {},
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the link local IP address for the system vm",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the name of the system VM",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the system VM",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the system vm",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the private MAC address for the system VM",
          "name": "privatemacaddress",
          "type": "string"
        },
        {
          "description": "the network domain for the system VM",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "public vlan range",
          "name": "publicvlan",
          "type": "list"
        },
        {
          "description": "the number of active console sessions for the console proxy system vm",
          "name": "activeviewersessions",
          "type": "integer"
        },
        {
          "description": "the system VM type",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "guest vlan range",
          "name": "guestvlan",
          "type": "string"
        },
        {
          "description": "the public MAC address for the system VM",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the job status associated with the system VM.  This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the job ID associated with the system VM. This is only displayed if the router listed is part of a currently running asynchronous job.",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the private netmask for the system VM",
          "name": "privatenetmask",
          "type": "string"
        },
        {
          "description": "the control state of the host for the system VM",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the public IP address for the system VM",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the gateway for the system VM",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the Pod ID for the system VM",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the hostname for the system VM",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the private IP address for the system VM",
          "name": "privateip",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the systemvm agent version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the host ID for the system VM",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the second DNS for the system VM",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the template ID for the system VM",
          "name": "templateid",
          "type": "string"
        },
        {},
        {
          "description": "the public netmask for the system VM",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the link local netmask for the system vm",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the state of the system VM",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the Zone ID for the system VM",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Pod name for the system VM",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Zone name for the system VM",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "List the counters for VM auto scaling",
      "isasync": false,
      "name": "listCounters",
      "params": [
        {
          "description": "Name of the counter.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "Source of the counter.",
          "length": 255,
          "name": "source",
          "required": false,
          "type": "string"
        },
        {
          "description": "ID of the Counter.",
          "length": 255,
          "name": "id",
          "related": "createCounter,listCounters",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Network provider of the counter.",
          "length": 255,
          "name": "provider",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createCounter",
      "response": [
        {
          "description": "Value in case of snmp or other specific counters.",
          "name": "value",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Source of the counter.",
          "name": "source",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Name of the counter.",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the Counter",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Provider of the counter.",
          "name": "provider",
          "type": "string"
        }
      ]
    },
    {
      "description": "remove Tungsten-Fabric tag",
      "isasync": true,
      "name": "removeTungstenFabricTag",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the uuid of nics",
          "length": 255,
          "name": "nicuuid",
          "required": false,
          "type": "list"
        },
        {
          "description": "the uuid of Tungsten-Fabric application policy set",
          "length": 255,
          "name": "applicationpolicysetuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric tag",
          "length": 255,
          "name": "taguuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of vms",
          "length": 255,
          "name": "vmuuid",
          "required": false,
          "type": "list"
        },
        {
          "description": "the uuid of networks",
          "length": 255,
          "name": "networkuuid",
          "required": false,
          "type": "list"
        }
      ],
      "related": "createTungstenFabricTag",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "list Tungsten-Fabric network",
          "name": "network",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric nic",
          "name": "nic",
          "type": "list"
        },
        {
          "description": "list Tungsten-Fabric vm",
          "name": "vm",
          "type": "list"
        },
        {},
        {
          "description": "Tungsten-Fabric tag name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy",
          "name": "policy",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists all available virtual router elements.",
      "isasync": false,
      "name": "listVirtualRouterElements",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list virtual router elements by id",
          "length": 255,
          "name": "id",
          "related": "listVirtualRouterElements",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list network offerings by enabled state",
          "length": 255,
          "name": "enabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list virtual router elements by network service provider id",
          "length": 255,
          "name": "nspid",
          "related": "listNetworkServiceProviders",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes snapshot policies for the account.",
      "isasync": false,
      "name": "deleteSnapshotPolicies",
      "params": [
        {
          "description": "the Id of the snapshot policy",
          "length": 255,
          "name": "id",
          "related": "updateSnapshotPolicy",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list of snapshots policy IDs separated by comma",
          "length": 255,
          "name": "ids",
          "related": "updateSnapshotPolicy",
          "required": false,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Lists implementors of implementor of a network traffic type or implementors of all network traffic types",
      "isasync": false,
      "name": "listTrafficTypeImplementors",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Optional. The network traffic type, if specified, return its implementor. Otherwise, return all traffic types with their implementor",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "implementor of network traffic type",
          "name": "traffictypeimplementor",
          "type": "string"
        },
        {
          "description": "network traffic type",
          "name": "traffictype",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "link a cloudstack account to a group or OU in ldap",
      "isasync": false,
      "name": "linkAccountToLdap",
      "params": [
        {
          "description": "The id of the domain that is to contain the linked account.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name of the group or OU in LDAP",
          "length": 255,
          "name": "ldapdomain",
          "required": true,
          "type": "string"
        },
        {
          "description": "domain admin username in LDAP ",
          "length": 255,
          "name": "admin",
          "required": false,
          "type": "string"
        },
        {
          "description": "name of the account, it will be created if it does not exist",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of the account to auto import. Specify 0 for user and 2 for domain admin",
          "length": 255,
          "name": "accounttype",
          "required": true,
          "type": "integer"
        },
        {
          "description": "type of the ldap name. GROUP or OU, defaults to GROUP",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "name of the group or OU in LDAP which is linked to the domain",
          "name": "ldapdomain",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Domain Admin accountId that is created",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "id of the Domain which is linked to LDAP",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the group or OU in LDAP which is linked to the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Type of the account to auto import",
          "name": "accounttype",
          "type": "int"
        },
        {},
        {
          "description": "type of the name in LDAP which is linke to the domain",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "list the db hosts and statistics",
      "isasync": false,
      "name": "listDbMetrics",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the version of the currently running DB",
          "name": "versioncomment",
          "type": "string"
        },
        {
          "description": "the tls versions currently in use (accepted) by the DB",
          "name": "tlsversions",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the number of queries performed on the DB",
          "name": "queries",
          "type": "long"
        },
        {
          "description": "the last measured load averages on the DB",
          "name": "dbloadaverages",
          "type": "double[]"
        },
        {
          "description": "the number of connections to the DB",
          "name": "connections",
          "type": "int"
        },
        {
          "description": "the uptime of the DB in seconds",
          "name": "uptime",
          "type": "long"
        },
        {},
        {
          "description": "the time these statistics were collected",
          "name": "collectiontime",
          "type": "date"
        },
        {
          "description": "the version of the currently running DB",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the state of the usage server",
          "name": "replicas",
          "type": "string[]"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the active usage server",
          "name": "hostname",
          "type": "string"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Deletes an image store or Secondary Storage.",
      "isasync": false,
      "name": "deleteImageStore",
      "params": [
        {
          "description": "The image store ID or Secondary Storage ID.",
          "length": 255,
          "name": "id",
          "related": "listSwifts,addImageStoreS3,listImageStores",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Lists autoscale vm profiles.",
      "isasync": false,
      "name": "listAutoScaleVmProfiles",
      "params": [
        {
          "description": "the otherdeployparameters of the autoscale vm profile",
          "length": 255,
          "name": "otherdeployparams",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list profiles by service offering id",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "availability zone for the auto deployed virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "since": "4.4",
          "type": "uuid"
        },
        {
          "description": "the ID of the autoscale vm profile",
          "length": 255,
          "name": "id",
          "related": "createAutoScaleVmProfile,listAutoScaleVmProfiles",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the templateid of the autoscale vm profile",
          "length": 255,
          "name": "templateid",
          "related": "registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createAutoScaleVmProfile",
      "response": [
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the service offering to be used while deploying a virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "is profile for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the availability zone to be used while deploying a virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "name": "expungevmgraceperiod",
          "type": "integer"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "name": "autoscaleuserid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Base 64 encoded VM user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the template to be used while deploying a virtual machine",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the autoscale vm profile ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
          "name": "otherdeployparams",
          "type": "map"
        }
      ]
    },
    {
      "description": "Disables out-of-band management for a host",
      "isasync": true,
      "name": "disableOutOfBandManagementForHost",
      "params": [
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "enableOutOfBandManagementForHost,disableOutOfBandManagementForCluster",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {},
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Cancel host status from 'Degraded'. Host will transit back to status 'Enabled'.",
      "isasync": true,
      "name": "cancelHostAsDegraded",
      "params": [
        {
          "description": "host ID",
          "length": 255,
          "name": "id",
          "related": "cancelHostAsDegraded,reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "reconnectHost,addBaremetalHost",
      "response": [
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {},
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {},
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        }
      ],
      "since": "4.16.0.0"
    },
    {
      "description": "Authorizes a particular ingress rule for this security group",
      "isasync": true,
      "name": "authorizeSecurityGroupIngress",
      "params": [
        {
          "description": "type of the icmp message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The ID of the security group. Mutually exclusive with securityGroupName parameter",
          "length": 255,
          "name": "securitygroupid",
          "related": "createSecurityGroup",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "user to security group mapping",
          "length": 255,
          "name": "usersecuritygrouplist",
          "required": false,
          "type": "map"
        },
        {
          "description": "end port for this ingress rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list associated. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "start port for this ingress rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional project of the security group",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "The name of the security group. Mutually exclusive with securityGroupId parameter",
          "length": 255,
          "name": "securitygroupname",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional account for the security group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number (see /etc/protocols). ALL is default.",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "security group name",
          "name": "securitygroupname",
          "type": "string"
        },
        {
          "description": "the CIDR notation for the base IP address of the security group rule",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "the protocol of the security group rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "account owning the security group rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ending IP of the security group rule ",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the code for the ICMP message response",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the id of the security group rule",
          "name": "ruleid",
          "type": "string"
        },
        {
          "description": "the type of the ICMP message response",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the starting IP of the security group rule",
          "name": "startport",
          "type": "integer"
        },
        {},
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        }
      ]
    },
    {
      "description": "Sync storage pool with management server (currently supported for Datastore Cluster in VMware and syncs the datastores in it)",
      "isasync": true,
      "name": "syncStoragePool",
      "params": [
        {
          "description": "Storage pool id",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance,syncStoragePool",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "cancelStorageMaintenance,createStoragePool,findStoragePoolsForMigration,enableStorageMaintenance",
      "response": [
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {},
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        }
      ],
      "since": "4.15.1"
    },
    {
      "description": "Creates a security group",
      "isasync": false,
      "name": "createSecurityGroup",
      "params": [
        {
          "description": "name of the security group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Create security group for project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the security group. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the description of the security group",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional domainId for the security group. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name of the security group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the number of virtualmachines associated with this securitygroup",
          "name": "virtualmachinecount",
          "type": "integer"
        },
        {
          "description": "the list of virtualmachine ids associated with this securitygroup",
          "name": "virtualmachineids",
          "type": "set"
        },
        {},
        {
          "description": "the account owning the security group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the security group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the description of the security group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the security group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of egress rules associated with the security group",
          "name": "egressrule",
          "response": [
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "the domain ID of the security group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project id of the group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the list of ingress rules associated with the security group",
          "name": "ingressrule",
          "response": [
            {
              "description": "the type of the ICMP message response",
              "name": "icmptype",
              "type": "integer"
            },
            {
              "description": "security group name",
              "name": "securitygroupname",
              "type": "string"
            },
            {
              "description": "the protocol of the security group rule",
              "name": "protocol",
              "type": "string"
            },
            {
              "description": "account owning the security group rule",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the CIDR notation for the base IP address of the security group rule",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the id of the security group rule",
              "name": "ruleid",
              "type": "string"
            },
            {
              "description": "the starting IP of the security group rule",
              "name": "startport",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ending IP of the security group rule ",
              "name": "endport",
              "type": "integer"
            },
            {
              "description": "the code for the ICMP message response",
              "name": "icmpcode",
              "type": "integer"
            }
          ],
          "type": "set"
        }
      ]
    },
    {
      "description": "List network visibility and all accounts that have permissions to view this network.",
      "isasync": false,
      "name": "listNetworkPermissions",
      "params": [
        {
          "description": "Lists network permission by network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of account the network is available for",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the network ID",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the ID of the domain to which the network belongs",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the domain to which the network belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project the network is available for",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account the network is available for",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of project the network is available for",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Recalculate and update resource count for an account or domain.",
      "isasync": false,
      "name": "updateResourceCount",
      "params": [
        {
          "description": "Type of resource to update. If specifies valid values are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 and 11. If not specified will update all resource counts0 - Instance. Number of instances a user can create. 1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number of disk volumes a user can create. 3 - Snapshot. Number of snapshots a user can create. 4 - Template. Number of templates that a user can register/create. 5 - Project. Number of projects that a user can create. 6 - Network. Number of guest network a user can create. 7 - VPC. Number of VPC a user can create. 8 - CPU. Total number of CPU cores a user can use. 9 - Memory. Total Memory (in MB) a user can use. 10 - PrimaryStorage. Total primary storage space (in GiB) a user can use. 11 - SecondaryStorage. Total secondary storage space (in GiB) a user can use. ",
          "length": 255,
          "name": "resourcetype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Update resource count for a specified account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Update resource limits for project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If account parameter specified then updates resource counts for a specified account in this domain else update resource counts for all accounts & child domains in specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "resource count",
          "name": "resourcecount",
          "type": "long"
        },
        {},
        {
          "description": "the domain name for which resource count's are updated",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name for which resource count's are updated",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain ID for which resource count's are updated",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account for which resource count's are updated",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id for which resource count's are updated",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "resource type name. Values include user_vm, public_ip, volume, snapshot, template, project, network, vpc, cpu, memory, primary_storage, secondary_storage.",
          "name": "resourcetypename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "resource type. Values include 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11. See the resourceType parameter for more information on these values.",
          "name": "resourcetype",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Lists site 2 site vpn gateways",
      "isasync": false,
      "name": "listVpnGateways",
      "params": [
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "id of vpc",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "id of the vpn gateway",
          "length": 255,
          "name": "id",
          "related": "createVpnGateway,listVpnGateways",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "createVpnGateway",
      "response": [
        {
          "description": "the vpc name of this gateway",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "is vpn gateway for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists dynamic roles in CloudStack",
      "isasync": false,
      "name": "listRoles",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List role by role name.",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List role by role type, valid options are: Admin, ResourceAdmin, DomainAdmin, User.",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "List role by role ID.",
          "length": 255,
          "name": "id",
          "related": "importRole,listRoles",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "importRole",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if role is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "list Tungsten-Fabric policy",
      "isasync": false,
      "name": "listTungstenFabricPolicy",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of ip address",
          "length": 255,
          "name": "ipaddressid",
          "related": "updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {},
        {},
        {
          "description": "Tungsten-Fabric policy name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Retrieves a cloud identifier.",
      "isasync": false,
      "name": "getCloudIdentifier",
      "params": [
        {
          "description": "the user ID for the cloud identifier",
          "length": 255,
          "name": "userid",
          "related": "createUser,enableUser,getUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the user ID for the cloud identifier",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the cloud identifier",
          "name": "cloudidentifier",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the signed response for the cloud identifier",
          "name": "signature",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a load balancer stickiness policy ",
      "isasync": true,
      "name": "createLBStickinessPolicy",
      "params": [
        {
          "description": "the description of the load balancer stickiness policy",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "param list. Example: param[0].name=cookiename&param[0].value=LBCookie ",
          "length": 255,
          "name": "param",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "name of the load balancer stickiness policy method, possible values can be obtained from listNetworks API",
          "length": 255,
          "name": "methodname",
          "required": true,
          "type": "string"
        },
        {
          "description": "name of the load balancer stickiness policy",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "listLBStickinessPolicies",
      "response": [
        {},
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {},
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Adds a Cisco Asa 1000v appliance",
      "isasync": false,
      "name": "addCiscoAsa1000vResource",
      "params": [
        {
          "description": "Hostname or ip address of the Cisco ASA 1000v appliance.",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Nexus port profile associated with inside interface of ASA 1000v",
          "length": 255,
          "name": "insideportprofile",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the Cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Configures a Palo Alto firewall device",
      "isasync": true,
      "name": "configurePaloAltoFirewall",
      "params": [
        {
          "description": "capacity of the firewall device, Capacity will be interpreted as number of networks device can handle",
          "length": 255,
          "name": "fwdevicecapacity",
          "required": false,
          "type": "long"
        },
        {
          "description": "Palo Alto firewall device ID",
          "length": 255,
          "name": "fwdeviceid",
          "related": "addPaloAltoFirewall,configurePaloAltoFirewall,listPaloAltoFirewalls",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addPaloAltoFirewall,listPaloAltoFirewalls",
      "response": [
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the username that's used to log in to the external firewall",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the private security zone of the external firewall",
          "name": "privatezone",
          "type": "string"
        },
        {
          "description": "device capacity",
          "name": "fwdevicecapacity",
          "type": "long"
        },
        {
          "description": "the number of times to retry requests to the external firewall",
          "name": "numretries",
          "type": "string"
        },
        {
          "description": "device state",
          "name": "fwdevicestate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the management IP address of the external firewall",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the physical network to which this Palo Alto firewall belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {},
        {
          "description": "device id of the Palo Alto firewall",
          "name": "fwdeviceid",
          "type": "string"
        },
        {
          "description": "the public interface of the external firewall",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "the usage interface of the external firewall",
          "name": "usageinterface",
          "type": "string"
        },
        {
          "description": "the zone ID of the external firewall",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the timeout (in seconds) for requests to the external firewall",
          "name": "timeout",
          "type": "string"
        },
        {
          "description": "the private interface of the external firewall",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "fwdevicename",
          "type": "string"
        },
        {
          "description": "the public security zone of the external firewall",
          "name": "publiczone",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates ACL item with specified ID",
      "isasync": true,
      "name": "updateNetworkACLItem",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the cidr list to allow traffic from/to. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "error code for this ICMP message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ending port of ACL",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "scl entry action, allow or deny",
          "length": 255,
          "name": "action",
          "required": false,
          "type": "string"
        },
        {
          "description": "Indicates if the ACL rule is to be updated partially (merging the parameters sent with current configuration) or completely (disconsidering all of the current configurations). The default value is 'true'.",
          "length": 255,
          "name": "partialupgrade",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the traffic type for the ACL, can be Ingress or Egress, defaulted to Ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "The network of the vm the ACL will be created for",
          "length": 255,
          "name": "number",
          "required": false,
          "type": "integer"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the network ACL item",
          "length": 255,
          "name": "id",
          "related": "updateNetworkACLItem,moveNetworkAclItem",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "A description indicating why the ACL rule is required.",
          "length": 255,
          "name": "reason",
          "required": false,
          "type": "string"
        },
        {
          "description": "the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "the starting port of ACL",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "moveNetworkAclItem",
      "response": [
        {
          "description": "the name of the ACL this item belongs to",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "an explanation on why this ACL rule is being applied",
          "name": "reason",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {},
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {},
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Moves a user to another account",
      "isasync": false,
      "name": "moveUser",
      "params": [
        {
          "description": "id of the user to be deleted",
          "length": 255,
          "name": "id",
          "related": "createUser,enableUser,getUser",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified domain. Has to be accompanied with the account parameter",
          "length": 255,
          "name": "accountid",
          "related": "enableAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "List routers.",
      "isasync": false,
      "name": "listRouters",
      "params": [
        {
          "description": "if true is passed for this parameter, also fetch last executed health check results for the router. Default is false",
          "length": 255,
          "name": "fetchhealthcheckresults",
          "required": false,
          "since": "4.14",
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List networks by VPC",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the state of the router",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the Pod ID of the router",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID of the router",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list virtual router elements by version",
          "length": 255,
          "name": "version",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "if this parameter is passed, list only routers by health check results",
          "length": 255,
          "name": "healthchecksfailed",
          "required": false,
          "since": "4.16",
          "type": "boolean"
        },
        {
          "description": "the name of the router",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster ID of the router",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list by network id",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork,listBrocadeVcsDeviceNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the disk router",
          "length": 255,
          "name": "id",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "if true is passed for this parameter, list only VPC routers",
          "length": 255,
          "name": "forvpc",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the host ID of the router",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "destroyRouter",
      "response": [
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {},
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "Releases host reservation.",
      "isasync": true,
      "name": "releaseHostReservation",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "list Tungsten-Fabric vm",
      "isasync": false,
      "name": "listTungstenFabricVm",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric vm",
          "length": 255,
          "name": "vmuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric vm name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric nic uuid",
          "name": "uuid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Create site to site vpn connection",
      "isasync": true,
      "name": "createVpnConnection",
      "params": [
        {
          "description": "id of the customer gateway",
          "length": 255,
          "name": "s2scustomergatewayid",
          "related": "createVpnCustomerGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "id of the vpn gateway",
          "length": 255,
          "name": "s2svpngatewayid",
          "related": "createVpnGateway",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "connection is passive or not",
          "length": 255,
          "name": "passive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the connection ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {},
        {
          "description": "State of vpn connection",
          "name": "state",
          "type": "string"
        },
        {
          "description": "State of vpn connection",
          "name": "passive",
          "type": "boolean"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "ESP policy of the customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the customer gateway ID",
          "name": "s2scustomergatewayid",
          "type": "string"
        },
        {
          "description": "Split multiple remote networks into multiple phase 2 SAs. Often used with Cisco some products.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the vpn gateway ID",
          "name": "s2svpngatewayid",
          "type": "string"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "IKE policy of the customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {
          "description": "is connection for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "lists network that are using a brocade vcs switch",
      "isasync": false,
      "name": "listBrocadeVcsDeviceNetworks",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "brocade vcs switch ID",
          "length": 255,
          "name": "vcsdeviceid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork",
      "response": [
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {},
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {},
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a Physical Network.",
      "isasync": true,
      "name": "deletePhysicalNetwork",
      "params": [
        {
          "description": "the ID of the Physical network",
          "length": 255,
          "name": "id",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "add Tungsten-Fabric policy rule",
      "isasync": true,
      "name": "addTungstenFabricPolicyRule",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric policy rule source start port",
          "length": 255,
          "name": "srcstartport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy rule protocol",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy rule source end port",
          "length": 255,
          "name": "srcendport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy rule destination start port",
          "length": 255,
          "name": "deststartport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy rule destination end port",
          "length": 255,
          "name": "destendport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy rule source ip prefix",
          "length": 255,
          "name": "srcipprefix",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy rule destination ip prefix",
          "length": 255,
          "name": "destipprefix",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy rule destination ip prefix length",
          "length": 255,
          "name": "destipprefixlen",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy rule destination network",
          "length": 255,
          "name": "destnetwork",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy rule source ip prefix length",
          "length": 255,
          "name": "srcipprefixlen",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy rule direction",
          "length": 255,
          "name": "direction",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy rule action",
          "length": 255,
          "name": "action",
          "required": true,
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy rule source network",
          "length": 255,
          "name": "srcnetwork",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of Tungsten-Fabric policy",
          "length": 255,
          "name": "policyuuid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric policy destination network",
          "name": "destnetwork",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy uuid",
          "name": "policyuuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source start port",
          "name": "srcstartport",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric policy destination ip prefix length",
          "name": "destipprefixlen",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric policy destination ip prefix",
          "name": "destipprefix",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy destination end port",
          "name": "destendport",
          "type": "int"
        },
        {},
        {
          "description": "Tungsten-Fabric policy source end port",
          "name": "srcendport",
          "type": "int"
        },
        {
          "description": "Tungsten-Fabric policy action",
          "name": "action",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source network",
          "name": "srcnetwork",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric rule uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source ip prefix length",
          "name": "srcipprefixlen",
          "type": "int"
        },
        {},
        {
          "description": "Tungsten-Fabric policy name",
          "name": "direction",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy protocol",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy source ip prefix",
          "name": "srcipprefix",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric policy destination start port",
          "name": "deststartport",
          "type": "int"
        }
      ]
    },
    {
      "description": "Dedicates a host.",
      "isasync": true,
      "name": "dedicateHost",
      "params": [
        {
          "description": "the ID of the host to update",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the account which needs dedication. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listDedicatedHosts",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the host",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the Account ID of the host",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the host",
          "name": "affinitygroupid",
          "type": "string"
        },
        {
          "description": "the domain ID of the host",
          "name": "domainid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Removes vpn user",
      "isasync": true,
      "name": "removeVpnUser",
      "params": [
        {
          "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the vpn user. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "username for the vpn user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "remove vpn user from the project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds the GloboDNS external host",
      "isasync": true,
      "name": "addGloboDnsHost",
      "params": [
        {
          "description": "GloboDNS url",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Username for GloboDNS",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Password for GloboDNS",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.5.0"
    },
    {
      "description": "Logs out the user",
      "isasync": false,
      "name": "logout",
      "params": [],
      "related": "",
      "response": [
        {},
        {
          "description": "Response description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a load balancer health check policy.",
      "isasync": true,
      "name": "deleteLBHealthCheckPolicy",
      "params": [
        {
          "description": "the ID of the load balancer health check policy",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Imports a role based on provided map of rule permissions",
      "isasync": false,
      "name": "importRole",
      "params": [
        {
          "description": "Creates a role with this unique name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "The type of the role, valid options are: Admin, ResourceAdmin, DomainAdmin, User",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "Rules param list, rule and permission is must. Example: rules[0].rule=create*&rules[0].permission=allow&rules[0].description=create%20rule&rules[1].rule=list*&rules[1].permission=allow&rules[1].description=listing",
          "length": 255,
          "name": "rules",
          "required": true,
          "type": "map"
        },
        {
          "description": "Force create a role with the same name. This overrides the role type, description and rule permissions for the existing role. Default is false.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The description of the role",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the type of the role",
          "name": "type",
          "type": "string"
        },
        {
          "description": "true if role is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the description of the role",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "name",
          "type": "string"
        },
        {},
        {}
      ],
      "since": "4.15.0"
    },
    {
      "description": "List Swift.",
      "isasync": false,
      "name": "listSwifts",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the id of the swift",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addImageStoreS3,listImageStores",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {},
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Disables HA for a host",
      "isasync": true,
      "name": "disableHAForHost",
      "params": [
        {
          "description": "ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the host HA provider",
          "name": "haprovider",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "operation status",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the HA state of the host",
          "name": "hastate",
          "type": "hastate"
        },
        {
          "description": "if host HA is enabled for the host",
          "name": "haenable",
          "type": "boolean"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "Enables out-of-band management for a host",
      "isasync": true,
      "name": "enableOutOfBandManagementForHost",
      "params": [
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "disableOutOfBandManagementForCluster",
      "response": [
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {},
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Deletes a service offering.",
      "isasync": false,
      "name": "deleteServiceOffering",
      "params": [
        {
          "description": "the ID of the service offering",
          "length": 255,
          "name": "id",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists supported Kubernetes version",
      "isasync": false,
      "name": "listKubernetesSupportedVersions",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the Kubernetes supported version",
          "length": 255,
          "name": "id",
          "related": "listKubernetesSupportedVersions",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the minimum semantic version for the Kubernetes supported version to be listed",
          "length": 255,
          "name": "minimumsemanticversion",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the zone in which Kubernetes supported version will be available",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the minimum Kubernetes supported version",
          "length": 255,
          "name": "minimumkubernetesversionid",
          "related": "listKubernetesSupportedVersions",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the name of the zone in which Kubernetes supported version is available",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date when this Kubernetes supported version was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the minimum number of CPUs needed for the Kubernetes supported version",
          "name": "mincpunumber",
          "type": "integer"
        },
        {
          "description": "whether Kubernetes supported version supports HA, multi-control nodes",
          "name": "supportsha",
          "type": "boolean"
        },
        {
          "description": "whether Kubernetes supported version supports Autoscaling",
          "name": "supportsautoscaling",
          "type": "boolean"
        },
        {
          "description": "the id of the zone in which Kubernetes supported version is available",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the minimum RAM size in MB needed for the Kubernetes supported version",
          "name": "minmemory",
          "type": "integer"
        },
        {
          "description": "Kubernetes semantic version",
          "name": "semanticversion",
          "type": "string"
        },
        {
          "description": "the id of the binaries ISO for Kubernetes supported version",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the state of the binaries ISO for Kubernetes supported version",
          "name": "isostate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Name of the Kubernetes supported version",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the Kubernetes supported version",
          "name": "id",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the binaries ISO for Kubernetes supported version",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the enabled or disabled state of the Kubernetes supported version",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a Nicira NVP device",
      "isasync": true,
      "name": "addNiciraNvpDevice",
      "params": [
        {
          "description": "Credentials to access the Nicira Controller API",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Hostname of ip address of the Nicira NVP Controller.",
          "length": 255,
          "name": "hostname",
          "required": true,
          "type": "string"
        },
        {
          "description": "The L3 Gateway Service UUID configured on the Nicira Controller",
          "length": 255,
          "name": "l3gatewayserviceuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "The L2 Gateway Service UUID configured on the Nicira Controller",
          "length": 255,
          "name": "l2gatewayserviceuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Credentials to access the Nicira Controller API",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Transportzone UUID configured on the Nicira Controller",
          "length": 255,
          "name": "transportzoneuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "device id of the Nicire Nvp",
          "name": "nvpdeviceid",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "niciradevicename",
          "type": "string"
        },
        {},
        {
          "description": "the physical network to which this Nirica Nvp belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the controller Ip address",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the transport zone Uuid",
          "name": "transportzoneuuid",
          "type": "string"
        },
        {
          "description": "this L2 gateway service Uuid",
          "name": "l2gatewayserviceuuid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "this L3 gateway service Uuid",
          "name": "l3gatewayserviceuuid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists network serviceproviders for a given physical network.",
      "isasync": false,
      "name": "listNetworkServiceProviders",
      "params": [
        {
          "description": "list providers by state",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list providers by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the provider name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "uuid of the network provider",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the destination physical network",
          "name": "destinationphysicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if individual services can be enabled/disabled",
          "name": "canenableindividualservice",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "state of the network provider",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "services for this provider",
          "name": "servicelist",
          "type": "list"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "delete Tungsten-Fabric tag type",
      "isasync": true,
      "name": "deleteTungstenFabricTagType",
      "params": [
        {
          "description": "the ID of Tungsten-Fabric tag type",
          "length": 255,
          "name": "tagtypeuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Lists infrastructure",
      "isasync": false,
      "name": "listInfrastructure",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "Number of hypervisor hosts",
          "name": "hosts",
          "type": "integer"
        },
        {
          "description": "Number of routers",
          "name": "routers",
          "type": "integer"
        },
        {
          "description": "Number of images stores",
          "name": "imagestores",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Number of clusters",
          "name": "clusters",
          "type": "integer"
        },
        {
          "description": "Number of systemvms",
          "name": "systemvms",
          "type": "integer"
        },
        {
          "description": "Number of management servers",
          "name": "managementservers",
          "type": "integer"
        },
        {},
        {
          "description": "Number of zones",
          "name": "zones",
          "type": "integer"
        },
        {
          "description": "Number of storage pools",
          "name": "storagepools",
          "type": "integer"
        },
        {
          "description": "Number of pods",
          "name": "pods",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Number of internal LBs",
          "name": "ilbvms",
          "type": "integer"
        },
        {
          "description": "Number of cpu sockets",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "Number of Alerts",
          "name": "alerts",
          "type": "integer"
        }
      ],
      "since": "4.9.3"
    },
    {
      "description": "Lists usage records for accounts",
      "isasync": false,
      "name": "listUsageRecords",
      "params": [
        {
          "description": "Flag to enable display of Tags for a resource",
          "length": 255,
          "name": "includetags",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List usage records for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List usage records for specified project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject,suspendProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Start date range for usage record query (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\", e.g. startDate=2015-01-01 or startdate=2015-01-01 11:00:00).",
          "length": 255,
          "name": "startdate",
          "required": true,
          "type": "date"
        },
        {
          "description": "List usage records for the specified user.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List usage records for the specified usage type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "long"
        },
        {
          "description": "End date range for usage record query (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-dd HH:mm:ss\", e.g. startDate=2015-01-01 or startdate=2015-01-01 10:30:00).",
          "length": 255,
          "name": "enddate",
          "required": true,
          "type": "date"
        },
        {
          "description": "List usage records for the specified account",
          "length": 255,
          "name": "accountid",
          "related": "enableAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List usage records for the specified usage UUID. Can be used only together with TYPE parameter.",
          "length": 255,
          "name": "usageid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Flag to enable description rendered in old format which uses internal database IDs instead of UUIDs. False by default.",
          "length": 255,
          "name": "oldformat",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specify if usage records should be fetched recursively per domain. If an account id is passed, records will be limited to that account.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "since": "4.15",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "resource or virtual machine name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "resource size",
          "name": "size",
          "type": "long"
        },
        {
          "description": "virtual size of resource",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "description of the usage record",
          "name": "description",
          "type": "string"
        },
        {
          "description": "raw usage in hours",
          "name": "rawusage",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the project id of the resource",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain the resource is associated with",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "virtual machine os category name",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "number of cpu of resource",
          "name": "cpunumber",
          "type": "long"
        },
        {
          "description": "start date of the usage record",
          "name": "startdate",
          "type": "string"
        },
        {
          "description": "the user account Id",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "memory allocated for the resource",
          "name": "memory",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user account name",
          "name": "account",
          "type": "string"
        },
        {
          "description": "virtual machine os display name",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "virtual machine ID",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the project name of the resource",
          "name": "project",
          "type": "string"
        },
        {
          "description": "True if the resource is default",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "True if the IPAddress is source NAT",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "resource type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "virtual machine os type ID",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "speed of each cpu of resource",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "end date of the usage record",
          "name": "enddate",
          "type": "string"
        },
        {
          "description": "template ID",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "id of the network",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "usage in hours",
          "name": "usage",
          "type": "string"
        },
        {
          "description": "id of the resource",
          "name": "usageid",
          "type": "string"
        },
        {
          "description": "usage type ID",
          "name": "usagetype",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "True if the IPAddress is system IP - allocated during vm deploy or lb rule create",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "virtual machine guest os category ID",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the zone ID",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain ID",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "id of the vpc",
          "name": "vpcid",
          "type": "string"
        },
        {},
        {
          "description": "offering ID",
          "name": "offeringid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Delete Netscaler Control Center",
      "isasync": false,
      "name": "deleteNetscalerControlCenter",
      "params": [
        {
          "description": "Netscaler Control Center ID",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a detached disk volume.",
      "isasync": false,
      "name": "deleteVolume",
      "params": [
        {
          "description": "The ID of the disk volume",
          "length": 255,
          "name": "id",
          "related": "createVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Recovers a Destroy volume.",
      "isasync": false,
      "name": "recoverVolume",
      "params": [
        {
          "description": "The ID of the volume",
          "length": 255,
          "name": "id",
          "related": "createVolume,recoverVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {},
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {},
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.14.0"
    },
    {
      "description": "remove Tungsten-Fabric network gateway from logical router",
      "isasync": true,
      "name": "removeTungstenFabricNetworkGatewayFromLogicalRouter",
      "params": [
        {
          "description": "Tungsten-Fabric logical router uuid",
          "length": 255,
          "name": "logicalrouteruuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric network uuid",
          "length": 255,
          "name": "networkuuid",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "list Tungsten-Fabric policy network name",
          "name": "network",
          "type": "list"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric logical router uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric logical router name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Enables a user account",
      "isasync": false,
      "name": "enableUser",
      "params": [
        {
          "description": "Enables user by user ID.",
          "length": 255,
          "name": "id",
          "related": "createUser,enableUser,getUser",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createUser,getUser",
      "response": [
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {},
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists zone metrics",
      "isasync": false,
      "name": "listZonesMetrics",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the zone",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the network type of the zone that the virtual machine belongs to",
          "length": 255,
          "name": "networktype",
          "required": false,
          "type": "string"
        },
        {
          "description": "flag to display the capacity of the zones",
          "length": 255,
          "name": "showcapacities",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone",
          "length": 255,
          "name": "id",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "true if you want to retrieve all available Zones. False if you only want to return the Zones from which you have at least one VM. Default is false.",
          "length": 255,
          "name": "available",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the domain associated with the zone",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "flag to display the resource image for the zones",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List zones by resource tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "since": "4.3",
          "type": "map"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "the total cpu allocated in GiB",
          "name": "memoryallocated",
          "type": "string"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "the total cpu allocated in Ghz",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the maximum memory deviation",
          "name": "memorymaxdeviation",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {
          "description": "the type of the zone - core or edge",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {},
        {
          "description": "memory usage notification threshold exceeded",
          "name": "memorythreshold",
          "type": "boolean"
        },
        {
          "description": "the maximum cpu deviation",
          "name": "cpumaxdeviation",
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total cpu capacity in Ghz",
          "name": "cputotal",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total cpu used in GiB",
          "name": "memoryused",
          "type": "string"
        },
        {
          "description": "cpu usage notification threshold exceeded",
          "name": "cputhreshold",
          "type": "boolean"
        },
        {
          "description": "state of the cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "Allow end users to specify VR MTU",
          "name": "allowuserspecifyvrmtu",
          "type": "boolean"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "cpu allocated notification threshold exceeded",
          "name": "cpuallocatedthreshold",
          "type": "boolean"
        },
        {
          "description": "cpu usage disable threshold exceeded",
          "name": "cpudisablethreshold",
          "type": "boolean"
        },
        {
          "description": "healthy / total clusters in the zone",
          "name": "clusters",
          "type": "string"
        },
        {
          "description": "the total cpu used in Ghz",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "The maximum value the MTU can have on the VR's public interfaces",
          "name": "routerpublicinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "cpu allocated disable threshold exceeded",
          "name": "cpuallocateddisablethreshold",
          "type": "boolean"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {
          "description": "The maximum value the MTU can have on the VR's private interfaces",
          "name": "routerprivateinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "memory allocated disable threshold exceeded",
          "name": "memoryallocateddisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the total cpu capacity in GiB",
          "name": "memorytotal",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        },
        {
          "description": "memory usage disable threshold exceeded",
          "name": "memorydisablethreshold",
          "type": "boolean"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "memory allocated notification threshold exceeded",
          "name": "memoryallocatedthreshold",
          "type": "boolean"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        }
      ],
      "since": "4.9.3"
    },
    {
      "description": "Extracts a template",
      "isasync": true,
      "name": "extractTemplate",
      "params": [
        {
          "description": "the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD",
          "length": 255,
          "name": "mode",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the template",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the url to which the ISO would be extracted",
          "length": 2048,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the zone where the ISO is originally located",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "zone name the object was extracted from",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the extracted object",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the time and date the object was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the percentage of the entity uploaded to the specified location",
          "name": "uploadpercentage",
          "type": "integer"
        },
        {
          "description": "the state of the extracted object",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "zone ID the object was extracted from",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the account id to which the extracted object belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "if mode = upload then url of the uploaded entity. if mode = download the url from which the entity can be downloaded",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the mode of extraction - upload or download",
          "name": "extractMode",
          "type": "string"
        },
        {
          "description": "the upload id of extracted object",
          "name": "extractId",
          "type": "string"
        },
        {
          "description": "the id of extracted object",
          "name": "id",
          "type": "string"
        },
        {
          "description": "type of the storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the status of the extraction",
          "name": "status",
          "type": "string"
        },
        {
          "description": "",
          "name": "resultstring",
          "type": "string"
        }
      ]
    },
    {
      "description": "Expunge a virtual machine. Once expunged, it cannot be recoverd.",
      "isasync": true,
      "name": "expungeVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ]
    },
    {
      "description": "Suspends a project",
      "isasync": true,
      "name": "suspendProject",
      "params": [
        {
          "description": "id of the project to be suspended",
          "length": 255,
          "name": "id",
          "related": "activateProject,suspendProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "activateProject",
      "response": [
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the account name of the project's owners",
          "name": "owner",
          "type": "list"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {},
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the project account name of the project",
          "name": "projectaccountname",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the date this project was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {},
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Updates an IP address",
      "isasync": true,
      "name": "updateIpAddress",
      "params": [
        {
          "description": "the ID of the public IP address to update",
          "length": 255,
          "name": "id",
          "related": "updateIpAddress,associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the IP to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "associateIpAddress,listPublicIpAddresses",
      "response": [
        {},
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if the IP address is a source nat address, false otherwise",
          "name": "issourcenat",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if this ip is system ip (was allocated as a part of deployVm or createLbRule)",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account the public IP address is associated with",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with the IP address",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the name of the Network where ip belongs to",
          "name": "networkname",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the Network where ip belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with ip address",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "is public IP portable across the zones",
          "name": "isportable",
          "type": "boolean"
        },
        {
          "description": "is public ip for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "virtual machine id the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "VPC id the ip belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "virtual machine (dnat) ip address (not null only for static nat Ip)",
          "name": "vmipaddress",
          "type": "string"
        },
        {
          "description": "virtual machine name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "virtual machine display name the ip address is assigned to (not null only for static nat Ip)",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the virtual network for the IP address",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the physical network this belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "true if this ip is for static nat, false otherwise",
          "name": "isstaticnat",
          "type": "boolean"
        },
        {
          "description": "public IP address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "VPC name the ip belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the ID of the VLAN associated with the IP address. This parameter is visible to ROOT admins only",
          "name": "vlanid",
          "type": "string"
        },
        {
          "description": "the name of the zone the public IP address belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the VLAN associated with the IP address",
          "name": "vlanname",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with the IP address",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the ID of the zone the public IP address belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "State of the ip address. Can be: Allocatin, Allocated and Releasing",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "purpose of the IP address. In Acton this value is not null for Ips with isSystem=true, and can have either StaticNat or LB value",
          "name": "purpose",
          "type": "string"
        },
        {
          "description": "the domain ID the public IP address is associated with",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "date the public IP address was acquired",
          "name": "allocated",
          "type": "date"
        },
        {
          "description": "public IP address id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain the public IP address is associated with",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Get API limit count for the caller",
      "isasync": false,
      "name": "getApiLimit",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "the account uuid of the api remaining count",
          "name": "accountid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "currently allowed number of apis",
          "name": "apiAllowed",
          "type": "int"
        },
        {
          "description": "seconds left to reset counters",
          "name": "expireAfter",
          "type": "long"
        },
        {
          "description": "the account name of the api remaining count",
          "name": "account",
          "type": "string"
        },
        {
          "description": "number of api already issued",
          "name": "apiIssued",
          "type": "int"
        },
        {}
      ]
    },
    {
      "description": "Deletes a storage network IP Range.",
      "isasync": true,
      "name": "deleteStorageNetworkIpRange",
      "params": [
        {
          "description": "the uuid of the storage network ip range",
          "length": 255,
          "name": "id",
          "related": "createStorageNetworkIpRange",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "moves a network to another physical network",
      "isasync": true,
      "name": "migrateNetwork",
      "params": [
        {
          "description": "true if previous network migration cmd failed",
          "length": 255,
          "name": "resume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "network offering ID",
          "length": 255,
          "name": "networkofferingid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks,migrateNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "createNetwork,updateNetwork,listNetworks",
      "response": [
        {
          "description": "The routes for the network to ease adding route in upstream router",
          "name": "ip6routes",
          "type": "set"
        },
        {
          "description": "name of the network offering the network is created from",
          "name": "networkofferingname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with network",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "list networks that are persistent",
          "name": "ispersistent",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "true if network is system, false otherwise",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "true if network can span multiple zones",
          "name": "strechedl2subnet",
          "type": "boolean"
        },
        {
          "description": "display text of the network offering the network is created from",
          "name": "networkofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "zone id of the network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the date this network was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the owner of the network",
          "name": "account",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's public facing interfaces",
          "name": "publicmtu",
          "type": "integer"
        },
        {
          "description": "state of the network",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "The external id of the network",
          "name": "externalid",
          "type": "string"
        },
        {
          "description": "Cloudstack managed address space, all CloudStack managed VMs get IP address from CIDR",
          "name": "cidr",
          "type": "string"
        },
        {
          "description": "Name of the VPC to which this network belongs",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "availability of the network offering the network is created from",
          "name": "networkofferingavailability",
          "type": "string"
        },
        {
          "description": "the network's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "broadcast uri of the network. This parameter is visible to ROOT admins only",
          "name": "broadcasturi",
          "type": "string"
        },
        {
          "description": "If a network is enabled for 'streched l2 subnet' then represents zones on which network currently spans",
          "name": "zonesnetworkspans",
          "type": "set"
        },
        {
          "description": "Tungsten-Fabric virtual router the network belongs to",
          "name": "tungstenvirtualrouteruuid",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the network",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "true if network supports specifying ip ranges, false otherwise",
          "name": "specifyipranges",
          "type": "boolean"
        },
        {
          "description": "the network's gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the name of the network",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "true if network is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "list networks available for vm deployment",
          "name": "canusefordeploy",
          "type": "boolean"
        },
        {
          "description": "the cidr of IPv6 network",
          "name": "ip6cidr",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {},
        {
          "description": "network offering id the network is created from",
          "name": "networkofferingid",
          "type": "string"
        },
        {
          "description": "the details of the network",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the displaytext of the network",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "true if guest network default egress policy is allow; false if default egress policy is deny",
          "name": "egressdefaultpolicy",
          "type": "boolean"
        },
        {
          "description": "the traffic type of the network",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the network to the end user or not.",
          "name": "displaynetwork",
          "type": "boolean"
        },
        {
          "description": "the second IPv4 DNS for the network",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "acl type - access type to the network",
          "name": "acltype",
          "type": "string"
        },
        {
          "description": "related to what other network configuration",
          "name": "related",
          "type": "string"
        },
        {
          "description": "VPC the network belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true network requires restart",
          "name": "restartrequired",
          "type": "boolean"
        },
        {
          "description": "true if users from subdomains can access the domain level network",
          "name": "subdomainaccess",
          "type": "boolean"
        },
        {
          "description": "true if network offering is ip conserve mode enabled",
          "name": "networkofferingconservemode",
          "type": "boolean"
        },
        {
          "description": "the first IPv4 DNS for the network",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the gateway of IPv6 network",
          "name": "ip6gateway",
          "type": "string"
        },
        {
          "description": "ACL name associated with the VPC network",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the network's IP range not to be used by CloudStack guest VMs and can be used for non CloudStack purposes",
          "name": "reservediprange",
          "type": "string"
        },
        {
          "description": "The routing mode of network offering",
          "name": "ip6routing",
          "type": "string"
        },
        {
          "description": "If the network has redundant routers enabled",
          "name": "redundantrouter",
          "type": "boolean"
        },
        {
          "description": "if network offering supports vm autoscaling feature",
          "name": "supportsvmautoscaling",
          "type": "boolean"
        },
        {
          "description": "the list of services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the network",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the name of the Network associated with this network",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the network",
          "name": "type",
          "type": "string"
        },
        {
          "description": "The vlan of the network. This parameter is visible to ROOT admins only",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the id of the network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Broadcast domain type of the network",
          "name": "broadcastdomaintype",
          "type": "string"
        },
        {
          "description": "ACL Id associated with the VPC network",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the name of the zone the network belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "The internet protocol of network offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the network CIDR of the guest network configured with IP reservation. It is the summation of CIDR and RESERVED_IP_RANGE",
          "name": "networkcidr",
          "type": "string"
        },
        {
          "description": "the ID of the Network associated with this network",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "MTU configured on the network VR's private interfaces",
          "name": "privatemtu",
          "type": "integer"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "Adds a VMware datacenter to specified zone",
      "isasync": false,
      "name": "addVmwareDc",
      "params": [
        {
          "description": "The password for specified username.",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "The name/ip of vCenter. Make sure it is IP address or full qualified domain name for host running vCenter server.",
          "length": 255,
          "name": "vcenter",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Username required to connect to resource.",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "Name of VMware datacenter to be added to specified zone.",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Zone ID.",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "The VMware Datacenter name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the Zone ID associated with this VMware Datacenter",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "The VMware vCenter name/ip",
          "name": "vcenter",
          "type": "string"
        },
        {},
        {
          "description": "The VMware Datacenter ID",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates Ipv6 firewall rule with specified ID",
      "isasync": true,
      "name": "updateIpv6FirewallRule",
      "params": [
        {
          "description": "the traffic type for the Ipv6 firewall rule, can be Ingress or Egress, defaulted to Ingress if not specified",
          "length": 255,
          "name": "traffictype",
          "required": false,
          "type": "string"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "error code for this ICMP message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the ipv6 firewall rule",
          "length": 255,
          "name": "id",
          "related": "updateIpv6FirewallRule",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the starting port of Ipv6 firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the cidr list to allow traffic from/to. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "an optional field, whether to the display the Ipv6 firewall rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ending port of Ipv6 firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the protocol for the Ipv6 firewall rule. Valid values are TCP/UDP/ICMP/ALL or valid protocol number",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the VM name for the port forwarding rule",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the VM display name for the port forwarding rule",
          "name": "virtualmachinedisplayname",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's private port range",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the public ip address for the port forwarding rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the starting port of port forwarding rule's public port range",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "privateendport",
          "type": "string"
        },
        {
          "description": "the id of the guest network the port forwarding rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the VM ID for the port forwarding rule",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the protocol of the port forwarding rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the vm ip address for the port forwarding rule",
          "name": "vmguestip",
          "type": "string"
        },
        {
          "description": "is firewall for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "the ending port of port forwarding rule's private port range",
          "name": "publicendport",
          "type": "string"
        },
        {
          "description": "the public ip address id for the port forwarding rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the port forwarding rule",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists unmanaged virtual machines for a given cluster.",
      "isasync": false,
      "name": "listUnmanagedInstances",
      "params": [
        {
          "description": "the hypervisor name of the instance",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the CPU cores of the virtual machine",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the CPU cores per socket for the virtual machine. VMware specific",
          "name": "cpucorepersocket",
          "type": "integer"
        },
        {
          "description": "the list of nics associated with the virtual machine",
          "name": "nic",
          "response": [
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the power state of the virtual machine",
          "name": "powerstate",
          "type": "string"
        },
        {
          "description": "the CPU speed of the virtual machine",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the name of the host to which virtual machine belongs",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the list of disks associated with the virtual machine",
          "name": "disk",
          "response": [
            {
              "description": "the controller of the disk",
              "name": "datastorehost",
              "type": "string"
            },
            {
              "description": "the capacity of the disk in bytes",
              "name": "capacity",
              "type": "long"
            },
            {
              "description": "the ID of the disk",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the controller of the disk",
              "name": "datastorename",
              "type": "string"
            },
            {
              "description": "the label of the disk",
              "name": "label",
              "type": "string"
            },
            {
              "description": "the controller of the disk",
              "name": "datastoretype",
              "type": "string"
            },
            {
              "description": "the file path of the disk image",
              "name": "imagepath",
              "type": "string"
            },
            {
              "description": "the controller of the disk",
              "name": "controller",
              "type": "string"
            },
            {
              "description": "the controller unit of the disk",
              "name": "controllerunit",
              "type": "integer"
            },
            {
              "description": "the position of the disk",
              "name": "position",
              "type": "integer"
            },
            {
              "description": "the controller of the disk",
              "name": "datastorepath",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the operating system ID of the virtual machine",
          "name": "osid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the cluster to which virtual machine belongs",
          "name": "clusterid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the host to which virtual machine belongs",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the operating system of the virtual machine",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the memory of the virtual machine in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.14.0"
    },
    {
      "description": "Updates ISO permissions",
      "isasync": false,
      "name": "updateIsoPermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "registerTemplate,listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if the template/iso is extractable, false other wise. Can be set only by root admin",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "a comma delimited list of accounts within caller's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "permission operator (add, remove, reset)",
          "length": 255,
          "name": "op",
          "required": false,
          "type": "string"
        },
        {
          "description": "a comma delimited list of projects. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "activateProject",
          "required": false,
          "type": "list"
        },
        {
          "description": "true for featured template/iso, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true for public template/iso, false for private templates/isos",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Registers an existing template into the CloudStack cloud.",
      "isasync": false,
      "name": "registerTemplate",
      "params": [
        {
          "description": "true if the template supports the sshkey upload feature; default is false",
          "length": 255,
          "name": "sshkeyenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone the template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "A list of zone ids where the template will be hosted. Use this parameter if the template needs to be registered to multiple zones in one go. Use zoneid if the template needs to be registered to only one zone.Passing only -1 to this will cause the template to be registered as a cross zone template and will be copied to all zones. ",
          "length": 255,
          "name": "zoneids",
          "related": "createZone,listZones",
          "required": false,
          "type": "list"
        },
        {
          "description": "the display text of the template. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the template type is routing i.e., if template is used to deploy router",
          "length": 255,
          "name": "isrouting",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Template details in key/value pairs using format details[i].keyname=keyvalue. Example: details[0].hypervisortoolsversion=xenserver61",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "the format for the template. Possible values include QCOW2, RAW, VHD and OVA.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if this template requires HVM",
          "length": 255,
          "name": "requireshvm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the tag for this template.",
          "length": 255,
          "name": "templatetag",
          "required": false,
          "type": "string"
        },
        {
          "description": "the target hypervisor for the template",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the template or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the template is available to all accounts; default is true",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the URL of where the template is hosted. Possible URL include http:// and https://",
          "length": 2048,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "32 or 64 bits support. 64 by default",
          "length": 255,
          "name": "bits",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the OS Type that best represents the OS of this template. Not applicable with VMware, as we honour what is defined in the template",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Register template for the project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "true if the template supports the password reset feature; default is false",
          "length": 255,
          "name": "passwordenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the checksum value of this template. The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "(VMware only) true if VM deployments should preserve all the configurations defined for this template",
          "length": 255,
          "name": "deployasis",
          "required": false,
          "since": "4.15.1",
          "type": "boolean"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if template should bypass Secondary Storage and be downloaded to Primary Storage on deployment",
          "length": 255,
          "name": "directdownload",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "length": 255,
          "name": "isdynamicallyscalable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
      "response": [
        {
          "description": "the processor bit size",
          "name": "bits",
          "type": "int"
        },
        {
          "description": "the template display text",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if template requires HVM enabled, false otherwise",
          "name": "requireshvm",
          "type": "boolean"
        },
        {
          "description": "the type of the template",
          "name": "templatetype",
          "type": "string"
        },
        {
          "description": "the project name of the template",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the status of the template",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the date this template was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "if root disk template, then ids of the datas disk templates this template owns",
          "name": "childtemplates",
          "type": "set"
        },
        {
          "description": "KVM Only: true if template is directly downloaded to Primary Storage bypassing Secondary Storage",
          "name": "directdownload",
          "type": "boolean"
        },
        {
          "description": "Lists the download progress of a template across all secondary storages",
          "name": "downloaddetails",
          "type": "list"
        },
        {
          "description": "list of parameters which contains the list of keys or string parameters that are needed to be passed for any variables declared in userdata",
          "name": "userdataparams",
          "type": "string"
        },
        {
          "description": "true if the template is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the URL which the template/iso is registered from",
          "name": "url",
          "type": "string"
        },
        {
          "description": "true if the template is ready to be deployed from, false otherwise.",
          "name": "isready",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of userdata linked to this template",
          "name": "userdataname",
          "type": "string"
        },
        {},
        {
          "description": "the template name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the tag of this template",
          "name": "templatetag",
          "type": "string"
        },
        {
          "description": "VMware only: additional key/value details tied with deploy-as-is template",
          "name": "deployasisdetails",
          "type": "map"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "true if the ISO is bootable, false otherwise",
          "name": "bootable",
          "type": "boolean"
        },
        {
          "description": "the name of the OS type for this template.",
          "name": "ostypename",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account id to which the template belongs",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the format of the template.",
          "name": "format",
          "type": "imageformat"
        },
        {
          "description": "the name of the zone for this template",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the date this template was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "checksum of the template",
          "name": "checksum",
          "type": "string"
        },
        {
          "description": "the ID of the zone for this template",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the template ID of the parent template if present",
          "name": "sourcetemplateid",
          "type": "string"
        },
        {
          "description": "the project id of the template",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the id of userdata linked to this template",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the account name to which the template belongs",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the physical size of the template",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "VMware only: true if template is deployed without orchestrating disks and networks but \"as-is\" defined in the template.",
          "name": "deployasis",
          "type": "boolean"
        },
        {
          "description": "true if the reset password feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the ID of the OS type for this template.",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "additional key/value details tied with template",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the name of the domain to which the template belongs",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if this template is a featured template, false otherwise",
          "name": "isfeatured",
          "type": "boolean"
        },
        {
          "description": "the size of the template",
          "name": "size",
          "type": "long"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if template is sshkey enabled, false otherwise",
          "name": "sshkeyenabled",
          "type": "boolean"
        },
        {
          "description": "the ID of the secondary storage host for the template",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the secondary storage host for the template",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the template is managed across all Zones, false otherwise",
          "name": "crossZones",
          "type": "boolean"
        },
        {
          "description": "if Datadisk template, then id of the root disk template this template belongs to",
          "name": "parenttemplateid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes VPC offering",
      "isasync": true,
      "name": "deleteVPCOffering",
      "params": [
        {
          "description": "the ID of the VPC offering",
          "length": 255,
          "name": "id",
          "related": "updateVPCOffering",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds stratosphere ssp server",
      "isasync": false,
      "name": "addStratosphereSsp",
      "params": [
        {
          "description": "stratosphere ssp api name",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "stratosphere ssp api username",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "stratosphere ssp api password",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "stratosphere ssp server url",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "stratosphere ssp tenant uuid",
          "length": 255,
          "name": "tenantuuid",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "server id of the stratosphere ssp server",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "url of ssp endpoint",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "zone which this ssp controls",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a network ACL",
      "isasync": true,
      "name": "deleteNetworkACL",
      "params": [
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "id",
          "related": "moveNetworkAclItem",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a storage pool.",
      "isasync": false,
      "name": "createStoragePool",
      "params": [
        {
          "description": "the Pod ID for the storage pool",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "bytes CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacitybytes",
          "required": false,
          "type": "long"
        },
        {
          "description": "the details for the storage pool",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "hypervisor type of the hosts in zone that will be attached to this storage pool. KVM, VMware supported as of now.",
          "length": 255,
          "name": "hypervisor",
          "required": false,
          "type": "string"
        },
        {
          "description": "whether the storage should be managed by CloudStack",
          "length": 255,
          "name": "managed",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the URL of the storage pool",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the storage provider name",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "length": 255,
          "name": "capacityiops",
          "required": false,
          "type": "long"
        },
        {
          "description": "the cluster ID for the storage pool",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the tags for the storage pool",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "string"
        },
        {
          "description": "the scope of the storage: cluster or zone",
          "length": 255,
          "name": "scope",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the storage pool",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name for the storage pool",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "cancelStorageMaintenance,findStoragePoolsForMigration,enableStorageMaintenance",
      "response": [
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {},
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists storage pools available for migration of a volume.",
      "isasync": false,
      "name": "findStoragePoolsForMigration",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the volume",
          "length": 255,
          "name": "id",
          "related": "createVolume,attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "cancelStorageMaintenance,enableStorageMaintenance",
      "response": [
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {},
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "create Tungsten-Fabric tag",
      "isasync": true,
      "name": "createTungstenFabricTag",
      "params": [
        {
          "description": "Tungsten-Fabric tag type",
          "length": 255,
          "name": "tagtype",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Tungsten-Fabric tag value",
          "length": 255,
          "name": "tagvalue",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "list Tungsten-Fabric nic",
          "name": "nic",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric tag name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "list Tungsten-Fabric policy",
          "name": "policy",
          "type": "list"
        },
        {},
        {},
        {
          "description": "list Tungsten-Fabric vm",
          "name": "vm",
          "type": "list"
        },
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "list Tungsten-Fabric network",
          "name": "network",
          "type": "list"
        }
      ]
    },
    {
      "description": "Adds an OpenDaylight controller",
      "isasync": true,
      "name": "addOpenDaylightController",
      "params": [
        {
          "description": "Api URL of the OpenDaylight Controller.",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Username to access the OpenDaylight API",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credential to access the OpenDaylight API",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "createPhysicalNetwork",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the username to authenticate to the controller",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "device id of the controller",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network to which this controller belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the name assigned to the controller",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the url of the controller api",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "delete Tungsten-Fabric firewall rule",
      "isasync": true,
      "name": "deleteTungstenFabricFirewallRule",
      "params": [
        {
          "description": "the uuid of Tungsten-Fabric firewall rule",
          "length": 255,
          "name": "firewallruleuuid",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "createZone,listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a Zone.",
      "isasync": false,
      "name": "createZone",
      "params": [
        {
          "description": "true if local storage offering enabled, false otherwise",
          "length": 255,
          "name": "localstorageenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "network type of the zone, can be Basic or Advanced",
          "length": 255,
          "name": "networktype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "length": 255,
          "name": "domain",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the Zone",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the second DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "length": 255,
          "name": "dns1",
          "required": true,
          "type": "string"
        },
        {
          "description": "the first DNS for IPv6 network in the Zone",
          "length": 255,
          "name": "ip6dns1",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if the zone is an edge zone, false otherwise",
          "length": 255,
          "name": "isedge",
          "required": false,
          "since": "4.18.0",
          "type": "boolean"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "length": 255,
          "name": "guestcidraddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain, null for public zones",
          "length": 255,
          "name": "domainid",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Allocation state of this Zone for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "length": 255,
          "name": "internaldns1",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if network is security group enabled, false otherwise",
          "length": 255,
          "name": "securitygroupenabled",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the second DNS for the Zone",
          "length": 255,
          "name": "dns2",
          "required": false,
          "type": "string"
        },
        {
          "description": "the second internal DNS for the Zone",
          "length": 255,
          "name": "internaldns2",
          "required": false,
          "type": "string"
        }
      ],
      "related": "listZones",
      "response": [
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "The maximum value the MTU can have on the VR's public interfaces",
          "name": "routerpublicinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "the name of the containing domain, null for public zones",
          "name": "domainname",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the UUID of the containing domain, null for public zones",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the second DNS for the Zone",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the network type of the zone; can be Basic or Advanced",
          "name": "networktype",
          "type": "string"
        },
        {
          "description": "the capacity of the Zone",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the display text of the zone",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "Zone Token",
          "name": "zonetoken",
          "type": "string"
        },
        {
          "description": "true if local storage offering enabled, false otherwise",
          "name": "localstorageenabled",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the second internal DNS for the Zone",
          "name": "internaldns2",
          "type": "string"
        },
        {},
        {
          "description": "the type of the zone - core or edge",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the Zone",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "The maximum value the MTU can have on the VR's private interfaces",
          "name": "routerprivateinterfacemaxmtu",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with zone.",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Zone name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the first internal DNS for the Zone",
          "name": "internaldns1",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the Zone",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the guest CIDR address for the Zone",
          "name": "guestcidraddress",
          "type": "string"
        },
        {
          "description": "Zone id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Network domain name for the networks in the zone",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the first DNS for the Zone",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "Allow end users to specify VR MTU",
          "name": "allowuserspecifyvrmtu",
          "type": "boolean"
        },
        {
          "description": "Zone description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "securitygroupsenabled",
          "type": "boolean"
        },
        {
          "description": "the dhcp Provider for the Zone",
          "name": "dhcpprovider",
          "type": "string"
        }
      ]
    },
    {
      "description": "disable a Cisco Nexus VSM device",
      "isasync": true,
      "name": "disableCiscoNexusVSM",
      "params": [
        {
          "description": "Id of the Cisco Nexus 1000v VSM device to be deleted",
          "length": 255,
          "name": "id",
          "related": "listCiscoNexusVSMs,disableCiscoNexusVSM",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listCiscoNexusVSMs",
      "response": [
        {
          "description": "The mode of the VSM (standalone/HA)",
          "name": "vsmconfigmode",
          "type": "string"
        },
        {
          "description": "The Config State (Primary/Standby) of the VSM",
          "name": "vsmconfigstate",
          "type": "string"
        },
        {
          "description": "packet vlan id of the VSM",
          "name": "vsmpktvlanid",
          "type": "int"
        },
        {
          "description": "device state",
          "name": "vsmdevicestate",
          "type": "string"
        },
        {
          "description": "management vlan id of the VSM",
          "name": "vsmmgmtvlanid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "device id of the Cisco N1KV VSM device",
          "name": "vsmdeviceid",
          "type": "string"
        },
        {
          "description": "The Device State (Enabled/Disabled) of the VSM",
          "name": "vsmdevicestate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "The VSM is a switch supervisor. This is the VSM's switch domain id",
          "name": "vsmdomainid",
          "type": "string"
        },
        {
          "description": "control vlan id of the VSM",
          "name": "vsmctrlvlanid",
          "type": "int"
        },
        {},
        {
          "description": "storage vlan id of the VSM",
          "name": "vsmstoragevlanid",
          "type": "int"
        },
        {
          "description": "the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "vsmdevicename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a Storage network IP range.",
      "isasync": true,
      "name": "createStorageNetworkIpRange",
      "params": [
        {
          "description": "the gateway for storage network",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ending IP address",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask for storage network",
          "length": 255,
          "name": "netmask",
          "required": true,
          "type": "string"
        },
        {
          "description": "Optional. The vlan the ip range sits on, default to Null when it is not specified which means your network is not on any Vlan. This is mainly for Vmware as other hypervisors can directly retrieve bridge from physical network traffic type table",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "integer"
        },
        {
          "description": "UUID of pod where the ip range belongs to",
          "length": 255,
          "name": "podid",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the beginning IP address",
          "length": 255,
          "name": "startip",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Zone uuid of the storage network IP range",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the uuid of storage network IP range.",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the ID or VID of the VLAN.",
          "name": "vlan",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the start ip of the storage network IP range",
          "name": "startip",
          "type": "string"
        },
        {
          "description": "the Pod uuid for the storage network IP range",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the netmask of the storage network IP range",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the end ip of the storage network IP range",
          "name": "endip",
          "type": "string"
        },
        {
          "description": "the network uuid of storage network IP range",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the gateway of the storage network IP range",
          "name": "gateway",
          "type": "string"
        },
        {},
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists all children domains belonging to a specified domain",
      "isasync": false,
      "name": "listDomainChildren",
      "params": [
        {
          "description": "list children domain by parent domain ID.",
          "length": 255,
          "name": "id",
          "related": "listDomainChildren,listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list children domains by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "to return the entire tree, use the value \"true\". To return the first level children, use the value \"false\".",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "flag to display the resource icon for domains",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "listDomains",
      "response": [
        {
          "description": "the domain ID of the parent domain",
          "name": "parentdomainid",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by domain",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {},
        {
          "description": "the total number of virtual machines that can be deployed by this domain",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this domain",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of networks the domain can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by domain",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this domain",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this domain",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by domain",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this domain",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this domain",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this domain to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the path of the domain",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the domain name of the parent domain",
          "name": "parentdomainname",
          "type": "string"
        },
        {
          "description": "whether the domain has one or more sub-domains",
          "name": "haschild",
          "type": "boolean"
        },
        {
          "description": "the total number of virtual machines available for this domain to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the level of the domain",
          "name": "level",
          "type": "integer"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by domain",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of virtual machines deployed by this domain",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total memory (in MB) available to be created for this domain",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the ID of the domain",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this domain",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this domain",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this domain",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the total number of templates available to be created by this domain",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this domain",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the domain can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the state of the domain",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total volume available for this domain",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of projects available for administration by this domain",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "details for the domain",
          "name": "domaindetails",
          "type": "map"
        },
        {
          "description": "the name of the domain",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the domain can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total number of public ip addresses this domain can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the domain can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the date when this domain was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of cpu cores available to be created for this domain",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the domain can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this domain",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this domain",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by domain",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs owned by domain",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of projects the domain can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of snapshots which can be stored by this domain",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the domain can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this domain",
          "name": "networkavailable",
          "type": "string"
        }
      ]
    },
    {
      "description": "Returns an encrypted password for the VM",
      "isasync": false,
      "name": "getVMPassword",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines,importUnmanagedInstance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "The base64 encoded encrypted password of the VM",
          "name": "encryptedpassword",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Assign load balancer rule or list of load balancer rules to a global load balancer rules.",
      "isasync": true,
      "name": "assignToGlobalLoadBalancerRule",
      "params": [
        {
          "description": "Map of LB rule id's and corresponding weights (between 1-100) in the GSLB rule, if not specified weight of a LB rule is defaulted to 1. Specified as 'gslblbruleweightsmap[0].loadbalancerid=UUID&gslblbruleweightsmap[0].weight=10'",
          "length": 255,
          "name": "gslblbruleweightsmap",
          "required": false,
          "type": "map"
        },
        {
          "description": "the list load balancer rules that will be assigned to global load balancer rule",
          "length": 255,
          "name": "loadbalancerrulelist",
          "related": "",
          "required": true,
          "type": "list"
        },
        {
          "description": "the ID of the global load balancer rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Configures an ovs element.",
      "isasync": true,
      "name": "configureOvsElement",
      "params": [
        {
          "description": "the ID of the ovs provider",
          "length": 255,
          "name": "id",
          "related": "configureOvsElement",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Enabled/Disabled the service provider",
          "length": 255,
          "name": "enabled",
          "required": true,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the physical network service provider id of the provider",
          "name": "nspid",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the id of the ovs",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain associated with the provider",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "Enabled/Disabled the service provider",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the account associated with the provider",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the provider",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds S3 Image Store",
      "isasync": false,
      "name": "addImageStoreS3",
      "params": [
        {
          "description": "Signer Algorithm to use, either S3SignerType or AWSS3V4SignerType",
          "length": 255,
          "name": "s3signer",
          "required": false,
          "type": "string"
        },
        {
          "description": "Socket timeout (milliseconds)",
          "length": 255,
          "name": "sockettimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Use HTTPS instead of HTTP",
          "length": 255,
          "name": "usehttps",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Connection timeout (milliseconds)",
          "length": 255,
          "name": "connectiontimeout",
          "required": false,
          "type": "integer"
        },
        {
          "description": "S3 endpoint",
          "length": 255,
          "name": "endpoint",
          "required": true,
          "type": "string"
        },
        {
          "description": "Name of the storage bucket",
          "length": 255,
          "name": "bucket",
          "required": true,
          "type": "string"
        },
        {
          "description": "Maximum number of times to retry on error",
          "length": 255,
          "name": "maxerrorretry",
          "required": false,
          "type": "integer"
        },
        {
          "description": "S3 secret key",
          "length": 255,
          "name": "secretkey",
          "required": true,
          "type": "string"
        },
        {
          "description": "S3 access key",
          "length": 255,
          "name": "accesskey",
          "required": true,
          "type": "string"
        },
        {
          "description": "Connection TTL (milliseconds)",
          "length": 255,
          "name": "connectionttl",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Whether TCP keep-alive is used",
          "length": 255,
          "name": "usetcpkeepalive",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "listImageStores",
      "response": [
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        }
      ],
      "since": "4.7.0"
    },
    {
      "description": "Upload a certificate for HTTPS direct template download on KVM hosts",
      "isasync": false,
      "name": "uploadTemplateDirectDownloadCertificate",
      "params": [
        {
          "description": "Hypervisor type",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "(optional) the host ID to upload certificate",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "SSL certificate",
          "length": 65535,
          "name": "certificate",
          "required": true,
          "type": "string"
        },
        {
          "description": "Zone to upload certificate",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Name for the uploaded certificate",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the direct download certificate issuer",
          "name": "validity",
          "type": "string"
        },
        {},
        {
          "description": "the direct download certificate subject",
          "name": "subject",
          "type": "string"
        },
        {
          "description": "the direct download certificate id",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the direct download certificate issuer",
          "name": "issuer",
          "type": "string"
        },
        {
          "description": "the zone id where the certificate is uploaded",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the zone name where the certificate is uploaded",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the direct download certificate serial num",
          "name": "serialnum",
          "type": "string"
        },
        {
          "description": "the direct download certificate version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the hosts where the certificate is uploaded to",
          "name": "hostsmap",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the direct download certificate alias",
          "name": "alias",
          "type": "string"
        },
        {
          "description": "the hypervisor of the hosts where the certificate is uploaded",
          "name": "hypervisor",
          "type": "string"
        }
      ],
      "since": "4.11.0"
    },
    {
      "description": "Import unmanaged virtual machine from a given cluster.",
      "isasync": true,
      "name": "importUnmanagedInstance",
      "params": [
        {
          "description": "used to specify the custom parameters.",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "VM nic to ip address mapping using keys nic, ip4Address",
          "length": 255,
          "name": "nicipaddresslist",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the template for the virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "VM nic to network id mapping using keys nic and network",
          "length": 255,
          "name": "nicnetworklist",
          "required": false,
          "type": "map"
        },
        {
          "description": "import instance to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "vm and its volumes are allowed to migrate to different host/pool when offerings passed are incompatible with current host/pool",
          "length": 255,
          "name": "migrateallowed",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "VM is imported despite some of its NIC's MAC addresses are already present",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "datadisk template to disk-offering mapping using keys disk and diskOffering",
          "length": 255,
          "name": "datadiskofferinglist",
          "required": false,
          "type": "map"
        },
        {
          "description": "the host name of the instance",
          "length": 255,
          "name": "hostname",
          "required": false,
          "type": "string"
        },
        {
          "description": "import instance for the project",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the virtual machine. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the display name of the instance",
          "length": 255,
          "name": "displayname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the hypervisor name of the instance",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {},
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {},
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        }
      ],
      "since": "4.14.0"
    },
    {
      "description": "Lists System VM stats",
      "isasync": false,
      "name": "listSystemVmsUsageHistory",
      "params": [
        {
          "description": "start date to filter stats.Use format \"yyyy-MM-dd hh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the system VM.",
          "length": 255,
          "name": "id",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "end date to filter stats.Use format \"yyyy-MM-dd hh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the system VMs, mutually exclusive with id.",
          "length": 255,
          "name": "ids",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": false,
          "type": "list"
        },
        {
          "description": "name of the system VMs (a substring match is made against the parameter value returning the data for all matching VMs).",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the list of VM stats",
          "name": "stats",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Deletes a IPv6 firewall rule",
      "isasync": true,
      "name": "deleteIpv6FirewallRule",
      "params": [
        {
          "description": "the ID of the IPv6 firewall rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {}
      ]
    },
    {
      "description": "Creates a physical network",
      "isasync": true,
      "name": "createPhysicalNetwork",
      "params": [
        {
          "description": "Tag the physical network",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the speed for the physical network[1G/10G]",
          "length": 255,
          "name": "networkspeed",
          "required": false,
          "type": "string"
        },
        {
          "description": "domain ID of the account owning a physical network",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the broadcast domain range for the physical network[Pod or Zone]. In Acton release it can be Zone only in Advance zone, and Pod in Basic",
          "length": 255,
          "name": "broadcastdomainrange",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the physical network",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the VLAN for the physical network",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the physical network",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the isolation method for the physical network[VLAN/L3/GRE]",
          "length": 255,
          "name": "isolationmethods",
          "required": false,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "state of the physical network",
          "name": "state",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "zone name of the physical network",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the speed of the physical network",
          "name": "networkspeed",
          "type": "string"
        },
        {
          "description": "comma separated tag",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "zone id of the physical network",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the domain id of the physical network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "isolation methods",
          "name": "isolationmethods",
          "type": "string"
        },
        {
          "description": "Broadcast domain range of the physical network",
          "name": "broadcastdomainrange",
          "type": "string"
        },
        {
          "description": "the vlan of the physical network",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the uuid of the physical network",
          "name": "id",
          "type": "string"
        },
        {
          "description": "name of the physical network",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Lists autoscale vm groups.",
      "isasync": false,
      "name": "listAutoScaleVmGroups",
      "params": [
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the profile",
          "length": 255,
          "name": "vmprofileid",
          "related": "createAutoScaleVmProfile",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the loadbalancer",
          "length": 255,
          "name": "lbruleid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the autoscale vm group",
          "length": 255,
          "name": "id",
          "related": "listAutoScaleVmGroups",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the autoscale vmgroup",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the policy",
          "length": 255,
          "name": "policyid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the autoscale vm group ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the autoscale vm group ",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the account owning the vm group",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the maximum number of members in the vmgroup, The number of instances in the vm group will be equal to or less than this number.",
          "name": "maxmembers",
          "type": "int"
        },
        {
          "description": "the name of the guest network the lb rule belongs to",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "associatednetworkid",
          "type": "string"
        },
        {
          "description": "the project id of the vm group",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the minimum number of members in the vmgroup, the number of instances in the vm group will be equal to or more than this number.",
          "name": "minmembers",
          "type": "int"
        },
        {
          "description": "the domain name of the vm group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the autoscale profile that contains information about the vms in the vm group.",
          "name": "vmprofileid",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {
          "description": "list of scaleup autoscale policies",
          "name": "scaleuppolicies",
          "type": "list"
        },
        {
          "description": "list of scaledown autoscale policies",
          "name": "scaledownpolicies",
          "type": "list"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the number of available virtual machines (in Running, Starting, Stopping or Migrating state) in the vmgroup",
          "name": "availablevirtualmachinecount",
          "type": "int"
        },
        {
          "description": "is group for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the lb provider of the guest network the lb rule belongs to",
          "name": "lbprovider",
          "type": "string"
        },
        {
          "description": "the domain ID of the vm group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the frequency at which the conditions have to be evaluated",
          "name": "interval",
          "type": "int"
        },
        {
          "description": "the date when this vm group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the vm group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the current state of the AutoScale Vm Group",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a firewall rule for a given IP address",
      "isasync": true,
      "name": "createFirewallRule",
      "params": [
        {
          "description": "type of firewallrule: system/user",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        },
        {
          "description": "the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.",
          "length": 255,
          "name": "protocol",
          "required": true,
          "type": "string"
        },
        {
          "description": "the IP address id of the port forwarding rule",
          "length": 255,
          "name": "ipaddressid",
          "related": "associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "error code for this icmp message",
          "length": 255,
          "name": "icmpcode",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the CIDR list to forward traffic from. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": false,
          "type": "list"
        },
        {
          "description": "type of the ICMP message being sent",
          "length": 255,
          "name": "icmptype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ending port of firewall rule",
          "length": 255,
          "name": "endport",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the starting port of firewall rule",
          "length": 255,
          "name": "startport",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "updateEgressFirewallRule",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {},
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the traffic type for the firewall rule",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {},
        {
          "description": "the cidr list to forward traffic to. Multiple entries are separated by a single comma character (,).",
          "name": "destcidrlist",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Creates a disk volume from a disk offering. This disk volume must still be attached to a virtual machine to make use of it.",
      "isasync": true,
      "name": "createVolume",
      "params": [
        {
          "description": "an optional field, whether to display the volume to the end user or not.",
          "length": 255,
          "name": "displayvolume",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the disk offering. Either diskOfferingId or snapshotId must be passed in.",
          "length": 255,
          "name": "diskofferingid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the snapshot ID for the disk volume. Either diskOfferingId or snapshotId must be passed in.",
          "length": 255,
          "name": "snapshotid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the project associated with the volume. Mutually exclusive with account parameter",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine; to be used with snapshot Id, VM to which the volume gets attached after creation",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account associated with the disk volume. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the disk offering. If used with the account parameter returns the disk volume associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Arbitrary volume size",
          "length": 255,
          "name": "size",
          "required": false,
          "type": "long"
        },
        {
          "description": "the ID of the availability zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "min iops",
          "length": 255,
          "name": "miniops",
          "required": false,
          "type": "long"
        },
        {
          "description": "the name of the disk volume",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "max iops",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "type": "long"
        }
      ],
      "related": "attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
      "response": [
        {
          "description": "bytes write rate of the disk volume",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "true if the volume is extractable, false otherwise",
          "name": "isextractable",
          "type": "boolean"
        },
        {
          "description": "the state of the disk volume",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the bytes allocated",
          "name": "physicalsize",
          "type": "long"
        },
        {
          "description": "the disk utilization",
          "name": "utilization",
          "type": "string"
        },
        {
          "description": "the bytes actually consumed on disk",
          "name": "virtualsize",
          "type": "long"
        },
        {
          "description": "volume uuid that is given by virtualisation provider (only for VMware)",
          "name": "externaluuid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "cluster name where the volume is allocated",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the status of the volume",
          "name": "status",
          "type": "string"
        },
        {
          "description": "the chain info of the volume",
          "name": "chaininfo",
          "type": "string"
        },
        {
          "description": "name of the virtual machine",
          "name": "vmname",
          "type": "string"
        },
        {
          "description": "the date the disk volume was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "cluster id of the volume",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "id of the primary storage hosting the disk volume; returned to admin user only",
          "name": "storageid",
          "type": "string"
        },
        {
          "description": "type of the disk volume (ROOT or DATADISK)",
          "name": "type",
          "type": "string"
        },
        {
          "description": "name of the primary storage hosting the disk volume",
          "name": "storage",
          "type": "string"
        },
        {
          "description": "type of the virtual machine",
          "name": "vmtype",
          "type": "string"
        },
        {
          "description": "name of the service offering for root disk",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "ID of the service offering for root disk",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "IO requests read rate of the disk volume per the disk offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "ID of the snapshot from which this volume was created",
          "name": "snapshotid",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "name of the disk volume",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ID of the device on user vm the volume is attahed to. This tag is not returned when the volume is detached.",
          "name": "deviceid",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "min iops of the disk volume",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the display text of the service offering for root disk",
          "name": "serviceofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "ID of the availability zone",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "shared or local storage",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the vm",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "need quiesce vm or not when taking snapshot",
          "name": "quiescevm",
          "type": "boolean"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "id of the virtual machine",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "name of the availability zone",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "an optional field whether to the display the volume to the end user or not.",
          "name": "displayvolume",
          "type": "boolean"
        },
        {
          "description": "pod name of the volume",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the boolean state of whether the volume is destroyed or not",
          "name": "destroyed",
          "type": "boolean"
        },
        {
          "description": "pod id of the volume",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "true if storage snapshot is supported for the volume, false otherwise",
          "name": "supportsstoragesnapshot",
          "type": "boolean"
        },
        {
          "description": "state of the virtual machine",
          "name": "vmstate",
          "type": "string"
        },
        {
          "description": "Hypervisor the volume belongs to",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the date the volume was attached to a VM instance",
          "name": "attached",
          "type": "date"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the path of the volume",
          "name": "path",
          "type": "string"
        },
        {},
        {
          "description": "provisioning type used to create volumes.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "bytes read rate of the disk volume",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "size of the disk volume",
          "name": "size",
          "type": "long"
        },
        {
          "description": "ID of the disk volume",
          "name": "id",
          "type": "string"
        },
        {
          "description": "max iops of the disk volume",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "ID of the disk offering",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "IO requests write rate of the disk volume per the disk offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "display name of the virtual machine",
          "name": "vmdisplayname",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the vm",
          "name": "diskioread",
          "type": "long"
        }
      ]
    },
    {
      "description": "List virtual machine snapshot by conditions",
      "isasync": false,
      "name": "listVMSnapshot",
      "params": [
        {
          "description": "the ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "The ID of the VM snapshot",
          "length": 255,
          "name": "vmsnapshotid",
          "related": "listVMSnapshot,createVMSnapshot",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "state of the virtual machine snapshot",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists snapshot by snapshot name or display name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the IDs of the vm snapshots, mutually exclusive with vmsnapshotid",
          "length": 255,
          "name": "vmsnapshotids",
          "related": "listVMSnapshot,createVMSnapshot",
          "required": false,
          "since": "4.9",
          "type": "list"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createVMSnapshot",
      "response": [
        {
          "description": "the name of the vm snapshot",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the create date of the vm snapshot",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the parent displayName of the vm snapshot",
          "name": "parentName",
          "type": "string"
        },
        {
          "description": "the vm name of the vm snapshot",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the description of the vm snapshot",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the state of the vm snapshot",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the Zone name of the vm snapshot",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the ID of the vm snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the parent ID of the vm snapshot",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "VM Snapshot type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the display name of the vm snapshot",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the Zone ID of the vm snapshot",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the vm ID of the vm snapshot",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the type of hypervisor on which snapshot is stored",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "indicates if this is current snapshot",
          "name": "current",
          "type": "boolean"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Updates a Pod.",
      "isasync": false,
      "name": "updatePod",
      "params": [
        {
          "description": "the starting IP address for the Pod",
          "length": 255,
          "name": "startip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the Pod",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway for the Pod",
          "length": 255,
          "name": "gateway",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "length": 255,
          "name": "id",
          "related": "updatePod,createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ending IP address for the Pod",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "the netmask of the Pod",
          "length": 255,
          "name": "netmask",
          "required": false,
          "type": "string"
        }
      ],
      "related": "createManagementNetworkIpRange",
      "response": [
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        },
        {},
        {
          "description": "indicates Vlan ID for the range. This parameter is deprecated, please use 'vlanid' from ipranges parameter.",
          "name": "vlanid",
          "type": "list"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "indicates if range is dedicated for CPVM and SSVM. This parameter is deprecated, please use 'forsystemvms' from ipranges parameter.",
          "name": "forsystemvms",
          "type": "list"
        },
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the ending IP for the Pod. This parameter is deprecated, please use 'endip' from ipranges parameter.",
          "name": "endip",
          "type": "list"
        },
        {},
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the starting IP for the Pod. This parameter is deprecated, please use 'startip' from ipranges parameter.",
          "name": "startip",
          "type": "list"
        },
        {
          "description": "the IP ranges for the Pod",
          "name": "ipranges",
          "response": [
            {
              "description": "indicates if range is dedicated for CPVM and SSVM",
              "name": "forsystemvms",
              "type": "string"
            },
            {
              "description": "the starting IP for the range",
              "name": "startip",
              "type": "string"
            },
            {
              "description": "the ending IP for the range",
              "name": "endip",
              "type": "string"
            },
            {
              "description": "the CIDR for the range",
              "name": "cidr",
              "type": "string"
            },
            {
              "description": "the gateway for the range",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "indicates Vlan ID for the range",
              "name": "vlanid",
              "type": "string"
            }
          ],
          "type": "list"
        }
      ]
    },
    {
      "description": "Move an ACL rule to a position bettwen two other ACL rules of the same ACL network list",
      "isasync": true,
      "name": "moveNetworkAclItem",
      "params": [
        {
          "description": "The ID of the first rule that is right before the new position where the rule being moved is going to be placed. This value can be 'NULL' if the rule is being moved to the first position of the network ACL list.",
          "length": 255,
          "name": "previousaclruleid",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "The ID of the rule that is right after the new position where the rule being moved is going to be placed. This value can be 'NULL' if the rule is being moved to the last position of the network ACL list.",
          "length": 255,
          "name": "nextaclruleid",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the network ACL rule that is being moved to a new position.",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "string"
        },
        {
          "description": "Md5 hash used to check the consistency of the ACL rule list before applying the ACL rule move. This check is useful to manage concurrency problems that may happen when multiple users are editing the same ACL rule listing. The parameter is not required. Therefore, if the user does not send it, they assume the risk of moving ACL rules without checking the consistency of the access control list before executing the move. We use MD5 hash function on a String that is composed of all UUIDs of the ACL rules in concatenated in their respective order (order defined via 'number' field).",
          "length": 255,
          "name": "aclconsistencyhash",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ending port of ACL's port range",
          "name": "endport",
          "type": "string"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the traffic type for the ACL",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the protocol of the ACL",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "Action of ACL Item. Allow/Deny",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with the network ACLs",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the ID of the ACL this item belongs to",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "an explanation on why this ACL rule is being applied",
          "name": "reason",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Number of the ACL Item",
          "name": "number",
          "type": "integer"
        },
        {},
        {
          "description": "the starting port of ACL's port range",
          "name": "startport",
          "type": "string"
        },
        {},
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the ACL this item belongs to",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the ID of the ACL Item",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Attaches an ISO to a virtual machine.",
      "isasync": true,
      "name": "attachIso",
      "params": [
        {
          "description": "If true, ejects existing ISO before attaching on VMware. Default: false",
          "length": 255,
          "name": "forced",
          "required": false,
          "since": "4.15.1",
          "type": "boolean"
        },
        {
          "description": "the ID of the ISO file",
          "length": 255,
          "name": "id",
          "related": "listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine",
          "length": 255,
          "name": "virtualmachineid",
          "related": "attachIso,destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {},
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {},
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "Disassociates an IP address from the account.",
      "isasync": true,
      "name": "disassociateIpAddress",
      "params": [
        {
          "description": "the ID of the public IP address to disassociate",
          "length": 255,
          "name": "id",
          "related": "associateIpAddress,listPublicIpAddresses",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        }
      ]
    },
    {
      "description": "list baremetal dhcp servers",
      "isasync": false,
      "name": "listBaremetalDhcp",
      "params": [
        {
          "description": "Type of DHCP device",
          "length": 255,
          "name": "dhcpservertype",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "DHCP server device ID",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "device id of ",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "url",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "dhcpservertype",
          "type": "string"
        },
        {
          "description": "the physical network to which this external dhcp device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Puts storage pool into maintenance state",
      "isasync": true,
      "name": "enableStorageMaintenance",
      "params": [
        {
          "description": "Primary storage ID",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance,enableStorageMaintenance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "cancelStorageMaintenance",
      "response": [
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {},
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        }
      ]
    },
    {
      "description": "(Deprecated , use deleteLdapConfiguration) Remove the LDAP context for this site.",
      "isasync": false,
      "name": "ldapRemove",
      "params": [],
      "related": "",
      "response": [
        {
          "description": "Specify the LDAP port if required, default is 389",
          "name": "port",
          "type": "string"
        },
        {
          "description": "Check Use SSL if the external LDAP server is configured for LDAP over SSL",
          "name": "ssl",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "Specify the distinguished name of a user with the search permission on the directory",
          "name": "binddn",
          "type": "string"
        },
        {
          "description": "You specify a query filter here, which narrows down the users, who can be part of this domain",
          "name": "queryfilter",
          "type": "string"
        },
        {
          "description": "Hostname or ip address of the ldap server eg: my.ldap.com",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "The search base defines the starting point for the search in the directory tree Example:  dc=cloud,dc=com",
          "name": "searchbase",
          "type": "string"
        },
        {},
        {
          "description": "DN password",
          "name": "bindpass",
          "type": "string"
        }
      ],
      "since": "3.0.1"
    },
    {
      "description": "Creates a user for an account that already exists",
      "isasync": false,
      "name": "createUser",
      "params": [
        {
          "description": "firstname",
          "length": 255,
          "name": "firstname",
          "required": true,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified domain. Has to be accompanied with the account parameter",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "email",
          "length": 255,
          "name": "email",
          "required": true,
          "type": "string"
        },
        {
          "description": "Clear text password (Default hashed to SHA256SALT). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "Unique username.",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Specifies a timezone for this command. For more information on the timezone parameter, see Time Zone Format.",
          "length": 255,
          "name": "timezone",
          "required": false,
          "type": "string"
        },
        {
          "description": "lastname",
          "length": 255,
          "name": "lastname",
          "required": true,
          "type": "string"
        },
        {
          "description": "User UUID, required for adding account from external provisioning system",
          "length": 255,
          "name": "userid",
          "required": false,
          "type": "string"
        },
        {
          "description": "Creates the user under the specified account. If no account is specified, the username will be used as the account name.",
          "length": 255,
          "name": "account",
          "required": true,
          "type": "string"
        }
      ],
      "related": "getUser",
      "response": [
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "lists all available apis on the server, provided by the Api Discovery plugin",
      "isasync": false,
      "name": "listApis",
      "params": [
        {
          "description": "API name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the list params the api accepts",
          "name": "params",
          "response": [
            {
              "description": "length of the parameter",
              "name": "length",
              "type": "int"
            },
            {
              "description": "true if this parameter is required for the api request",
              "name": "required",
              "type": "boolean"
            },
            {
              "description": "version of CloudStack the api was introduced in",
              "name": "since",
              "type": "string"
            },
            {
              "description": "comma separated related apis to get the parameter",
              "name": "related",
              "type": "string"
            },
            {
              "description": "parameter type",
              "name": "type",
              "type": "string"
            },
            {
              "description": "description of the api parameter",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the api parameter",
              "name": "name",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the api command",
          "name": "name",
          "type": "string"
        },
        {
          "description": "version of CloudStack the api was introduced in",
          "name": "since",
          "type": "string"
        },
        {
          "description": "response field type",
          "name": "type",
          "type": "string"
        },
        {},
        {
          "description": "description of the api",
          "name": "description",
          "type": "string"
        },
        {
          "description": "comma separated related apis",
          "name": "related",
          "type": "string"
        },
        {
          "description": "api response fields",
          "name": "response",
          "response": [
            {
              "description": "the name of the api response field",
              "name": "name",
              "type": "string"
            },
            {
              "description": "response field type",
              "name": "type",
              "type": "string"
            },
            {
              "description": "api response fields",
              "name": "response",
              "type": "set"
            },
            {
              "description": "description of the api response field",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if api is asynchronous",
          "name": "isasync",
          "type": "boolean"
        }
      ],
      "since": "4.1.0"
    },
    {
      "description": "deletes baremetal rack configuration text",
      "isasync": true,
      "name": "deleteBaremetalRct",
      "params": [
        {
          "description": "RCT id",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {}
      ]
    },
    {
      "description": "Creates site to site vpn local gateway",
      "isasync": true,
      "name": "createVpnGateway",
      "params": [
        {
          "description": "public ip address id of the vpn gateway",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the public IP address",
          "name": "publicip",
          "type": "string"
        },
        {},
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the vpc name of this gateway",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "is vpn gateway for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the vpc id of this gateway",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        }
      ]
    },
    {
      "description": "Creates snapshot for a vm.",
      "isasync": true,
      "name": "createVMSnapshot",
      "params": [
        {
          "description": "The display name of the snapshot",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "The ID of the vm",
          "length": 255,
          "name": "virtualmachineid",
          "related": "destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "quiesce vm if true",
          "length": 255,
          "name": "quiescevm",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "snapshot memory if true",
          "length": 255,
          "name": "snapshotmemory",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The description of the snapshot",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the parent ID of the vm snapshot",
          "name": "parent",
          "type": "string"
        },
        {
          "description": "indicates if this is current snapshot",
          "name": "current",
          "type": "boolean"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "VM Snapshot type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the ID of the vm snapshot",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain associated with the disk volume",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the description of the vm snapshot",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the type of hypervisor on which snapshot is stored",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the account associated with the disk volume",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the vm snapshot",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the vm ID of the vm snapshot",
          "name": "virtualmachineid",
          "type": "string"
        },
        {
          "description": "the vm name of the vm snapshot",
          "name": "virtualmachinename",
          "type": "string"
        },
        {
          "description": "the state of the vm snapshot",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the parent displayName of the vm snapshot",
          "name": "parentName",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the disk volume",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the Zone ID of the vm snapshot",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Zone name of the vm snapshot",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the display name of the vm snapshot",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the create date of the vm snapshot",
          "name": "created",
          "type": "date"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Adds detail for the Resource.",
      "isasync": true,
      "name": "addResourceDetail",
      "params": [
        {
          "description": "pass false if you want this detail to be disabled for the regular user. True by default",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "type of the resource",
          "length": 255,
          "name": "resourcetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "Map of (key/value pairs)",
          "length": 255,
          "name": "details",
          "required": true,
          "type": "map"
        },
        {
          "description": "resource id to create the details for",
          "length": 255,
          "name": "resourceid",
          "required": true,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists vpn users",
      "isasync": false,
      "name": "listVpnUsers",
      "params": [
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username of the vpn user.",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "The uuid of the Vpn user",
          "length": 255,
          "name": "id",
          "related": "addVpnUser,listVpnUsers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "addVpnUser",
      "response": [
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the state of the Vpn User",
          "name": "state",
          "type": "string"
        },
        {},
        {
          "description": "the username of the vpn user",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the vpn userID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an internal load balancer",
      "isasync": true,
      "name": "deleteLoadBalancer",
      "params": [
        {
          "description": "the ID of the Load Balancer",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes an IP forwarding rule",
      "isasync": true,
      "name": "deleteIpForwardingRule",
      "params": [
        {
          "description": "the ID of the forwarding rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "Register a new userdata.",
      "isasync": false,
      "name": "registerUserData",
      "params": [
        {
          "description": "Name of the userdata",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional project for the userdata",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Userdata content",
          "length": 1048576,
          "name": "userdata",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the userdata. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional account for the userdata. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma separated list of variables declared in userdata content",
          "length": 255,
          "name": "params",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.18"
    },
    {
      "description": "Adds a Region",
      "isasync": false,
      "name": "addRegion",
      "params": [
        {
          "description": "Region service endpoint",
          "length": 255,
          "name": "endpoint",
          "required": true,
          "type": "string"
        },
        {
          "description": "Id of the Region",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "integer"
        },
        {
          "description": "Name of the region",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if security groups support is enabled, false otherwise",
          "name": "portableipserviceenabled",
          "type": "boolean"
        },
        {},
        {
          "description": "the name of the region",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the region",
          "name": "id",
          "type": "integer"
        },
        {
          "description": "true if GSLB service is enabled in the region, false otherwise",
          "name": "gslbserviceenabled",
          "type": "boolean"
        },
        {},
        {
          "description": "the end point of the region",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists Tungsten-Fabric tags",
      "isasync": false,
      "name": "listTungstenFabricTagType",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the uuid of Tungsten-Fabric tag type",
          "length": 255,
          "name": "tagtypeuuid",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Tungsten-Fabric provider zone name",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "Tungsten-Fabric tag type uuid",
          "name": "uuid",
          "type": "string"
        },
        {
          "description": "Tungsten-Fabric tag type name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Tungsten-Fabric provider zone id",
          "name": "zoneid",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Generates usage records. This will generate records only if there any records to be generated, i.e if the scheduled usage job was not run or failed",
      "isasync": false,
      "name": "generateUsageRecords",
      "params": [
        {
          "description": "Start date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-01.",
          "length": 255,
          "name": "startdate",
          "required": true,
          "type": "date"
        },
        {
          "description": "List events for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "End date range for usage record query. Use yyyy-MM-dd as the date format, e.g. startDate=2009-06-03.",
          "length": 255,
          "name": "enddate",
          "required": true,
          "type": "date"
        }
      ],
      "response": [
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a role permission order",
      "isasync": false,
      "name": "updateRolePermission",
      "params": [
        {
          "description": "Rule permission, can be: allow or deny",
          "length": 255,
          "name": "permission",
          "required": false,
          "since": "4.11",
          "type": "string"
        },
        {
          "description": "ID of the role",
          "length": 255,
          "name": "roleid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The parent role permission uuid, use 0 to move this rule at the top of the list",
          "length": 255,
          "name": "ruleorder",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "Role permission rule id",
          "length": 255,
          "name": "ruleid",
          "related": "",
          "required": false,
          "since": "4.11",
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "List registered keypairs",
      "isasync": false,
      "name": "listSSHKeyPairs",
      "params": [
        {
          "description": "A key pair name to look for",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "activateProject",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the ssh keypair",
          "length": 255,
          "name": "id",
          "related": "listSSHKeyPairs",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "A public key fingerprint to look for",
          "length": 255,
          "name": "fingerprint",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "ID of the ssh keypair",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Name of the keypair",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the owner of the keypair",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Fingerprint of the public key",
          "name": "fingerprint",
          "type": "string"
        },
        {},
        {
          "description": "the domain id of the keypair owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain name of the keypair owner",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the keypair owner",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id of the keypair owner",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists accounts and provides detailed account information for listed accounts",
      "isasync": false,
      "name": "listAccounts",
      "params": [
        {
          "description": "comma separated list of account details requested, value can be a list of [ all, resource, min]",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "list"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list account by account name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "list accounts by account type. Valid account types are 1 (admin), 2 (domain-admin), and 0 (user).",
          "length": 255,
          "name": "accounttype",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list accounts by state. Valid states are enabled, disabled, and locked.",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        },
        {
          "description": "list accounts by cleanuprequired attribute (values are true or false)",
          "length": 255,
          "name": "iscleanuprequired",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list account by account ID",
          "length": 255,
          "name": "id",
          "related": "enableAccount,listAccounts,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "flag to display the resource icon for accounts",
          "length": 255,
          "name": "showicon",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "enableAccount,listAccounts",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {},
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        }
      ]
    },
    {
      "description": "Cancels maintenance for primary storage",
      "isasync": true,
      "name": "cancelStorageMaintenance",
      "params": [
        {
          "description": "the primary storage ID",
          "length": 255,
          "name": "id",
          "related": "cancelStorageMaintenance",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the IP address of the storage pool",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the scope of the storage pool",
          "name": "scope",
          "type": "string"
        },
        {
          "description": "true if this pool is suitable to migrate a volume, false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the hypervisor type of the storage pool",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the state of the storage pool",
          "name": "state",
          "type": "storagepoolstatus"
        },
        {
          "description": "the storage pool type",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the storage pool capabilities",
          "name": "storagecapabilities",
          "type": "map"
        },
        {
          "description": "Storage provider for this pool",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the date and time the storage pool was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the ID of the storage pool",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the storage pool path",
          "name": "path",
          "type": "string"
        },
        {
          "description": "total min IOPS currently in use by volumes",
          "name": "allocatediops",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "IOPS CloudStack can provision from this storage pool",
          "name": "capacityiops",
          "type": "long"
        },
        {
          "description": "the overprovisionfactor for the storage pool",
          "name": "overprovisionfactor",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the total disk size of the storage pool",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the name of the cluster for the storage pool",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the ID of the cluster for the storage pool",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the Pod ID of the storage pool",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the Zone name of the storage pool",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod name of the storage pool",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the tags for the storage pool",
          "name": "tags",
          "type": "string"
        },
        {
          "description": "the name of the storage pool",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone ID of the storage pool",
          "name": "zoneid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroys a router.",
      "isasync": true,
      "name": "destroyRouter",
      "params": [
        {
          "description": "the ID of the router",
          "length": 255,
          "name": "id",
          "related": "destroyRouter",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Zone name for the router",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the second DNS for the router",
          "name": "dns2",
          "type": "string"
        },
        {
          "description": "the public IP address for the router",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the link local MAC address for the router",
          "name": "linklocalmacaddress",
          "type": "string"
        },
        {
          "description": "the template ID for the router",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the domain associated with the router",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "Last executed health check result for the router",
          "name": "healthcheckresults",
          "response": [
            {
              "description": "the name of the health check on the router",
              "name": "checkname",
              "type": "string"
            },
            {
              "description": "the type of the health check - basic or advanced",
              "name": "checktype",
              "type": "string"
            },
            {
              "description": "the date this VPC was created",
              "name": "lastupdated",
              "type": "date"
            },
            {
              "description": "detailed response generated on running health check",
              "name": "details",
              "type": "string"
            },
            {
              "description": "result of the health check",
              "name": "success",
              "type": "boolean"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Pod ID for the router",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding public network",
          "name": "publicnetworkid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the project name of the address",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account associated with the router",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding guest network",
          "name": "guestnetworkid",
          "type": "string"
        },
        {
          "description": "if this router is an redundant virtual router",
          "name": "isredundantrouter",
          "type": "boolean"
        },
        {
          "description": "the public MAC address for the router",
          "name": "publicmacaddress",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the corresponding guest network",
          "name": "guestnetworkname",
          "type": "string"
        },
        {
          "description": "the ID of the corresponding link local network",
          "name": "linklocalnetworkid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the date and time the router was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the gateway for the router",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the hostname for the router",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "true if the router template requires upgrader",
          "name": "requiresupgrade",
          "type": "boolean"
        },
        {},
        {
          "description": "the public netmask for the router",
          "name": "publicnetmask",
          "type": "string"
        },
        {
          "description": "the project id of the ipaddress",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the state of the router",
          "name": "state",
          "type": "state"
        },
        {
          "description": "the guest netmask for the router",
          "name": "guestnetmask",
          "type": "string"
        },
        {
          "description": "the domain ID associated with the router",
          "name": "domainid",
          "type": "string"
        },
        {},
        {
          "description": "the host ID for the router",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the Pod name for the router",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the control state of the host for the router",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the guest MAC address for the router",
          "name": "guestmacaddress",
          "type": "string"
        },
        {
          "description": "the guest IP address for the router",
          "name": "guestipaddress",
          "type": "string"
        },
        {
          "description": "the Zone ID for the router",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "true if any health checks had failed",
          "name": "healthchecksfailed",
          "type": "boolean"
        },
        {
          "description": "role of the domain router",
          "name": "role",
          "type": "string"
        },
        {
          "description": "VPC the router belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "the first DNS for the router",
          "name": "dns1",
          "type": "string"
        },
        {
          "description": "the first IPv6 DNS for the router",
          "name": "ip6dns1",
          "type": "string"
        },
        {
          "description": "the version of template",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the network domain for the router",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "the template name for the router",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the version of the code / software in the router",
          "name": "softwareversion",
          "type": "string"
        },
        {
          "description": "the link local netmask for the router",
          "name": "linklocalnetmask",
          "type": "string"
        },
        {
          "description": "the name of VPC the router belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the link local IP address for the router",
          "name": "linklocalip",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the id of the router",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the second IPv6 DNS for the router",
          "name": "ip6dns2",
          "type": "string"
        },
        {
          "description": "the version of scripts",
          "name": "scriptsversion",
          "type": "string"
        },
        {
          "description": "the name of the router",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the list of nics associated with the router",
          "name": "nic",
          "response": [
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the state of redundant virtual router",
          "name": "redundantstate",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates the snapshot policy.",
      "isasync": true,
      "name": "updateSnapshotPolicy",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the snapshot policy to the end user or not.",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the ID of the snapshot policy",
          "length": 255,
          "name": "id",
          "related": "updateSnapshotPolicy",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the interval type of the snapshot policy",
          "name": "intervaltype",
          "type": "short"
        },
        {
          "description": "the time zone of the snapshot policy",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the disk volume",
          "name": "volumeid",
          "type": "string"
        },
        {
          "description": "the ID of the snapshot policy",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "is this policy for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "time the snapshot is scheduled to be taken.",
          "name": "schedule",
          "type": "string"
        },
        {
          "description": "maximum number of snapshots retained",
          "name": "maxsnaps",
          "type": "int"
        },
        {},
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            }
          ],
          "type": "set"
        }
      ]
    },
    {
      "description": "Retrieves the current status of asynchronous job.",
      "isasync": false,
      "name": "queryAsyncJobResult",
      "params": [
        {
          "description": "the ID of the asynchronous job",
          "length": 255,
          "name": "jobid",
          "related": "queryAsyncJobResult",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the result code for the job",
          "name": "jobresultcode",
          "type": "integer"
        },
        {},
        {
          "description": "the account that executed the async command",
          "name": "accountid",
          "type": "string"
        },
        {},
        {
          "description": "  the completed date of the job",
          "name": "completed",
          "type": "date"
        },
        {
          "description": "the unique ID of the instance/entity object related to the job",
          "name": "jobinstanceid",
          "type": "string"
        },
        {
          "description": "the user that executed the async command",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the instance/entity object related to the job",
          "name": "jobinstancetype",
          "type": "string"
        },
        {
          "description": "the progress information of the PENDING job",
          "name": "jobprocstatus",
          "type": "integer"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the result reason",
          "name": "jobresult",
          "type": "responseobject"
        },
        {
          "description": "the current job status-should be 0 for PENDING",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the async command executed",
          "name": "cmd",
          "type": "string"
        },
        {
          "description": "  the created date of the job",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the result type",
          "name": "jobresulttype",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a netscaler control center device",
      "isasync": true,
      "name": "registerNetscalerControlCenter",
      "params": [
        {
          "description": "Credentials to reach netscaler controlcenter device",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach netscaler controlcenter device",
          "length": 255,
          "name": "numretries",
          "required": true,
          "type": "integer"
        },
        {
          "description": "URL of the netscaler controlcenter appliance.",
          "length": 255,
          "name": "ipaddress",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach netscaler controlcenter  device",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        }
      ],
      "related": "addNetscalerLoadBalancer,listNetscalerLoadBalancers",
      "response": [
        {
          "description": "device capacity",
          "name": "lbdevicecapacity",
          "type": "long"
        },
        {},
        {
          "description": "device state",
          "name": "lbdevicestate",
          "type": "string"
        },
        {
          "description": "the private interface of the load balancer",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "the public interface of the load balancer",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "the physical network to which this netscaler device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the management IP address of the external load balancer",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device.",
          "name": "podids",
          "type": "list"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "public IP of the NetScaler representing GSLB site",
          "name": "gslbproviderpublicip",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if NetScaler device is provisioned to be a GSLB service provider",
          "name": "gslbprovider",
          "type": "boolean"
        },
        {
          "description": "private IP of the NetScaler representing GSLB site",
          "name": "gslbproviderprivateip",
          "type": "string"
        },
        {},
        {
          "description": "true if NetScaler device is provisioned exclusively to be a GSLB service provider",
          "name": "isexclusivegslbprovider",
          "type": "boolean"
        },
        {
          "description": "device id of the netscaler load balancer",
          "name": "lbdeviceid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "true if device is dedicated for an account",
          "name": "lbdevicededicated",
          "type": "boolean"
        },
        {
          "description": "device name",
          "name": "lbdevicename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists image stores.",
      "isasync": false,
      "name": "listImageStores",
      "params": [
        {
          "description": "read-only status of the image store",
          "length": 255,
          "name": "readonly",
          "related": "listImageStores",
          "required": false,
          "since": "4.15.0",
          "type": "boolean"
        },
        {
          "description": "the image store provider",
          "length": 255,
          "name": "provider",
          "required": false,
          "type": "string"
        },
        {
          "description": "the image store protocol",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the storage pool",
          "length": 255,
          "name": "id",
          "related": "listImageStores",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID for the image store",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the image store",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the protocol of the image store",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the provider name of the image store",
          "name": "providername",
          "type": "string"
        },
        {
          "description": "the Zone name of the image store",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the host's currently used disk size",
          "name": "disksizeused",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the Zone ID of the image store",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the image store",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the scope of the image store",
          "name": "scope",
          "type": "scopetype"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the ID of the image store",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "defines if store is read-only",
          "name": "readonly",
          "type": "boolean"
        },
        {},
        {
          "description": "the url of the image store",
          "name": "url",
          "type": "string"
        },
        {}
      ],
      "since": "4.2.0"
    },
    {
      "description": "Deletes a account, and all users associated with this account",
      "isasync": true,
      "name": "deleteAccount",
      "params": [
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "enableAccount,listAccounts",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Adds metric counter for VM auto scaling",
      "isasync": true,
      "name": "createCounter",
      "params": [
        {
          "description": "Source of the counter.",
          "length": 255,
          "name": "source",
          "required": true,
          "type": "string"
        },
        {
          "description": "Network provider of the counter.",
          "length": 255,
          "name": "provider",
          "required": true,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "Value of the counter e.g. oid in case of snmp.",
          "length": 255,
          "name": "value",
          "required": true,
          "type": "string"
        },
        {
          "description": "Name of the counter.",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "Value in case of snmp or other specific counters.",
          "name": "value",
          "type": "string"
        },
        {
          "description": "the id of the Counter",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Provider of the counter.",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "Source of the counter.",
          "name": "source",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "zone id of counter",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Name of the counter.",
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "description": "List Event Types",
      "isasync": false,
      "name": "listEventTypes",
      "params": [],
      "related": "",
      "response": [
        {},
        {},
        {
          "description": "Event Type",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Disables out-of-band management for a cluster",
      "isasync": true,
      "name": "disableOutOfBandManagementForCluster",
      "params": [
        {
          "description": "the ID of the cluster",
          "length": 255,
          "name": "clusterid",
          "related": "addCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the out-of-band management interface password",
          "name": "password",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if out-of-band management is enabled for the host",
          "name": "enabled",
          "type": "boolean"
        },
        {
          "description": "the operation result description",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface username",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the out-of-band management action (if issued)",
          "name": "action",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface powerState of the host",
          "name": "powerstate",
          "type": "powerstate"
        },
        {},
        {
          "description": "the operation result",
          "name": "status",
          "type": "boolean"
        },
        {
          "description": "the out-of-band management interface address",
          "name": "address",
          "type": "string"
        },
        {
          "description": "the out-of-band management driver for the host",
          "name": "driver",
          "type": "string"
        },
        {
          "description": "the out-of-band management interface port",
          "name": "port",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Adds a new cluster",
      "isasync": false,
      "name": "addCluster",
      "params": [
        {
          "description": "hypervisor type of the cluster: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator,Ovm3",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "Type of virtual switch used for public traffic in the cluster. Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)",
          "length": 255,
          "name": "publicvswitchtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "type of the cluster: CloudManaged, ExternalManaged",
          "length": 255,
          "name": "clustertype",
          "required": true,
          "type": "string"
        },
        {
          "description": "the cluster name",
          "length": 255,
          "name": "clustername",
          "required": true,
          "type": "string"
        },
        {
          "description": "the URL",
          "length": 255,
          "name": "url",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username for the cluster",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "Ovm3 native pooling enabled for cluster",
          "length": 255,
          "name": "ovm3pool",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Ovm3 vip to use for pool (and cluster)",
          "length": 255,
          "name": "ovm3vip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Name of virtual switch used for public traffic in the cluster.  This would override zone wide traffic label setting.",
          "length": 255,
          "name": "publicvswitchname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the password for the VSM associated with this cluster",
          "length": 255,
          "name": "vsmpassword",
          "required": false,
          "type": "string"
        },
        {
          "description": "Name of virtual switch used for guest traffic in the cluster. This would override zone wide traffic label setting.",
          "length": 255,
          "name": "guestvswitchname",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ipaddress of the VSM associated with this cluster",
          "length": 255,
          "name": "vsmipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username for the VSM associated with this cluster",
          "length": 255,
          "name": "vsmusername",
          "required": false,
          "type": "string"
        },
        {
          "description": "Type of virtual switch used for guest traffic in the cluster. Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs (for VMware distributed vSwitch)",
          "length": 255,
          "name": "guestvswitchtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "the password for the host",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this cluster for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Zone ID for the cluster",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Ovm3 native OCFS2 clustering enabled for cluster",
          "length": 255,
          "name": "ovm3cluster",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Zone name of the cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "The memory overcommit ratio of the cluster",
          "name": "memoryovercommitratio",
          "type": "string"
        },
        {
          "description": "whether this cluster is managed by cloudstack",
          "name": "managedstate",
          "type": "string"
        },
        {
          "description": "the capacity of the Cluster",
          "name": "capacity",
          "response": [
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            }
          ],
          "type": "list"
        },
        {
          "description": "the Pod name of the cluster",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the type of the cluster",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the allocation state of the cluster",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Pod ID of the cluster",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "Meta data associated with the zone (key/value pairs)",
          "name": "resourcedetails",
          "type": "map"
        },
        {
          "description": "the cluster ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the Zone ID of the cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the cluster name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "The cpu overcommit ratio of the cluster",
          "name": "cpuovercommitratio",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the hypervisor type of the cluster",
          "name": "hypervisortype",
          "type": "string"
        },
        {
          "description": "Ovm3 VIP to use for pooling and/or clustering",
          "name": "ovm3vip",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes an traffic monitor host.",
      "isasync": false,
      "name": "deleteTrafficMonitor",
      "params": [
        {
          "description": "Id of the Traffic Monitor Host.",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Removes VM from specified network by deleting a NIC",
      "isasync": true,
      "name": "removeNicFromVirtualMachine",
      "params": [
        {
          "description": "Virtual Machine ID",
          "length": 255,
          "name": "virtualmachineid",
          "related": "destroyVirtualMachine,scaleVirtualMachine,removeNicFromVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "NIC ID",
          "length": 255,
          "name": "nicid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "destroyVirtualMachine,scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {},
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            }
          ],
          "type": "set"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        }
      ]
    },
    {
      "description": "Activates a project",
      "isasync": true,
      "name": "activateProject",
      "params": [
        {
          "description": "id of the project to be modified",
          "length": 255,
          "name": "id",
          "related": "activateProject",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the total number of networks owned by project",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of networks available to be created for this project",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this project to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of snapshots available for this project",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total memory (in MB) available to be created for this project",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) owned by project",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of virtual machines stopped for this project",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total number of vpcs the project can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this project",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this project to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the project account name of the project",
          "name": "projectaccountname",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores the project can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by project",
          "name": "vpctotal",
          "type": "long"
        },
        {},
        {
          "description": "the total number of vpcs available to be created for this project",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks the project can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the domain id the project belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with vm",
          "name": "tags",
          "response": [
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total number of snapshots stored by this project",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "the domain name where the project belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this project can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this project",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the state of the project",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this project",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the date this project was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the id of the project",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this project",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the displaytext of the project",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this project",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by project",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of public ip addresses allocated for this project",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "the total volume which can be used by this project",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this project",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the account name of the project's owners",
          "name": "owner",
          "type": "list"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the total number of cpu cores owned by project",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total volume being used by this project",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this project",
          "name": "secondarystorageavailable",
          "type": "string"
        },
        {
          "description": "the total number of templates which have been created by this project",
          "name": "templatetotal",
          "type": "long"
        },
        {},
        {
          "description": "the total number of snapshots which can be stored by this project",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the name of the project",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by project",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total volume available for this project",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores available to be created for this project",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the project can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the project can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the project can own",
          "name": "secondarystoragelimit",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Delete a certificate to CloudStack",
      "isasync": false,
      "name": "deleteSslCert",
      "params": [
        {
          "description": "Id of SSL certificate",
          "length": 255,
          "name": "id",
          "related": "uploadSslCert",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Lists dedicated hosts.",
      "isasync": false,
      "name": "listDedicatedHosts",
      "params": [
        {
          "description": "the ID of the domain associated with the host",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the host",
          "length": 255,
          "name": "hostid",
          "related": "reconnectHost,addBaremetalHost",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the name of the account associated with the host. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "list dedicated hosts by affinity group",
          "length": 255,
          "name": "affinitygroupid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the ID of the dedicated resource",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the Account ID of the host",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "the domain ID of the host",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the Dedication Affinity Group ID of the host",
          "name": "affinitygroupid",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "hostid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "upload an existing ISO into the CloudStack cloud.",
      "isasync": false,
      "name": "getUploadParamsForIso",
      "params": [
        {
          "description": "the ID of the OS type that best represents the OS of this ISO. If the ISO is bootable this parameter needs to be passed",
          "length": 255,
          "name": "ostypeid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the zone the volume/template is to be hosted on",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional accountName. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the display text of the ISO. This is usually used for display purposes.",
          "length": 4096,
          "name": "displaytext",
          "required": true,
          "type": "string"
        },
        {
          "description": "Upload volume/template for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the volume/template",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if you want this ISO to be featured",
          "length": 255,
          "name": "isfeatured",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the name of the ISO",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if the ISO or its derivatives are extractable; default is false",
          "length": 255,
          "name": "isextractable",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "true if you want to register the ISO to be publicly available to all users, false otherwise.",
          "length": 255,
          "name": "ispublic",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the zone you wish to register the ISO to.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the format for the volume/template. Possible values include QCOW2, OVA, and VHD.",
          "length": 255,
          "name": "format",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the checksum value of this volume/template The parameter containing the checksum will be considered a MD5sum if it is not prefixed\n and just a plain ascii/utf8 representation of a hexadecimal string. If it is required to\n use another algorithm the hexadecimal string is to be prefixed with a string of the form,\n \"{<algorithm>}\", not including the double quotes. In this <algorithm> is the exact string\n representing the java supported algorithm, i.e. MD5 or SHA-256. Note that java does not\n contain an algorithm called SHA256 or one called sha-256, only SHA-256.",
          "length": 255,
          "name": "checksum",
          "required": false,
          "type": "string"
        },
        {
          "description": "true if this ISO is bootable. If not passed explicitly its assumed to be true",
          "length": 255,
          "name": "bootable",
          "required": false,
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "signature to be sent in the POST request.",
          "name": "signature",
          "type": "string"
        },
        {
          "description": "encrypted data to be sent in the POST request.",
          "name": "metadata",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the timestamp after which the signature expires",
          "name": "expires",
          "type": "string"
        },
        {
          "description": "POST url to upload the file to",
          "name": "postURL",
          "type": "url"
        },
        {
          "description": "the template/volume ID",
          "name": "id",
          "type": "uuid"
        }
      ],
      "since": "4.13"
    },
    {
      "description": "Get diagnostics and files from system VMs",
      "isasync": true,
      "name": "getDiagnosticsData",
      "params": [
        {
          "description": "The ID of the system VM instance to retrieve diagnostics data files from",
          "length": 255,
          "name": "targetid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "A comma separated list of diagnostics data files to be retrieved. Defaults are taken from global settings if none has been provided.",
          "length": 255,
          "name": "files",
          "required": false,
          "type": "list"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Storage URL to download retrieve diagnostics data files",
          "name": "url",
          "type": "string"
        }
      ],
      "since": "4.14.0.0"
    },
    {
      "description": "Deletes a autoscale vm group.",
      "isasync": true,
      "name": "deleteAutoScaleVmGroup",
      "params": [
        {
          "description": "the ID of the autoscale group",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "true if all VMs have to be cleaned up, false otherwise",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "since": "4.18.0",
          "type": "boolean"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {}
      ]
    },
    {
      "description": "lists Palo Alto firewall devices in a physical network",
      "isasync": false,
      "name": "listPaloAltoFirewalls",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Palo Alto firewall device ID",
          "length": 255,
          "name": "fwdeviceid",
          "related": "addPaloAltoFirewall,listPaloAltoFirewalls",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "addPaloAltoFirewall",
      "response": [
        {
          "description": "device state",
          "name": "fwdevicestate",
          "type": "string"
        },
        {
          "description": "the management IP address of the external firewall",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "device id of the Palo Alto firewall",
          "name": "fwdeviceid",
          "type": "string"
        },
        {
          "description": "the number of times to retry requests to the external firewall",
          "name": "numretries",
          "type": "string"
        },
        {
          "description": "the physical network to which this Palo Alto firewall belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the username that's used to log in to the external firewall",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the public security zone of the external firewall",
          "name": "publiczone",
          "type": "string"
        },
        {},
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the public interface of the external firewall",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "the usage interface of the external firewall",
          "name": "usageinterface",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the zone ID of the external firewall",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the private security zone of the external firewall",
          "name": "privatezone",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "fwdevicename",
          "type": "string"
        },
        {
          "description": "the private interface of the external firewall",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the timeout (in seconds) for requests to the external firewall",
          "name": "timeout",
          "type": "string"
        },
        {
          "description": "device capacity",
          "name": "fwdevicecapacity",
          "type": "long"
        }
      ]
    },
    {
      "description": "Updates load balancer",
      "isasync": true,
      "name": "updateLoadBalancerRule",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "The protocol for the LB",
          "length": 255,
          "name": "protocol",
          "required": false,
          "type": "string"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": false,
          "type": "string"
        },
        {
          "description": "the name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the load balancer rule to update",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the description of the load balancer rule",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "listLoadBalancerRules",
      "response": [
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the protocol of the loadbalanacer rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the zone the load balancer rule belongs to",
          "name": "zonename",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Delete one or more alerts.",
      "isasync": false,
      "name": "deleteAlerts",
      "params": [
        {
          "description": "end date range to delete alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "enddate",
          "required": false,
          "type": "date"
        },
        {
          "description": "start date range to delete alerts (including) this date (use format \"yyyy-MM-dd\" or the new format \"yyyy-MM-ddThh:mm:ss\")",
          "length": 255,
          "name": "startdate",
          "required": false,
          "type": "date"
        },
        {
          "description": "the IDs of the alerts",
          "length": 255,
          "name": "ids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "delete by alert type",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "string"
        }
      ],
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Enables an account",
      "isasync": false,
      "name": "enableAccount",
      "params": [
        {
          "description": "Account id",
          "length": 255,
          "name": "id",
          "related": "enableAccount,listAccounts",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Enables specified account.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "Enables specified account in this domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "listAccounts",
      "response": [
        {
          "description": "the total number of networks the account can own",
          "name": "networklimit",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the total number of templates available to be created by this account",
          "name": "templateavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses available for this account to acquire",
          "name": "ipavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines running for this account",
          "name": "vmrunning",
          "type": "integer"
        },
        {
          "description": "the total volume available for this account",
          "name": "volumeavailable",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the total number of cpu cores the account can own",
          "name": "cpulimit",
          "type": "string"
        },
        {
          "description": "true if the account requires cleanup",
          "name": "iscleanuprequired",
          "type": "boolean"
        },
        {
          "description": "the state of the account",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the total number of snapshots which can be stored by this account",
          "name": "snapshotlimit",
          "type": "string"
        },
        {
          "description": "the total number of snapshots stored by this account",
          "name": "snapshottotal",
          "type": "long"
        },
        {
          "description": "id of the Domain the account belongs to",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the type of the role (Admin, ResourceAdmin, DomainAdmin, User)",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "the name of the account",
          "name": "name",
          "type": "string"
        },
        {
          "description": "details for the account",
          "name": "accountdetails",
          "type": "map"
        },
        {
          "description": "the total primary storage space (in GiB) available to be used for this account",
          "name": "primarystorageavailable",
          "type": "string"
        },
        {
          "description": "the list of users associated with account",
          "name": "user",
          "response": [
            {
              "description": "Base64 string representation of the resource icon",
              "name": "icon",
              "type": "resourceiconresponse"
            },
            {
              "description": "the account type of the user",
              "name": "accounttype",
              "type": "integer"
            },
            {
              "description": "the user email address",
              "name": "email",
              "type": "string"
            },
            {
              "description": "the date and time the user account was created",
              "name": "created",
              "type": "date"
            },
            {
              "description": "the account name of the user",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the boolean value representing if the updating target is in caller's child domain",
              "name": "iscallerchilddomain",
              "type": "boolean"
            },
            {
              "description": "the user ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the user name",
              "name": "username",
              "type": "string"
            },
            {
              "description": "the user state",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the domain name of the user",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the type of the role",
              "name": "roletype",
              "type": "string"
            },
            {
              "description": "the domain ID of the user",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "true if user is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the name of the role",
              "name": "rolename",
              "type": "string"
            },
            {
              "description": "the account ID of the user",
              "name": "accountid",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication enabled",
              "name": "is2faenabled",
              "type": "boolean"
            },
            {
              "description": "the user lastname",
              "name": "lastname",
              "type": "string"
            },
            {
              "description": "the timezone user was created in",
              "name": "timezone",
              "type": "string"
            },
            {
              "description": "the source type of the user in lowercase, such as native, ldap, saml2",
              "name": "usersource",
              "type": "string"
            },
            {
              "description": "the api key of the user",
              "name": "apikey",
              "type": "string"
            },
            {
              "description": "the user firstname",
              "name": "firstname",
              "type": "string"
            },
            {
              "description": "true if user has two factor authentication is mandated",
              "name": "is2famandated",
              "type": "boolean"
            },
            {
              "description": "the secret key of the user",
              "name": "secretkey",
              "type": "string"
            },
            {
              "description": "the ID of the role",
              "name": "roleid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the total secondary storage space (in GiB) owned by account",
          "name": "secondarystoragetotal",
          "type": "float"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the total number of projects being administrated by this account",
          "name": "projecttotal",
          "type": "long"
        },
        {
          "description": "account type (admin, domain-admin, user)",
          "name": "accounttype",
          "type": "integer"
        },
        {},
        {
          "description": "the total volume which can be used by this account",
          "name": "volumelimit",
          "type": "string"
        },
        {
          "description": "the total number of templates which can be created by this account",
          "name": "templatelimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines stopped for this account",
          "name": "vmstopped",
          "type": "integer"
        },
        {
          "description": "the total primary storage space (in GiB) owned by account",
          "name": "primarystoragetotal",
          "type": "long"
        },
        {
          "description": "the total number of projects available for administration by this account",
          "name": "projectavailable",
          "type": "string"
        },
        {
          "description": "the list of acl groups that account belongs to",
          "name": "groups",
          "type": "list"
        },
        {
          "description": "path of the Domain the account belongs to",
          "name": "domainpath",
          "type": "string"
        },
        {
          "description": "the total number of projects the account can own",
          "name": "projectlimit",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the date when this account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the default zone of the account",
          "name": "defaultzoneid",
          "type": "string"
        },
        {
          "description": "the total volume being used by this account",
          "name": "volumetotal",
          "type": "long"
        },
        {
          "description": "the id of the account",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the total primary storage space (in GiB) the account can own",
          "name": "primarystoragelimit",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the total number of vpcs owned by account",
          "name": "vpctotal",
          "type": "long"
        },
        {
          "description": "the total number of snapshots available for this account",
          "name": "snapshotavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) owned by account",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the total number of vpcs the account can own",
          "name": "vpclimit",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines that can be deployed by this account",
          "name": "vmlimit",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses allocated for this account",
          "name": "iptotal",
          "type": "long"
        },
        {
          "description": "true if account is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the total number of networks owned by account",
          "name": "networktotal",
          "type": "long"
        },
        {
          "description": "the total number of cpu cores available to be created for this account",
          "name": "cpuavailable",
          "type": "string"
        },
        {
          "description": "the total number of networks available to be created for this account",
          "name": "networkavailable",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines deployed by this account",
          "name": "vmtotal",
          "type": "long"
        },
        {
          "description": "the total number of templates which have been created by this account",
          "name": "templatetotal",
          "type": "long"
        },
        {},
        {
          "description": "the network domain",
          "name": "networkdomain",
          "type": "string"
        },
        {
          "description": "name of the Domain the account belongs to",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the total number of virtual machines available for this account to acquire",
          "name": "vmavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) available to be created for this account",
          "name": "memoryavailable",
          "type": "string"
        },
        {
          "description": "the total memory (in MB) the account can own",
          "name": "memorylimit",
          "type": "string"
        },
        {
          "description": "the total number of vpcs available to be created for this account",
          "name": "vpcavailable",
          "type": "string"
        },
        {
          "description": "the total number of public ip addresses this account can acquire",
          "name": "iplimit",
          "type": "string"
        },
        {
          "description": "the total secondary storage space (in GiB) the account can own",
          "name": "secondarystoragelimit",
          "type": "string"
        },
        {
          "description": "the total number of cpu cores owned by account",
          "name": "cputotal",
          "type": "long"
        },
        {
          "description": "the total secondary storage space (in GiB) available to be used for this account",
          "name": "secondarystorageavailable",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a profile that contains information about the virtual machine which will be provisioned automatically by autoscale feature.",
      "isasync": true,
      "name": "createAutoScaleVmProfile",
      "params": [
        {
          "description": "the time allowed for existing connections to get closed before a vm is expunged",
          "length": 255,
          "name": "expungevmgraceperiod",
          "required": false,
          "type": "integer"
        },
        {
          "description": "an optional field, whether to the display the profile to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "account that will own the autoscale VM profile",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "the service offering of the auto deployed virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional project for the autoscale VM profile",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161",
          "length": 255,
          "name": "counterparam",
          "required": false,
          "type": "map"
        },
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId of the auto deployed virtual machine.\nExample: otherdeployparams[0].name=serviceofferingid&otherdeployparams[0].value=a7fb50f6-01d9-11ed-8bc1-77f8f0228926&otherdeployparams[1].name=rootdisksize&otherdeployparams[1].value=10 .\nPossible parameters are \"rootdisksize\", \"diskofferingid\",\"size\", \"securitygroupids\", \"overridediskofferingid\", \"keypairs\", \"affinitygroupids'\" and \"networkids\".",
          "length": 255,
          "name": "otherdeployparams",
          "required": false,
          "type": "map"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "length": 255,
          "name": "autoscaleuserid",
          "related": "getUser",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "an optional binary data that can be sent to the virtual machine upon a successful deployment. This binary data must be base64 encoded before adding it to the request. Using HTTP GET (via querystring), you can send up to 4KB of data after base64 encoding. Using HTTP POST(via POST body), you can send up to 1MB of data after base64 encoding.You also need to change vm.userdata.max.length value",
          "length": 1048576,
          "name": "userdata",
          "required": false,
          "since": "4.18.0",
          "type": "string"
        },
        {
          "description": "the template of the auto deployed virtual machine",
          "length": 255,
          "name": "templateid",
          "related": "listTemplates,createTemplate,copyTemplate,registerTemplate,registerIso,copyIso,listIsos",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "domain ID of the account owning a autoscale VM profile",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "availability zone for the auto deployed virtual machine",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "parameters other than zoneId/serviceOfferringId/templateId to be used while deploying a virtual machine",
          "name": "otherdeployparams",
          "type": "map"
        },
        {
          "description": "the domain ID of the vm profile",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the autoscale vm profile ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the time allowed for existing connections to get closed before a vm is destroyed",
          "name": "expungevmgraceperiod",
          "type": "integer"
        },
        {
          "description": "is profile for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the domain name of the vm profile",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the service offering to be used while deploying a virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vm profile",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the project id vm profile",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the user used to launch and destroy the VMs",
          "name": "autoscaleuserid",
          "type": "string"
        },
        {
          "description": "Base 64 encoded VM user data",
          "name": "userdata",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the availability zone to be used while deploying a virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the template to be used while deploying a virtual machine",
          "name": "templateid",
          "type": "string"
        },
        {},
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists load balancer stickiness policies.",
      "isasync": false,
      "name": "listLBStickinessPolicies",
      "params": [
        {
          "description": "the ID of the load balancer stickiness policy",
          "length": 255,
          "name": "id",
          "related": "listLBStickinessPolicies",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "lbruleid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account of the Stickiness policy",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of stickinesspolicies",
          "name": "stickinesspolicy",
          "response": [
            {
              "description": "the description of the Stickiness policy",
              "name": "description",
              "type": "string"
            },
            {
              "description": "is policy for display to the regular user",
              "name": "fordisplay",
              "type": "boolean"
            },
            {
              "description": "the name of the Stickiness policy",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the LB Stickiness policy ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the state of the policy",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the method name of the Stickiness policy",
              "name": "methodname",
              "type": "string"
            },
            {
              "description": "the params of the policy",
              "name": "params",
              "type": "map"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the id of the zone the Stickiness policy belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the description of the Stickiness policy",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "the domain of the Stickiness policy",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the Stickiness policy",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the state of the policy",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the LB rule ID",
          "name": "lbruleid",
          "type": "string"
        },
        {},
        {
          "description": "the domain ID of the Stickiness policy",
          "name": "domainid",
          "type": "string"
        }
      ],
      "since": "3.0.0"
    },
    {
      "description": "Adds a Ucs manager",
      "isasync": false,
      "name": "addUcsManager",
      "params": [
        {
          "description": "the Zone id for the ucs manager",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of UCS url",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "the name of UCS manager",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username of UCS",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "the password of UCS",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the url of ucs manager",
          "name": "url",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the zone ID of ucs manager",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of ucs manager",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the ucs manager",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a network",
      "isasync": true,
      "name": "deleteNetwork",
      "params": [
        {
          "description": "Force delete a network. Network will be marked as 'Destroy' even when commands to shutdown and cleanup to the backend fails.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the ID of the network",
          "length": 255,
          "name": "id",
          "related": "createNetwork,updateNetwork,listNetworks",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Reconnects a host.",
      "isasync": true,
      "name": "reconnectHost",
      "params": [
        {
          "description": "the host ID",
          "length": 255,
          "name": "id",
          "related": "reconnectHost,addBaremetalHost",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "addBaremetalHost",
      "response": [
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        },
        {},
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {},
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            },
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ]
    },
    {
      "description": "Starts a stopped Kubernetes cluster",
      "isasync": true,
      "name": "startKubernetesCluster",
      "params": [
        {
          "description": "the ID of the Kubernetes cluster",
          "length": 255,
          "name": "id",
          "related": "startKubernetesCluster",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the name of the domain in which the Kubernetes cluster exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the cpu cores of the Kubernetes cluster",
          "name": "cpunumber",
          "type": "string"
        },
        {
          "description": "Maximum size of the cluster",
          "name": "maxsize",
          "type": "long"
        },
        {
          "description": "the name of the service offering of the Kubernetes cluster",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster dashboard UI",
          "name": "consoleendpoint",
          "type": "string"
        },
        {
          "description": "the state of the Kubernetes cluster",
          "name": "state",
          "type": "string"
        },
        {
          "description": "Public IP Address ID of the cluster",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ID of the template of the Kubernetes cluster",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the list of virtualmachine associated with this Kubernetes cluster",
          "name": "virtualmachines",
          "type": "list"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the project id of the Kubernetes cluster",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionid",
          "type": "string"
        },
        {
          "description": "the name of the Kubernetes cluster",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the id of the Kubernetes cluster",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the size (worker nodes count) of the Kubernetes cluster",
          "name": "size",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the description of the Kubernetes cluster",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the Kubernetes cluster",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "Public IP Address of the cluster",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "keypair details",
          "name": "keypair",
          "type": "string"
        },
        {
          "description": "the project name of the Kubernetes cluster",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the network of the Kubernetes cluster",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the network of the Kubernetes cluster",
          "name": "associatednetworkname",
          "type": "string"
        },
        {
          "description": "the date when this Kubernetes cluster was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the name of the Kubernetes version for the Kubernetes cluster",
          "name": "kubernetesversionname",
          "type": "string"
        },
        {
          "description": "the memory the Kubernetes cluster",
          "name": "memory",
          "type": "string"
        },
        {
          "description": "the account associated with the Kubernetes cluster",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the name of the zone of the Kubernetes cluster",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the control nodes count for the Kubernetes cluster",
          "name": "controlnodes",
          "type": "long"
        },
        {
          "description": "Whether autoscaling is enabled for the cluster",
          "name": "autoscalingenabled",
          "type": "boolean"
        },
        {
          "description": "the master nodes count for the Kubernetes cluster. This parameter is deprecated, please use 'controlnodes' parameter.",
          "name": "masternodes",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the ID of the domain in which the Kubernetes cluster exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "URL end point for the Kubernetes cluster",
          "name": "endpoint",
          "type": "string"
        },
        {
          "description": "Minimum size of the cluster",
          "name": "minsize",
          "type": "long"
        }
      ]
    },
    {
      "description": "Deletes a project",
      "isasync": true,
      "name": "deleteProject",
      "params": [
        {
          "description": "true if all project resources have to be cleaned up, false otherwise",
          "length": 255,
          "name": "cleanup",
          "required": false,
          "since": "4.16.0",
          "type": "boolean"
        },
        {
          "description": "id of the project to be deleted",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ],
      "since": "3.0.0"
    },
    {
      "description": "lists netscaler load balancer devices",
      "isasync": false,
      "name": "listNetscalerLoadBalancers",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "netscaler load balancer device ID",
          "length": 255,
          "name": "lbdeviceid",
          "related": "addNetscalerLoadBalancer,listNetscalerLoadBalancers",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "addNetscalerLoadBalancer",
      "response": [
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "device id of the netscaler load balancer",
          "name": "lbdeviceid",
          "type": "string"
        },
        {
          "description": "the management IP address of the external load balancer",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device.",
          "name": "podids",
          "type": "list"
        },
        {
          "description": "device state",
          "name": "lbdevicestate",
          "type": "string"
        },
        {
          "description": "private IP of the NetScaler representing GSLB site",
          "name": "gslbproviderprivateip",
          "type": "string"
        },
        {
          "description": "true if device is dedicated for an account",
          "name": "lbdevicededicated",
          "type": "boolean"
        },
        {
          "description": "device capacity",
          "name": "lbdevicecapacity",
          "type": "long"
        },
        {
          "description": "the physical network to which this netscaler device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the private interface of the load balancer",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "the public interface of the load balancer",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "true if NetScaler device is provisioned to be a GSLB service provider",
          "name": "gslbprovider",
          "type": "boolean"
        },
        {
          "description": "true if NetScaler device is provisioned exclusively to be a GSLB service provider",
          "name": "isexclusivegslbprovider",
          "type": "boolean"
        },
        {},
        {
          "description": "public IP of the NetScaler representing GSLB site",
          "name": "gslbproviderpublicip",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "lbdevicename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a vm group",
      "isasync": false,
      "name": "createInstanceGroup",
      "params": [
        {
          "description": "The project of the instance group",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the name of the instance group",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the domain ID of account owning the instance group",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the account of the instance group. The account parameter must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the account owning the instance group",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the instance group",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the instance group",
          "name": "project",
          "type": "string"
        },
        {
          "description": "time and date the instance group was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID of the instance group",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the name of the instance group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the domain name of the instance group",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the project ID of the instance group",
          "name": "projectid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "List iso visibility and all accounts that have permissions to view this iso.",
      "isasync": false,
      "name": "listIsoPermissions",
      "params": [
        {
          "description": "the template ID",
          "length": 255,
          "name": "id",
          "related": "listIsoPermissions,listTemplatePermissions,listIsoPermissions",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "listTemplatePermissions,listIsoPermissions",
      "response": [
        {
          "description": "the template ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the list of projects the template is available for",
          "name": "projectids",
          "type": "list"
        },
        {},
        {
          "description": "true if this template is a public template, false otherwise",
          "name": "ispublic",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the ID of the domain to which the template belongs",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the list of accounts the template is available for",
          "name": "account",
          "type": "list"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a netscaler load balancer device",
      "isasync": true,
      "name": "addNetscalerLoadBalancer",
      "params": [
        {
          "description": "Credentials to reach netscaler load balancer device",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if NetScaler device being added is for providing GSLB service",
          "length": 255,
          "name": "gslbprovider",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "public IP of the site",
          "length": 255,
          "name": "gslbproviderpublicip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Netscaler device type supports NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer",
          "length": 255,
          "name": "networkdevicetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "URL of the netscaler load balancer appliance.",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "true if NetScaler device being added is for providing GSLB service exclusively and can not be used for LB",
          "length": 255,
          "name": "isexclusivegslbprovider",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Credentials to reach netscaler load balancer device",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "private IP of the site",
          "length": 255,
          "name": "gslbproviderprivateip",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "true if NetScaler device is provisioned exclusively to be a GSLB service provider",
          "name": "isexclusivegslbprovider",
          "type": "boolean"
        },
        {
          "description": "true if NetScaler device is provisioned to be a GSLB service provider",
          "name": "gslbprovider",
          "type": "boolean"
        },
        {
          "description": "the physical network to which this netscaler device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "lbdevicename",
          "type": "string"
        },
        {},
        {
          "description": "the public interface of the load balancer",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "public IP of the NetScaler representing GSLB site",
          "name": "gslbproviderpublicip",
          "type": "string"
        },
        {
          "description": "private IP of the NetScaler representing GSLB site",
          "name": "gslbproviderprivateip",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "device capacity",
          "name": "lbdevicecapacity",
          "type": "long"
        },
        {
          "description": "true if device is dedicated for an account",
          "name": "lbdevicededicated",
          "type": "boolean"
        },
        {
          "description": "Used when NetScaler device is provider of EIP service. This parameter represents the list of pod's, for which there exists a policy based route on datacenter L3 router to route pod's subnet IP to a NetScaler device.",
          "name": "podids",
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the private interface of the load balancer",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "device state",
          "name": "lbdevicestate",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {},
        {
          "description": "device id of the netscaler load balancer",
          "name": "lbdeviceid",
          "type": "string"
        },
        {
          "description": "the management IP address of the external load balancer",
          "name": "ipaddress",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates an internal load balancer",
      "isasync": true,
      "name": "createLoadBalancer",
      "params": [
        {
          "description": "the source port the network traffic will be load balanced from",
          "length": 255,
          "name": "sourceport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "the description of the load balancer",
          "length": 4096,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "The guest network the load balancer will be created for",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the network id of the source ip address",
          "length": 255,
          "name": "sourceipaddressnetworkid",
          "related": "createNetwork,updateNetwork,listNetworks",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the load balancer scheme. Supported value in this release is Internal",
          "length": 255,
          "name": "scheme",
          "required": true,
          "type": "string"
        },
        {
          "description": "the TCP port of the virtual machine where the network traffic will be load balanced to",
          "length": 255,
          "name": "instanceport",
          "required": true,
          "type": "integer"
        },
        {
          "description": "load balancer algorithm (source, roundrobin, leastconn)",
          "length": 255,
          "name": "algorithm",
          "required": true,
          "type": "string"
        },
        {
          "description": "name of the load balancer",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "the source IP address the network traffic will be load balanced from",
          "length": 255,
          "name": "sourceipaddress",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the account of the Load Balancer",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the list of instances associated with the Load Balancer",
          "name": "loadbalancerinstance",
          "response": [
            {
              "description": "the state of the instance",
              "name": "state",
              "type": "string"
            },
            {
              "description": "the name of the instance",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the instance ID",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the ip address of the instance",
              "name": "ipaddress",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain of the Load Balancer",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the list of rules associated with the Load Balancer",
          "name": "loadbalancerrule",
          "response": [
            {
              "description": "source port of the load balancer rule",
              "name": "sourceport",
              "type": "integer"
            },
            {
              "description": "instance port of the load balancer rule",
              "name": "instanceport",
              "type": "integer"
            },
            {
              "description": "the state of the load balancer rule",
              "name": "state",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "Load Balancer source ip network id",
          "name": "sourceipaddressnetworkid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the Load Balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the list of resource tags associated with the Load Balancer",
          "name": "tags",
          "response": [
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the Load Balancer",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Load Balancer ID",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the project name of the Load Balancer",
          "name": "project",
          "type": "string"
        },
        {},
        {
          "description": "the domain ID of the Load Balancer",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the description of the Load Balancer",
          "name": "description",
          "type": "string"
        },
        {
          "description": "Load Balancer source ip",
          "name": "sourceipaddress",
          "type": "string"
        },
        {
          "description": "Load Balancer network id",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        }
      ],
      "since": "4.2.0"
    },
    {
      "description": "Removes network permissions.",
      "isasync": false,
      "name": "removeNetworkPermissions",
      "params": [
        {
          "description": "a comma delimited list of projects within owner's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "projectids",
          "related": "",
          "required": false,
          "type": "list"
        },
        {
          "description": "a comma delimited list of accounts within owner's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "a comma delimited list of account IDs within owner's domain. If specified, \"op\" parameter has to be passed in.",
          "length": 255,
          "name": "accountids",
          "related": "listAccounts",
          "required": false,
          "type": "list"
        },
        {
          "description": "the network ID",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "config Tungsten-Fabric service",
      "isasync": false,
      "name": "configTungstenFabricService",
      "params": [
        {
          "description": "the ID of zone",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of physical network",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ]
    },
    {
      "description": "list baremetal pxe server",
      "isasync": false,
      "name": "listBaremetalPxeServers",
      "params": [
        {
          "description": "Pxe server device ID",
          "length": 255,
          "name": "id",
          "required": false,
          "type": "long"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "device id of ",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the physical network to which this external dhcp device belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {},
        {},
        {
          "description": "url",
          "name": "url",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds a Palo Alto firewall device",
      "isasync": true,
      "name": "addPaloAltoFirewall",
      "params": [
        {
          "description": "URL of the Palo Alto appliance.",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        },
        {
          "description": "Credentials to reach Palo Alto firewall device",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "supports only PaloAltoFirewall",
          "length": 255,
          "name": "networkdevicetype",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Credentials to reach Palo Alto firewall device",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the public security zone of the external firewall",
          "name": "publiczone",
          "type": "string"
        },
        {
          "description": "device id of the Palo Alto firewall",
          "name": "fwdeviceid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the private interface of the external firewall",
          "name": "privateinterface",
          "type": "string"
        },
        {
          "description": "the private security zone of the external firewall",
          "name": "privatezone",
          "type": "string"
        },
        {
          "description": "the physical network to which this Palo Alto firewall belongs to",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "the timeout (in seconds) for requests to the external firewall",
          "name": "timeout",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the public interface of the external firewall",
          "name": "publicinterface",
          "type": "string"
        },
        {
          "description": "the number of times to retry requests to the external firewall",
          "name": "numretries",
          "type": "string"
        },
        {},
        {
          "description": "the zone ID of the external firewall",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "device state",
          "name": "fwdevicestate",
          "type": "string"
        },
        {
          "description": "the username that's used to log in to the external firewall",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the management IP address of the external firewall",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "fwdevicename",
          "type": "string"
        },
        {
          "description": "name of the provider",
          "name": "provider",
          "type": "string"
        },
        {
          "description": "the usage interface of the external firewall",
          "name": "usageinterface",
          "type": "string"
        },
        {
          "description": "device capacity",
          "name": "fwdevicecapacity",
          "type": "long"
        }
      ]
    },
    {
      "description": "Creates a private gateway",
      "isasync": true,
      "name": "createPrivateGateway",
      "params": [
        {
          "description": "when true bypasses VLAN id/range overlap check during private gateway creation",
          "length": 255,
          "name": "bypassvlanoverlapcheck",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The isolated network this private gateway is associated to.",
          "length": 255,
          "name": "associatednetworkid",
          "related": "createNetwork,updateNetwork,listNetworks",
          "required": false,
          "since": "4.17.0",
          "type": "uuid"
        },
        {
          "description": "the network implementation uri for the private gateway",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "the gateway of the Private gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "the uuid of the network offering to use for the private gateways network connection",
          "length": 255,
          "name": "networkofferingid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "source NAT supported value. Default value false. If 'true' source NAT is enabled on the private gateway 'false': sourcenat is not supported",
          "length": 255,
          "name": "sourcenatsupported",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the netmask of the Private gateway",
          "length": 255,
          "name": "netmask",
          "required": true,
          "type": "string"
        },
        {
          "description": "the Physical Network ID the network belongs to",
          "length": 255,
          "name": "physicalnetworkid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the IP address of the Private gateaway",
          "length": 255,
          "name": "ipaddress",
          "required": true,
          "type": "string"
        },
        {
          "description": "the VPC network belongs to",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the ID of the network ACL",
          "length": 255,
          "name": "aclid",
          "related": "createNetworkACLList",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "createPrivateGateway",
      "response": [
        {
          "description": "the ID of the Network associated with this private gateway",
          "name": "associatednetworkid",
          "type": "string"
        },
        {},
        {
          "description": "the physical network id",
          "name": "physicalnetworkid",
          "type": "string"
        },
        {
          "description": "VPC id the private gateway belongs to",
          "name": "vpcid",
          "type": "string"
        },
        {
          "description": "ACL name set for private gateway",
          "name": "aclname",
          "type": "string"
        },
        {
          "description": "the id of the private gateway",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the domain associated with the private gateway",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "Source Nat enable status",
          "name": "sourcenatsupported",
          "type": "boolean"
        },
        {
          "description": "the name of the Network associated with this private gateway",
          "name": "associatednetwork",
          "type": "string"
        },
        {
          "description": "the gateway",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the private gateway's netmask",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the ID of the domain associated with the private gateway",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "VPC name the private gateway belongs to",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "zone id of the private gateway",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the name of the zone the private gateway belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the network implementation uri for the private gateway",
          "name": "vlan",
          "type": "string"
        },
        {
          "description": "the account associated with the private gateway",
          "name": "account",
          "type": "string"
        },
        {
          "description": "State of the gateway, can be Creating, Ready, Deleting",
          "name": "state",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the private gateway",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the private gateway's ip address",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the project name of the private gateway",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "ACL Id set for private gateway",
          "name": "aclid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.17.0"
    },
    {
      "description": "Find user account by API key",
      "isasync": false,
      "name": "getUser",
      "params": [
        {
          "description": "API key of the user",
          "length": 255,
          "name": "userapikey",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the type of the role",
          "name": "roletype",
          "type": "string"
        },
        {
          "description": "the user ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the name of the role",
          "name": "rolename",
          "type": "string"
        },
        {
          "description": "true if user has two factor authentication enabled",
          "name": "is2faenabled",
          "type": "boolean"
        },
        {
          "description": "the domain name of the user",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the date and time the user account was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID of the user",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user state",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the role",
          "name": "roleid",
          "type": "string"
        },
        {
          "description": "the secret key of the user",
          "name": "secretkey",
          "type": "string"
        },
        {
          "description": "the account name of the user",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the api key of the user",
          "name": "apikey",
          "type": "string"
        },
        {
          "description": "the boolean value representing if the updating target is in caller's child domain",
          "name": "iscallerchilddomain",
          "type": "boolean"
        },
        {
          "description": "true if user has two factor authentication is mandated",
          "name": "is2famandated",
          "type": "boolean"
        },
        {
          "description": "the account ID of the user",
          "name": "accountid",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the user email address",
          "name": "email",
          "type": "string"
        },
        {
          "description": "the source type of the user in lowercase, such as native, ldap, saml2",
          "name": "usersource",
          "type": "string"
        },
        {
          "description": "true if user is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the user firstname",
          "name": "firstname",
          "type": "string"
        },
        {
          "description": "the user name",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the timezone user was created in",
          "name": "timezone",
          "type": "string"
        },
        {
          "description": "the account type of the user",
          "name": "accounttype",
          "type": "integer"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the user lastname",
          "name": "lastname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists load balancer rules.",
      "isasync": false,
      "name": "listLoadBalancerRules",
      "params": [
        {
          "description": "list by network ID the rule belongs to",
          "length": 255,
          "name": "networkid",
          "related": "createNetwork,updateNetwork,listNetworks",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "list resources by account. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "list objects by project; if projectid=-1 lists All VMs",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the public IP address ID of the load balancer rule",
          "length": 255,
          "name": "publicipid",
          "related": "associateIpAddress,listPublicIpAddresses",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the availability zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list resources by display flag; only ROOT admin is eligible to pass this parameter",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        },
        {
          "description": "the name of the load balancer rule",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the virtual machine of the load balancer rule",
          "length": 255,
          "name": "virtualmachineid",
          "related": "destroyVirtualMachine,scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List resources by tags (key/value pairs)",
          "length": 255,
          "name": "tags",
          "required": false,
          "type": "map"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the public ip address",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the protocol of the loadbalanacer rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the account of the load balancer rule",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the description of the load balancer",
          "name": "description",
          "type": "string"
        },
        {},
        {
          "description": "the list of resource tags associated with load balancer",
          "name": "tags",
          "response": [
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the id of the guest network the lb rule belongs to",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the name of the zone the load balancer rule belongs to",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the project name of the load balancer",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the load balancer algorithm (source, roundrobin, leastconn)",
          "name": "algorithm",
          "type": "string"
        },
        {
          "description": "the load balancer rule ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the public port",
          "name": "publicport",
          "type": "string"
        },
        {
          "description": "the private port",
          "name": "privateport",
          "type": "string"
        },
        {
          "description": "the id of the zone the rule belongs to",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the public ip address id",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the domain ID of the load balancer rule",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the CIDR list to allow traffic, all other CIDRs will be blocked. Multiple entries must be separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the load balancer",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the load balancer",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the domain of the load balancer rule",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a firewall rule",
      "isasync": true,
      "name": "deleteFirewallRule",
      "params": [
        {
          "description": "the ID of the firewall rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Upload a certificate to CloudStack",
      "isasync": false,
      "name": "uploadSslCert",
      "params": [
        {
          "description": "Private key",
          "length": 16384,
          "name": "privatekey",
          "required": true,
          "type": "string"
        },
        {
          "description": "Password for the private key",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional project for the SSL certificate",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "domain ID of the account owning the SSL certificate",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Name for the uploaded certificate",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "Enables revocation checking for certificates",
          "length": 255,
          "name": "enabledrevocationcheck",
          "required": false,
          "since": "4.15",
          "type": "boolean"
        },
        {
          "description": "account that will own the SSL certificate",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "SSL certificate",
          "length": 16384,
          "name": "certificate",
          "required": true,
          "type": "string"
        },
        {
          "description": "Certificate chain of trust",
          "length": 2097152,
          "name": "certchain",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name of the network owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "certificate fingerprint",
          "name": "fingerprint",
          "type": "string"
        },
        {
          "description": "the project name of the certificate",
          "name": "project",
          "type": "string"
        },
        {
          "description": "certificate chain",
          "name": "certchain",
          "type": "string"
        },
        {
          "description": "the domain id of the network owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "SSL certificate ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project id of the certificate",
          "name": "projectid",
          "type": "string"
        },
        {},
        {
          "description": "List of loabalancers this certificate is bound to",
          "name": "loadbalancerrulelist",
          "type": "list"
        },
        {
          "description": "name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "account for the certificate",
          "name": "account",
          "type": "string"
        },
        {
          "description": "certificate",
          "name": "certificate",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates site to site vpn customer gateway",
      "isasync": true,
      "name": "createVpnCustomerGateway",
      "params": [
        {
          "description": "Lifetime of phase 2 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "esplifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "Lifetime of phase 1 VPN connection to the customer gateway, in seconds",
          "length": 255,
          "name": "ikelifetime",
          "required": false,
          "type": "long"
        },
        {
          "description": "Force Encapsulation for NAT traversal",
          "length": 255,
          "name": "forceencap",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "For IKEv2, whether to split multiple right subnet cidrs into multiple connection statements.",
          "length": 255,
          "name": "splitconnections",
          "required": false,
          "since": "4.15.1",
          "type": "boolean"
        },
        {
          "description": "ESP policy of the customer gateway",
          "length": 255,
          "name": "esppolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "the account associated with the gateway. Must be used with the domainId parameter.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "IKE policy of the customer gateway",
          "length": 255,
          "name": "ikepolicy",
          "required": true,
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway. Multiple entries must be separated by a single comma character (,).",
          "length": 255,
          "name": "cidrlist",
          "required": true,
          "type": "string"
        },
        {
          "description": "If DPD is enabled for VPN connection",
          "length": 255,
          "name": "dpd",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Connections marked with 'ike' will use 'ikev2' when initiating, but accept any protocol version when responding. Defaults to ike",
          "length": 255,
          "name": "ikeversion",
          "required": false,
          "since": "4.15.1",
          "type": "string"
        },
        {
          "description": "name of this customer gateway",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the domain ID associated with the gateway. If used with the account parameter returns the gateway associated with the account for the specified domain.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "create site-to-site VPN customer gateway for the project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "since": "4.6",
          "type": "uuid"
        },
        {
          "description": "public ip address id of the customer gateway",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        },
        {
          "description": "IPsec Preshared-Key of the customer gateway. Cannot contain newline or double quotes.",
          "length": 255,
          "name": "ipsecpsk",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the owner",
          "name": "account",
          "type": "string"
        },
        {
          "description": "Lifetime of IKE SA of customer gateway",
          "name": "ikelifetime",
          "type": "long"
        },
        {
          "description": "the domain name of the owner",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "if DPD is enabled for customer gateway",
          "name": "dpd",
          "type": "boolean"
        },
        {
          "description": "if Force NAT Encapsulation is enabled for customer gateway",
          "name": "forceencap",
          "type": "boolean"
        },
        {
          "description": "IPsec preshared-key of customer gateway",
          "name": "ipsecpsk",
          "type": "string"
        },
        {
          "description": "the project name",
          "name": "project",
          "type": "string"
        },
        {
          "description": "For IKEv2, whether to split multiple right subnet cidrs into multiple connection statements.",
          "name": "splitconnections",
          "type": "boolean"
        },
        {
          "description": "IPsec policy of customer gateway",
          "name": "esppolicy",
          "type": "string"
        },
        {
          "description": "IKE policy of customer gateway",
          "name": "ikepolicy",
          "type": "string"
        },
        {
          "description": "guest ip of the customer gateway",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the domain id of the owner",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "Which IKE Version to use, one of ike (autoselect), ikev1, or ikev2. Defaults to ike",
          "name": "ikeversion",
          "type": "string"
        },
        {
          "description": "Lifetime of ESP SA of customer gateway",
          "name": "esplifetime",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "name of the customer gateway",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the vpn gateway ID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "public ip address id of the customer gateway",
          "name": "gateway",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "guest cidr list of the customer gateway. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the project id",
          "name": "projectid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a Management network IP range.",
      "isasync": true,
      "name": "createManagementNetworkIpRange",
      "params": [
        {
          "description": "The starting IP address.",
          "length": 255,
          "name": "startip",
          "required": true,
          "type": "string"
        },
        {
          "description": "The ending IP address.",
          "length": 255,
          "name": "endip",
          "required": false,
          "type": "string"
        },
        {
          "description": "Specify if range is dedicated for CPVM and SSVM.",
          "length": 255,
          "name": "forsystemvms",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The netmask for the management network.",
          "length": 255,
          "name": "netmask",
          "required": true,
          "type": "string"
        },
        {
          "description": "Optional. The vlan id the ip range sits on, default to Null when it is not specified which means your network is not on any Vlan",
          "length": 255,
          "name": "vlan",
          "required": false,
          "type": "string"
        },
        {
          "description": "UUID of POD, where the IP range belongs to.",
          "length": 255,
          "name": "podid",
          "related": "createManagementNetworkIpRange",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "The gateway for the management network.",
          "length": 255,
          "name": "gateway",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the IP ranges for the Pod",
          "name": "ipranges",
          "response": [
            {
              "description": "indicates Vlan ID for the range",
              "name": "vlanid",
              "type": "string"
            },
            {
              "description": "the gateway for the range",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "indicates if range is dedicated for CPVM and SSVM",
              "name": "forsystemvms",
              "type": "string"
            },
            {
              "description": "the ending IP for the range",
              "name": "endip",
              "type": "string"
            },
            {
              "description": "the starting IP for the range",
              "name": "startip",
              "type": "string"
            },
            {
              "description": "the CIDR for the range",
              "name": "cidr",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "indicates Vlan ID for the range. This parameter is deprecated, please use 'vlanid' from ipranges parameter.",
          "name": "vlanid",
          "type": "list"
        },
        {
          "description": "the capacity of the Pod",
          "name": "capacity",
          "response": [
            {
              "description": "the Cluster ID",
              "name": "clusterid",
              "type": "string"
            },
            {
              "description": "the percentage of capacity currently in use",
              "name": "percentused",
              "type": "string"
            },
            {
              "description": "the Zone ID",
              "name": "zoneid",
              "type": "string"
            },
            {
              "description": "the Zone name",
              "name": "zonename",
              "type": "string"
            },
            {
              "description": "the capacity name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the Cluster name",
              "name": "clustername",
              "type": "string"
            },
            {
              "description": "the Pod ID",
              "name": "podid",
              "type": "string"
            },
            {
              "description": "the Pod name",
              "name": "podname",
              "type": "string"
            },
            {
              "description": "the capacity currently in use",
              "name": "capacityused",
              "type": "long"
            },
            {
              "description": "the capacity currently in allocated",
              "name": "capacityallocated",
              "type": "long"
            },
            {
              "description": "the capacity type",
              "name": "type",
              "type": "short"
            },
            {
              "description": "the total capacity available",
              "name": "capacitytotal",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the netmask of the Pod",
          "name": "netmask",
          "type": "string"
        },
        {
          "description": "the allocation state of the Pod",
          "name": "allocationstate",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the starting IP for the Pod. This parameter is deprecated, please use 'startip' from ipranges parameter.",
          "name": "startip",
          "type": "list"
        },
        {
          "description": "the Zone ID of the Pod",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the ID of the Pod",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ending IP for the Pod. This parameter is deprecated, please use 'endip' from ipranges parameter.",
          "name": "endip",
          "type": "list"
        },
        {
          "description": "indicates if range is dedicated for CPVM and SSVM. This parameter is deprecated, please use 'forsystemvms' from ipranges parameter.",
          "name": "forsystemvms",
          "type": "list"
        },
        {
          "description": "the Zone name of the Pod",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the gateway of the Pod",
          "name": "gateway",
          "type": "string"
        },
        {
          "description": "the name of the Pod",
          "name": "name",
          "type": "string"
        }
      ],
      "since": "4.11.0.0"
    },
    {
      "description": "Retrieves a Cisco Nexus 1000v Virtual Switch Manager device associated with a Cluster",
      "isasync": false,
      "name": "listCiscoNexusVSMs",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "Id of the CloudStack cluster in which the Cisco Nexus 1000v VSM appliance.",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Id of the CloudStack cluster in which the Cisco Nexus 1000v VSM appliance.",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "storage vlan id of the VSM",
          "name": "vsmstoragevlanid",
          "type": "int"
        },
        {
          "description": "The VSM is a switch supervisor. This is the VSM's switch domain id",
          "name": "vsmdomainid",
          "type": "string"
        },
        {
          "description": "control vlan id of the VSM",
          "name": "vsmctrlvlanid",
          "type": "int"
        },
        {
          "description": "device id of the Cisco N1KV VSM device",
          "name": "vsmdeviceid",
          "type": "string"
        },
        {
          "description": "The mode of the VSM (standalone/HA)",
          "name": "vsmconfigmode",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "management vlan id of the VSM",
          "name": "vsmmgmtvlanid",
          "type": "string"
        },
        {
          "description": "The Device State (Enabled/Disabled) of the VSM",
          "name": "vsmdevicestate",
          "type": "string"
        },
        {
          "description": "device name",
          "name": "vsmdevicename",
          "type": "string"
        },
        {
          "description": "the management IP address of the external Cisco Nexus 1000v Virtual Supervisor Module",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "The Config State (Primary/Standby) of the VSM",
          "name": "vsmconfigstate",
          "type": "string"
        },
        {
          "description": "packet vlan id of the VSM",
          "name": "vsmpktvlanid",
          "type": "int"
        },
        {
          "description": "device state",
          "name": "vsmdevicestate",
          "type": "string"
        }
      ]
    },
    {
      "description": "Adds vpn users",
      "isasync": true,
      "name": "addVpnUser",
      "params": [
        {
          "description": "add vpn user to the specific project",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "password for the username",
          "length": 255,
          "name": "password",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional account for the vpn user. Must be used with domainId.",
          "length": 255,
          "name": "account",
          "required": false,
          "type": "string"
        },
        {
          "description": "username for the vpn user",
          "length": 255,
          "name": "username",
          "required": true,
          "type": "string"
        },
        {
          "description": "an optional domainId for the vpn user. If the account parameter is used, domainId must also be used.",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the username of the vpn user",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the vpn userID",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the Vpn User",
          "name": "state",
          "type": "string"
        }
      ]
    },
    {
      "description": "remove an annotation.",
      "isasync": false,
      "name": "removeAnnotation",
      "params": [
        {
          "description": "the id of the annotation",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "True if the annotation is available for admins only",
          "name": "adminsonly",
          "type": "boolean"
        },
        {},
        {
          "description": "the name of the entity to which this annotation pertains",
          "name": "entityname",
          "type": "string"
        },
        {
          "description": "The (uu)id of the user that entered the annotation",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the removal timestamp for this annotation",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "the contents of the annotation",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "The username of the user that entered the annotation",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the (uu)id of the annotation",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the (uu)id of the entity to which this annotation pertains",
          "name": "entityid",
          "type": "string"
        },
        {
          "description": "the creation timestamp for this annotation",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the type of the annotated entity",
          "name": "entitytype",
          "type": "string"
        }
      ],
      "since": "4.11"
    },
    {
      "description": "add a baremetal host",
      "isasync": false,
      "name": "addBaremetalHost",
      "params": [
        {
          "description": "the cluster name for the host",
          "length": 255,
          "name": "clustername",
          "required": false,
          "type": "string"
        },
        {
          "description": "the Pod ID for the host",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ip address intentionally allocated to this host after provisioning",
          "length": 255,
          "name": "ipaddress",
          "required": false,
          "type": "string"
        },
        {
          "description": "hypervisor type of the host",
          "length": 255,
          "name": "hypervisor",
          "required": true,
          "type": "string"
        },
        {
          "description": "list of tags to be added to the host",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "type": "list"
        },
        {
          "description": "the cluster ID for the host",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the Zone ID for the host",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the password for the host; required to be passed for hypervisors other than VMWare",
          "length": 255,
          "name": "password",
          "required": false,
          "type": "string"
        },
        {
          "description": "the username for the host; required to be passed for hypervisors other than VMWare",
          "length": 255,
          "name": "username",
          "required": false,
          "type": "string"
        },
        {
          "description": "Allocation state of this Host for allocation of new resources",
          "length": 255,
          "name": "allocationstate",
          "required": false,
          "type": "string"
        },
        {
          "description": "the host URL",
          "length": 255,
          "name": "url",
          "required": true,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the management server ID of the host",
          "name": "managementserverid",
          "type": "string"
        },
        {
          "description": "the cluster name of the host",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated in MHz",
          "name": "cpuallocatedvalue",
          "type": "long"
        },
        {
          "description": "the host hypervisor",
          "name": "hypervisor",
          "type": "hypervisortype"
        },
        {
          "description": "the amount of the host's CPU currently allocated in percentage",
          "name": "cpuallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently allocated",
          "name": "memoryallocated",
          "type": "long"
        },
        {
          "description": "the state of the host",
          "name": "state",
          "type": "status"
        },
        {
          "description": "the date and time the host was last pinged",
          "name": "lastpinged",
          "type": "date"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the cpu average load on the host",
          "name": "cpuloadaverage",
          "type": "double"
        },
        {
          "description": "events available for the host",
          "name": "events",
          "type": "string"
        },
        {
          "description": "the last annotation set on this host by an admin",
          "name": "annotation",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the CPU speed of the host",
          "name": "cpuspeed",
          "type": "long"
        },
        {
          "description": "the last time this host was annotated",
          "name": "lastannotated",
          "type": "date"
        },
        {
          "description": "the ID of the host",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the host HA information information",
          "name": "hostha",
          "type": "hostharesponse"
        },
        {
          "description": "true if the host supports encryption",
          "name": "encryptionsupported",
          "type": "boolean"
        },
        {
          "description": "the resource state of the host",
          "name": "resourcestate",
          "type": "string"
        },
        {
          "description": "true if this host is suitable(has enough capacity and satisfies all conditions like hosttags, max guests vm limit etc) to migrate a VM to it , false otherwise",
          "name": "suitableformigration",
          "type": "boolean"
        },
        {
          "description": "true if the host is disconnected. False otherwise.",
          "name": "disconnected",
          "type": "date"
        },
        {
          "description": "the date and time the host was removed",
          "name": "removed",
          "type": "date"
        },
        {
          "description": "true if this host has enough CPU and RAM capacity to migrate a VM to it, false otherwise",
          "name": "hasenoughcapacity",
          "type": "boolean"
        },
        {
          "description": "the Zone ID of the host",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the Pod ID of the host",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the host type",
          "name": "type",
          "type": "type"
        },
        {
          "description": "the amount of the host's CPU after applying the cpu.overprovisioning.factor",
          "name": "cpuwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory currently used",
          "name": "memoryused",
          "type": "long"
        },
        {
          "description": "the memory total of the host, this parameter is deprecated use memorywithoverprovisioning",
          "name": "memorytotal",
          "type": "long"
        },
        {
          "description": "the OS category ID of the host",
          "name": "oscategoryid",
          "type": "string"
        },
        {},
        {
          "description": "the admin that annotated this host",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if the host is Ha host (dedicated to vms started by HA process; false otherwise",
          "name": "hahost",
          "type": "boolean"
        },
        {
          "description": "true if the host has capability to support UEFI boot",
          "name": "ueficapability",
          "type": "boolean"
        },
        {
          "description": "the IP address of the host",
          "name": "ipaddress",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated after applying the cpu.overprovisioning.factor",
          "name": "cpuallocatedwithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated in percentage",
          "name": "memoryallocatedpercentage",
          "type": "string"
        },
        {
          "description": "the name of the host",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the amount of the host's memory after applying the mem.overprovisioning.factor",
          "name": "memorywithoverprovisioning",
          "type": "string"
        },
        {
          "description": "the host out-of-band management information",
          "name": "outofbandmanagement",
          "type": "outofbandmanagementresponse"
        },
        {
          "description": "true if local storage is active, false otherwise",
          "name": "islocalstorageactive",
          "type": "boolean"
        },
        {
          "description": "the number of CPU sockets on the host",
          "name": "cpusockets",
          "type": "integer"
        },
        {
          "description": "the amount of the host's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the Pod name of the host",
          "name": "podname",
          "type": "string"
        },
        {},
        {
          "description": "the incoming network traffic on the host",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the cluster ID of the host",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the host version",
          "name": "version",
          "type": "string"
        },
        {
          "description": "the date and time the host was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the hypervisor version",
          "name": "hypervisorversion",
          "type": "string"
        },
        {
          "description": "the amount of the host's CPU currently allocated",
          "name": "cpuallocated",
          "type": "string"
        },
        {
          "description": "GPU cards present in the host",
          "name": "gpugroup",
          "response": [
            {
              "description": "GPU cards present in the host",
              "name": "gpugroupname",
              "type": "string"
            },
            {
              "description": "the list of enabled vGPUs",
              "name": "vgpu",
              "response": [
                {
                  "description": "Model Name of vGPU",
                  "name": "vgputype",
                  "type": "string"
                },
                {
                  "description": "Remaining capacity in terms of no. of more VMs that can be deployped with this vGPU type",
                  "name": "remainingcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum displays per user",
                  "name": "maxheads",
                  "type": "long"
                },
                {
                  "description": "Maximum vgpu can be created with this vgpu type on the given gpu group",
                  "name": "maxcapacity",
                  "type": "long"
                },
                {
                  "description": "Maximum no. of vgpu per gpu card (pgpu)",
                  "name": "maxvgpuperpgpu",
                  "type": "long"
                },
                {
                  "description": "Video RAM for this vGPU type",
                  "name": "videoram",
                  "type": "long"
                },
                {
                  "description": "Maximum X resolution per display",
                  "name": "maxresolutionx",
                  "type": "long"
                },
                {
                  "description": "Maximum Y resolution per display",
                  "name": "maxresolutiony",
                  "type": "long"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "Host details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the CPU number of the host",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the total disk size of the host",
          "name": "disksizetotal",
          "type": "long"
        },
        {
          "description": "the amount of the host's memory currently allocated in bytes",
          "name": "memoryallocatedbytes",
          "type": "long"
        },
        {
          "description": "the OS category name of the host",
          "name": "oscategoryname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the host",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "the host's currently allocated disk size",
          "name": "disksizeallocated",
          "type": "long"
        },
        {
          "description": "the cluster type of the cluster that host belongs to",
          "name": "clustertype",
          "type": "string"
        },
        {
          "description": "capabilities of the host",
          "name": "capabilities",
          "type": "string"
        },
        {
          "description": "the Zone name of the host",
          "name": "zonename",
          "type": "string"
        }
      ]
    },
    {
      "description": "Deletes a project role permission in the project",
      "isasync": false,
      "name": "deleteProjectRolePermission",
      "params": [
        {
          "description": "ID of the project where the project role permission is to be deleted",
          "length": 255,
          "name": "projectid",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "ID of the project role permission to be deleted",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.15.0"
    },
    {
      "description": "Deletes a role permission",
      "isasync": false,
      "name": "deleteRolePermission",
      "params": [
        {
          "description": "ID of the role permission",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ],
      "since": "4.9.0"
    },
    {
      "description": "Lists all configuration groups (primarily used for UI).",
      "isasync": false,
      "name": "listConfigurationGroups",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "lists configuration group by group name",
          "length": 255,
          "name": "group",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {
          "description": "the precedence of the configuration group",
          "name": "precedence",
          "type": "long"
        },
        {
          "description": "the subgroups of the configuration group",
          "name": "subgroup",
          "response": [
            {
              "description": "the name of the configuration subgroup",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the precedence of the configuration subgroup",
              "name": "precedence",
              "type": "long"
            }
          ],
          "type": "list"
        },
        {
          "description": "the name of the configuration group",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the description of the configuration group",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {}
      ],
      "since": "4.18.0"
    },
    {
      "description": "Releases a Pod IP back to the Pod",
      "isasync": false,
      "name": "releasePodIpAddress",
      "params": [
        {
          "description": "UUID of the Pod IP",
          "length": 255,
          "name": "id",
          "required": true,
          "type": "long"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {}
      ]
    },
    {
      "description": "Updates VPC offering",
      "isasync": true,
      "name": "updateVPCOffering",
      "params": [
        {
          "description": "the name of the VPC offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "the id of the VPC offering",
          "length": 255,
          "name": "id",
          "related": "updateVPCOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "sort key of the VPC offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the display text of the VPC offering",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing domain(s) as comma separated string, public for public offerings",
          "length": 4096,
          "name": "domainid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing zone(s) as comma separated string, all for all zones offerings",
          "length": 255,
          "name": "zoneid",
          "required": false,
          "since": "4.13",
          "type": "string"
        },
        {
          "description": "update state for the VPC offering; supported states - Enabled/Disabled",
          "length": 255,
          "name": "state",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "state of the vpc offering. Can be Disabled/Enabled",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the internet protocol of the vpc offering",
          "name": "internetprotocol",
          "type": "string"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "the id of the vpc offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": " indicated if the offering can support region level vpc",
          "name": "supportsregionLevelvpc",
          "type": "boolean"
        },
        {
          "description": "true if vpc offering is default, false otherwise",
          "name": "isdefault",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the date this vpc offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the vpc offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "the list of supported services",
          "name": "service",
          "response": [
            {
              "description": "the service name",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the list of capabilities",
              "name": "capability",
              "response": [
                {
                  "description": "the capability value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the capability name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "can this service capability value can be choosable while creatine network offerings",
                  "name": "canchooseservicecapability",
                  "type": "boolean"
                }
              ],
              "type": "list"
            },
            {
              "description": "the service provider name",
              "name": "provider",
              "response": [
                {
                  "description": "the physical network this belongs to",
                  "name": "physicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "the provider name",
                  "name": "name",
                  "type": "string"
                },
                {
                  "description": "state of the network provider",
                  "name": "state",
                  "type": "string"
                },
                {
                  "description": "the destination physical network",
                  "name": "destinationphysicalnetworkid",
                  "type": "string"
                },
                {
                  "description": "true if individual services can be enabled/disabled",
                  "name": "canenableindividualservice",
                  "type": "boolean"
                },
                {
                  "description": "services for this provider",
                  "name": "servicelist",
                  "type": "list"
                },
                {
                  "description": "uuid of the network provider",
                  "name": "id",
                  "type": "string"
                }
              ],
              "type": "list"
            }
          ],
          "type": "list"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the name of the vpc offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": " indicates if the vpc offering supports distributed router for one-hop forwarding",
          "name": "distributedvpcrouter",
          "type": "boolean"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates remote access vpn",
      "isasync": true,
      "name": "updateRemoteAccessVpn",
      "params": [
        {
          "description": "id of the remote access vpn",
          "length": 255,
          "name": "id",
          "related": "updateRemoteAccessVpn",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the vpn to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "is vpn for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the range of ips to allocate to the clients",
          "name": "iprange",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the project name of the vpn",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the id of the remote access vpn",
          "name": "id",
          "type": "string"
        },
        {},
        {
          "description": "the project id of the vpn",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the account of the remote access vpn",
          "name": "account",
          "type": "string"
        },
        {},
        {
          "description": "the ipsec preshared key",
          "name": "presharedkey",
          "type": "string"
        },
        {
          "description": "the public ip address of the vpn server",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the domain name of the account of the remote access vpn",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the domain id of the account of the remote access vpn",
          "name": "domainid",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Lists user two factor authenticator providers",
      "isasync": false,
      "name": "listUserTwoFactorAuthenticatorProviders",
      "params": [
        {
          "description": "List user two factor authenticator provider by name",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {},
        {
          "description": "the description of the user two factor authenticator provider",
          "name": "description",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the user two factor authenticator provider name",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        }
      ],
      "since": "4.18.0"
    },
    {
      "description": "Scales the virtual machine to a new service offering. This command also considers the volume size in the service offering or disk offering linked to the new service offering and apply all characteristics to the root volume.",
      "isasync": true,
      "name": "scaleVirtualMachine",
      "params": [
        {
          "description": "Flag for automatic migration of the root volume with new compute offering whenever migration is required to apply the offering",
          "length": 255,
          "name": "automigrate",
          "required": false,
          "since": "4.17",
          "type": "boolean"
        },
        {
          "description": "New minimum number of IOPS for the custom disk offering",
          "length": 255,
          "name": "miniops",
          "required": false,
          "since": "4.17",
          "type": "long"
        },
        {
          "description": "New maximum number of IOPS for the custom disk offering",
          "length": 255,
          "name": "maxiops",
          "required": false,
          "since": "4.17",
          "type": "long"
        },
        {
          "description": "name value pairs of custom parameters for cpuspeed, memory and cpunumber. example details[i].name=value",
          "length": 255,
          "name": "details",
          "required": false,
          "type": "map"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "destroyVirtualMachine,scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Verify OK to Shrink",
          "length": 255,
          "name": "shrinkok",
          "required": false,
          "since": "4.17",
          "type": "boolean"
        },
        {
          "description": "the ID of the service offering for the virtual machine",
          "length": 255,
          "name": "serviceofferingid",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": true,
          "type": "uuid"
        }
      ],
      "response": [
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Destroys a virtual machine. Once destroyed, only the administrator can recover it.",
      "isasync": true,
      "name": "destroyVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "destroyVirtualMachine,scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "If true is passed, the vm is expunged immediately. False by default.",
          "length": 255,
          "name": "expunge",
          "required": false,
          "since": "4.2.1",
          "type": "boolean"
        },
        {
          "description": "Comma separated list of UUIDs for volumes that will be deleted",
          "length": 255,
          "name": "volumeids",
          "related": "attachVolume,createVolume,detachVolume,migrateVolume,resizeVolume,updateVolume,uploadVolume,listVolumes,destroyVolume,recoverVolume",
          "required": false,
          "since": "4.12.0",
          "type": "list"
        }
      ],
      "related": "scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {},
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {},
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {},
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates egress firewall rule ",
      "isasync": true,
      "name": "updateEgressFirewallRule",
      "params": [
        {
          "description": "an optional field, in case you want to set a custom id to the resource. Allowed to Root Admins only",
          "length": 255,
          "name": "customid",
          "required": false,
          "since": "4.4",
          "type": "string"
        },
        {
          "description": "the ID of the egress firewall rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "an optional field, whether to the display the rule to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {},
        {},
        {
          "description": "the public ip address id for the firewall rule",
          "name": "ipaddressid",
          "type": "string"
        },
        {
          "description": "the ending port of firewall rule's port range",
          "name": "endport",
          "type": "integer"
        },
        {
          "description": "the cidr list to forward traffic from. Multiple entries are separated by a single comma character (,).",
          "name": "cidrlist",
          "type": "string"
        },
        {
          "description": "the cidr list to forward traffic to. Multiple entries are separated by a single comma character (,).",
          "name": "destcidrlist",
          "type": "string"
        },
        {
          "description": "the ID of the firewall rule",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the state of the rule",
          "name": "state",
          "type": "string"
        },
        {
          "description": "error code for this icmp message",
          "name": "icmpcode",
          "type": "integer"
        },
        {
          "description": "type of the icmp message being sent",
          "name": "icmptype",
          "type": "integer"
        },
        {
          "description": "the starting port of firewall rule's port range",
          "name": "startport",
          "type": "integer"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is rule for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the list of resource tags associated with the rule",
          "name": "tags",
          "response": [
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "list"
        },
        {
          "description": "the traffic type for the firewall rule",
          "name": "traffictype",
          "type": "string"
        },
        {
          "description": "the network id of the firewall rule",
          "name": "networkid",
          "type": "string"
        },
        {
          "description": "the protocol of the firewall rule",
          "name": "protocol",
          "type": "string"
        },
        {
          "description": "the public ip address for the firewall rule",
          "name": "ipaddress",
          "type": "string"
        }
      ],
      "since": "4.4"
    },
    {
      "description": "Lists all supported OS categories for this cloud.",
      "isasync": false,
      "name": "listOsCategories",
      "params": [
        {
          "description": "list Os category by id",
          "length": 255,
          "name": "id",
          "related": "listOsCategories",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "list os category by name",
          "length": 255,
          "name": "name",
          "required": false,
          "since": "3.0.1",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the name of the OS category",
          "name": "name",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the ID of the OS category",
          "name": "id",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all available service offerings.",
      "isasync": false,
      "name": "listServiceOfferings",
      "params": [
        {
          "description": "defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.",
          "length": 255,
          "name": "isrecursive",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "id of zone disk offering is associated with",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "since": "4.13",
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "the CPU speed that listed offerings must support",
          "length": 255,
          "name": "cpuspeed",
          "required": false,
          "since": "4.15",
          "type": "integer"
        },
        {
          "description": "ID of the service offering",
          "length": 255,
          "name": "id",
          "related": "updateServiceOffering,listServiceOfferings",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "is this a system vm offering",
          "length": 255,
          "name": "issystem",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the system VM type. Possible types are \"consoleproxy\", \"secondarystoragevm\" or \"domainrouter\".",
          "length": 255,
          "name": "systemvmtype",
          "required": false,
          "type": "string"
        },
        {
          "description": "list only resources belonging to the domain specified",
          "length": 255,
          "name": "domainid",
          "related": "listDomains",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "the ID of the virtual machine. Pass this in if you want to see the available service offering that a virtual machine can be changed to.",
          "length": 255,
          "name": "virtualmachineid",
          "related": "scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "name of the service offering",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "listed offerings support root disk encryption",
          "length": 255,
          "name": "encryptroot",
          "required": false,
          "since": "4.18",
          "type": "boolean"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the RAM memory that listed offering must support",
          "length": 255,
          "name": "memory",
          "required": false,
          "since": "4.15",
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false. Resources dedicated to a project are listed only if using the projectid parameter.",
          "length": 255,
          "name": "listall",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "the CPU number that listed offerings must support",
          "length": 255,
          "name": "cpunumber",
          "required": false,
          "since": "4.15",
          "type": "integer"
        }
      ],
      "related": "updateServiceOffering",
      "response": [
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        },
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "is true if the offering is customized",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "Root disk size in GB",
          "name": "rootdisksize",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {
          "description": "length (in second) of the burst",
          "name": "diskIopsReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "True/False to indicate the strictness of the disk offering association with the compute offering. When set to true, override of disk offering is not allowed when VM is deployed and change disk offering is not allowed for the ROOT disk after the VM is deployed",
          "name": "diskofferingstrictness",
          "type": "boolean"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "name": "diskIopsWriteRateMax",
          "type": "long"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "name": "diskBytesWriteRateMax",
          "type": "long"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the vsphere storage policy tagged to the service offering in case of VMware",
          "name": "vspherestoragepolicy",
          "type": "string"
        },
        {
          "description": "the tags for the service offering",
          "name": "storagetags",
          "type": "string"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "true if virtual machine root disk will be encrypted on storage",
          "name": "encryptroot",
          "type": "boolean"
        },
        {
          "description": "burst io requests read rate of the disk offering",
          "name": "diskIopsReadRateMax",
          "type": "long"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "the ID of the disk offering to which service offering is linked",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "true if virtual machine needs to be dynamically scalable of cpu or memory",
          "name": "dynamicscalingenabled",
          "type": "boolean"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesWriteRateMaxLength",
          "type": "long"
        },
        {},
        {},
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        },
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the clock rate CPU speed in Mhz",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskIopsWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "name": "diskBytesReadRateMax",
          "type": "long"
        }
      ]
    },
    {
      "description": "Removes a load balancer rule association with global load balancer rule",
      "isasync": true,
      "name": "removeFromGlobalLoadBalancerRule",
      "params": [
        {
          "description": "The ID of the load balancer rule",
          "length": 255,
          "name": "id",
          "related": "",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the list load balancer rules that will be assigned to global load balancer rule",
          "length": 255,
          "name": "loadbalancerrulelist",
          "related": "",
          "required": true,
          "type": "list"
        }
      ],
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "true if operation is executed successfully",
          "name": "success",
          "type": "boolean"
        },
        {
          "description": "any text associated with the success or failure",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {},
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists affinity group types available",
      "isasync": false,
      "name": "listAffinityGroupTypes",
      "params": [
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {},
        {},
        {
          "description": "the type of the affinity group",
          "name": "type",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Lists all the system wide capacities.",
      "isasync": false,
      "name": "listCapacity",
      "params": [
        {
          "description": "",
          "length": 255,
          "name": "page",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists capacity by the Zone ID",
          "length": 255,
          "name": "zoneid",
          "related": "listZones",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "List by keyword",
          "length": 255,
          "name": "keyword",
          "required": false,
          "type": "string"
        },
        {
          "description": "recalculate capacities and fetch the latest",
          "length": 255,
          "name": "fetchlatest",
          "required": false,
          "since": "3.0.0",
          "type": "boolean"
        },
        {
          "description": "Sort the results. Available values: Usage",
          "length": 255,
          "name": "sortby",
          "required": false,
          "since": "3.0.0",
          "type": "string"
        },
        {
          "description": "",
          "length": 255,
          "name": "pagesize",
          "required": false,
          "type": "integer"
        },
        {
          "description": "lists capacity by the Cluster ID",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": false,
          "since": "3.0.0",
          "type": "uuid"
        },
        {
          "description": "lists capacity by the Pod ID",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "lists capacity by type* CAPACITY_TYPE_MEMORY = 0* CAPACITY_TYPE_CPU = 1* CAPACITY_TYPE_STORAGE = 2* CAPACITY_TYPE_STORAGE_ALLOCATED = 3* CAPACITY_TYPE_VIRTUAL_NETWORK_PUBLIC_IP = 4* CAPACITY_TYPE_PRIVATE_IP = 5* CAPACITY_TYPE_SECONDARY_STORAGE = 6* CAPACITY_TYPE_VLAN = 7* CAPACITY_TYPE_DIRECT_ATTACHED_PUBLIC_IP = 8* CAPACITY_TYPE_LOCAL_STORAGE = 9* CAPACITY_TYPE_GPU = 19* CAPACITY_TYPE_CPU_CORE = 90.",
          "length": 255,
          "name": "type",
          "required": false,
          "type": "integer"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Zone name",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the Pod name",
          "name": "podname",
          "type": "string"
        },
        {
          "description": "the Cluster name",
          "name": "clustername",
          "type": "string"
        },
        {
          "description": "the capacity name",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the Zone ID",
          "name": "zoneid",
          "type": "string"
        },
        {},
        {
          "description": "the total capacity available",
          "name": "capacitytotal",
          "type": "long"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the Pod ID",
          "name": "podid",
          "type": "string"
        },
        {
          "description": "the capacity currently in allocated",
          "name": "capacityallocated",
          "type": "long"
        },
        {
          "description": "the Cluster ID",
          "name": "clusterid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the capacity type",
          "name": "type",
          "type": "short"
        },
        {
          "description": "the percentage of capacity currently in use",
          "name": "percentused",
          "type": "string"
        },
        {
          "description": "the capacity currently in use",
          "name": "capacityused",
          "type": "long"
        },
        {}
      ]
    },
    {
      "description": "Starts a virtual machine.",
      "isasync": true,
      "name": "startVirtualMachine",
      "params": [
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "scaleVirtualMachine,startVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "destination Cluster ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "clusterid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "True by default, CloudStack will firstly try to start the VM on the last host where it run on before stopping, if destination host is not specified. If false, CloudStack will not consider the last host and start the VM by normal process.",
          "length": 255,
          "name": "considerlasthost",
          "required": false,
          "since": "4.18.0",
          "type": "boolean"
        },
        {
          "description": "Boot into hardware setup menu or not",
          "length": 255,
          "name": "bootintosetup",
          "required": false,
          "since": "4.15.0.0",
          "type": "boolean"
        },
        {
          "description": "destination Host ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "hostid",
          "related": "",
          "required": false,
          "since": "3.0.1",
          "type": "uuid"
        },
        {
          "description": "destination Pod ID to deploy the VM to - parameter available for root admin only",
          "length": 255,
          "name": "podid",
          "related": "",
          "required": false,
          "type": "uuid"
        },
        {
          "description": "Deployment planner to use for vm allocation. Available to ROOT admin only",
          "length": 255,
          "name": "deploymentplanner",
          "required": false,
          "since": "4.4",
          "type": "string"
        }
      ],
      "related": "scaleVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {},
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {},
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                },
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                }
              ],
              "type": "set"
            }
          ],
          "type": "set"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {},
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Updates a service offering.",
      "isasync": false,
      "name": "updateServiceOffering",
      "params": [
        {
          "description": "the ID of the service offering to be updated",
          "length": 255,
          "name": "id",
          "related": "updateServiceOffering",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "the name of the service offering to be updated",
          "length": 255,
          "name": "name",
          "required": false,
          "type": "string"
        },
        {
          "description": "sort key of the service offering, integer",
          "length": 255,
          "name": "sortkey",
          "required": false,
          "type": "integer"
        },
        {
          "description": "the ID of the containing domain(s) as comma separated string, public for public offerings",
          "length": 4096,
          "name": "domainid",
          "required": false,
          "type": "string"
        },
        {
          "description": "the ID of the containing zone(s) as comma separated string, all for all zones offerings",
          "length": 255,
          "name": "zoneid",
          "required": false,
          "since": "4.13",
          "type": "string"
        },
        {
          "description": "the display text of the service offering to be updated",
          "length": 255,
          "name": "displaytext",
          "required": false,
          "type": "string"
        },
        {
          "description": "comma-separated list of tags for the service offering, tags should match with existing storage pool tags",
          "length": 255,
          "name": "storagetags",
          "required": false,
          "since": "4.16",
          "type": "string"
        },
        {
          "description": "the host tag for this service offering.",
          "length": 255,
          "name": "hosttags",
          "required": false,
          "since": "4.16",
          "type": "string"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the number of CPU",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the id of the service offering",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if disk offering uses custom iops, false otherwise",
          "name": "iscustomizediops",
          "type": "boolean"
        },
        {
          "description": "the vsphere storage policy tagged to the service offering in case of VMware",
          "name": "vspherestoragepolicy",
          "type": "string"
        },
        {},
        {
          "description": "the ha support in the service offering",
          "name": "offerha",
          "type": "boolean"
        },
        {
          "description": "the zone name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zone",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskIopsWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "the display text of the disk offering",
          "name": "diskofferingdisplaytext",
          "type": "string"
        },
        {
          "description": "Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)",
          "name": "hypervisorsnapshotreserve",
          "type": "integer"
        },
        {
          "description": "length (in second) of the burst",
          "name": "diskIopsReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "bytes read rate of the service offering",
          "name": "diskBytesReadRate",
          "type": "long"
        },
        {
          "description": "the zone ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "io requests read rate of the service offering",
          "name": "diskIopsReadRate",
          "type": "long"
        },
        {
          "description": "name of the disk offering",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the domain ID(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "data transfer rate in megabits per second allowed.",
          "name": "networkrate",
          "type": "integer"
        },
        {
          "description": "the clock rate CPU speed in Mhz",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "is this a  default system vm offering",
          "name": "defaultuse",
          "type": "boolean"
        },
        {
          "description": "the tags for the service offering",
          "name": "storagetags",
          "type": "string"
        },
        {
          "description": "the domain name(s) this disk offering belongs to. Ignore this information as it is not currently applicable.",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesReadRateMaxLength",
          "type": "long"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "burst io requests write rate of the disk offering",
          "name": "diskIopsWriteRateMax",
          "type": "long"
        },
        {
          "description": "the cache mode to use for this disk offering. none, writeback or writethrough",
          "name": "cacheMode",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "restrict the CPU usage to committed service offering",
          "name": "limitcpuuse",
          "type": "boolean"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "is true if the offering is customized",
          "name": "iscustomized",
          "type": "boolean"
        },
        {
          "description": "burst bytes read rate of the disk offering",
          "name": "diskBytesReadRateMax",
          "type": "long"
        },
        {
          "description": "the storage type for this service offering",
          "name": "storagetype",
          "type": "string"
        },
        {
          "description": "is this a the systemvm type for system vm offering",
          "name": "systemvmtype",
          "type": "string"
        },
        {
          "description": "is this a system vm offering",
          "name": "issystem",
          "type": "boolean"
        },
        {
          "description": "burst bytes write rate of the disk offering",
          "name": "diskBytesWriteRateMax",
          "type": "long"
        },
        {
          "description": "bytes write rate of the service offering",
          "name": "diskBytesWriteRate",
          "type": "long"
        },
        {
          "description": "the max iops of the disk offering",
          "name": "maxiops",
          "type": "long"
        },
        {
          "description": "additional key/value details tied with this service offering",
          "name": "serviceofferingdetails",
          "type": "map"
        },
        {
          "description": "length (in seconds) of the burst",
          "name": "diskBytesWriteRateMaxLength",
          "type": "long"
        },
        {
          "description": "the name of the service offering",
          "name": "name",
          "type": "string"
        },
        {
          "description": "burst io requests read rate of the disk offering",
          "name": "diskIopsReadRateMax",
          "type": "long"
        },
        {
          "description": "Root disk size in GB",
          "name": "rootdisksize",
          "type": "long"
        },
        {
          "description": "true if virtual machine root disk will be encrypted on storage",
          "name": "encryptroot",
          "type": "boolean"
        },
        {
          "description": "io requests write rate of the service offering",
          "name": "diskIopsWriteRate",
          "type": "long"
        },
        {
          "description": "deployment strategy used to deploy VM.",
          "name": "deploymentplanner",
          "type": "string"
        },
        {
          "description": "the host tag for the service offering",
          "name": "hosttags",
          "type": "string"
        },
        {
          "description": "true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk",
          "name": "isvolatile",
          "type": "boolean"
        },
        {
          "description": "the date this service offering was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "an alternate display text of the service offering.",
          "name": "displaytext",
          "type": "string"
        },
        {},
        {
          "description": "True/False to indicate the strictness of the disk offering association with the compute offering. When set to true, override of disk offering is not allowed when VM is deployed and change disk offering is not allowed for the ROOT disk after the VM is deployed",
          "name": "diskofferingstrictness",
          "type": "boolean"
        },
        {
          "description": "true if virtual machine needs to be dynamically scalable of cpu or memory",
          "name": "dynamicscalingenabled",
          "type": "boolean"
        },
        {
          "description": "the min iops of the disk offering",
          "name": "miniops",
          "type": "long"
        },
        {
          "description": "the memory in MB",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "provisioning type used to create volumes. Valid values are thin, sparse, fat.",
          "name": "provisioningtype",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering to which service offering is linked",
          "name": "diskofferingid",
          "type": "string"
        }
      ]
    },
    {
      "description": "Stops a virtual machine.",
      "isasync": true,
      "name": "stopVirtualMachine",
      "params": [
        {
          "description": "Force stop the VM (vm is marked as Stopped even when command fails to be send to the backend, otherwise a force poweroff is attempted).  The caller knows the VM is stopped.",
          "length": 255,
          "name": "forced",
          "required": false,
          "type": "boolean"
        },
        {
          "description": "The ID of the virtual machine",
          "length": 255,
          "name": "id",
          "related": "scaleVirtualMachine,stopVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
          "required": true,
          "type": "uuid"
        }
      ],
      "related": "scaleVirtualMachine,attachIso,detachIso,updateVMAffinityGroup,addNicToVirtualMachine,removeNicFromVirtualMachine,updateDefaultNicForVirtualMachine,deployVirtualMachine,destroyVirtualMachine,rebootVirtualMachine,resetPasswordForVirtualMachine,resetSSHKeyForVirtualMachine,restoreVirtualMachine,startVirtualMachine,stopVirtualMachine,updateVirtualMachine,changeServiceForVirtualMachine,revertToVMSnapshot,listVirtualMachines",
      "response": [
        {
          "description": "the amount of the vm's CPU currently used",
          "name": "cpuused",
          "type": "string"
        },
        {
          "description": "OS name of the vm",
          "name": "osdisplayname",
          "type": "string"
        },
        {
          "description": "an alternate display text of the ISO attached to the virtual machine",
          "name": "isodisplaytext",
          "type": "string"
        },
        {
          "description": "true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.",
          "name": "isdynamicallyscalable",
          "type": "boolean"
        },
        {
          "description": "the user's name who deployed the virtual machine",
          "name": "username",
          "type": "string"
        },
        {
          "description": "the list of resource tags associated",
          "name": "tags",
          "response": [
            {
              "description": "the ID of the domain associated with the tag",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "tag key name",
              "name": "key",
              "type": "string"
            },
            {
              "description": "the project id the tag belongs to",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "customer associated with the tag",
              "name": "customer",
              "type": "string"
            },
            {
              "description": "tag value",
              "name": "value",
              "type": "string"
            },
            {
              "description": "resource type",
              "name": "resourcetype",
              "type": "string"
            },
            {
              "description": "the project name where tag belongs to",
              "name": "project",
              "type": "string"
            },
            {
              "description": "id of the resource",
              "name": "resourceid",
              "type": "string"
            },
            {
              "description": "the account associated with the tag",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain associated with the tag",
              "name": "domain",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the project id of the vm",
          "name": "projectid",
          "type": "string"
        },
        {
          "description": " an alternate display text of the template for the virtual machine",
          "name": "templatedisplaytext",
          "type": "string"
        },
        {
          "description": "the password (if exists) of the virtual machine",
          "name": "password",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "list of security groups associated with the virtual machine",
          "name": "securitygroup",
          "response": [
            {
              "description": "the account owning the security group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the domain name of the security group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the list of ingress rules associated with the security group",
              "name": "ingressrule",
              "response": [
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                }
              ],
              "type": "set"
            },
            {
              "description": "the ID of the security group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the security group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the project name of the group",
              "name": "project",
              "type": "string"
            },
            {
              "description": "the description of the security group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the number of virtualmachines associated with this securitygroup",
              "name": "virtualmachinecount",
              "type": "integer"
            },
            {
              "description": "the domain ID of the security group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the list of egress rules associated with the security group",
              "name": "egressrule",
              "response": [
                {
                  "description": "the code for the ICMP message response",
                  "name": "icmpcode",
                  "type": "integer"
                },
                {
                  "description": "security group name",
                  "name": "securitygroupname",
                  "type": "string"
                },
                {
                  "description": "the id of the security group rule",
                  "name": "ruleid",
                  "type": "string"
                },
                {
                  "description": "the ending IP of the security group rule ",
                  "name": "endport",
                  "type": "integer"
                },
                {
                  "description": "account owning the security group rule",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "the protocol of the security group rule",
                  "name": "protocol",
                  "type": "string"
                },
                {
                  "description": "the type of the ICMP message response",
                  "name": "icmptype",
                  "type": "integer"
                },
                {
                  "description": "the starting IP of the security group rule",
                  "name": "startport",
                  "type": "integer"
                },
                {
                  "description": "the CIDR notation for the base IP address of the security group rule",
                  "name": "cidr",
                  "type": "string"
                },
                {
                  "description": "the list of resource tags associated with the rule",
                  "name": "tags",
                  "response": [
                    {
                      "description": "the domain associated with the tag",
                      "name": "domain",
                      "type": "string"
                    },
                    {
                      "description": "resource type",
                      "name": "resourcetype",
                      "type": "string"
                    },
                    {
                      "description": "the account associated with the tag",
                      "name": "account",
                      "type": "string"
                    },
                    {
                      "description": "the project id the tag belongs to",
                      "name": "projectid",
                      "type": "string"
                    },
                    {
                      "description": "id of the resource",
                      "name": "resourceid",
                      "type": "string"
                    },
                    {
                      "description": "tag value",
                      "name": "value",
                      "type": "string"
                    },
                    {
                      "description": "tag key name",
                      "name": "key",
                      "type": "string"
                    },
                    {
                      "description": "the ID of the domain associated with the tag",
                      "name": "domainid",
                      "type": "string"
                    },
                    {
                      "description": "the project name where tag belongs to",
                      "name": "project",
                      "type": "string"
                    },
                    {
                      "description": "customer associated with the tag",
                      "name": "customer",
                      "type": "string"
                    }
                  ],
                  "type": "set"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of resource tags associated with the rule",
              "name": "tags",
              "response": [
                {
                  "description": "the project name where tag belongs to",
                  "name": "project",
                  "type": "string"
                },
                {
                  "description": "the ID of the domain associated with the tag",
                  "name": "domainid",
                  "type": "string"
                },
                {
                  "description": "tag value",
                  "name": "value",
                  "type": "string"
                },
                {
                  "description": "customer associated with the tag",
                  "name": "customer",
                  "type": "string"
                },
                {
                  "description": "the project id the tag belongs to",
                  "name": "projectid",
                  "type": "string"
                },
                {
                  "description": "tag key name",
                  "name": "key",
                  "type": "string"
                },
                {
                  "description": "resource type",
                  "name": "resourcetype",
                  "type": "string"
                },
                {
                  "description": "the account associated with the tag",
                  "name": "account",
                  "type": "string"
                },
                {
                  "description": "id of the resource",
                  "name": "resourceid",
                  "type": "string"
                },
                {
                  "description": "the domain associated with the tag",
                  "name": "domain",
                  "type": "string"
                }
              ],
              "type": "set"
            },
            {
              "description": "the list of virtualmachine ids associated with this securitygroup",
              "name": "virtualmachineids",
              "type": "set"
            },
            {
              "description": "the project id of the group",
              "name": "projectid",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the virtual machine",
          "name": "name",
          "type": "string"
        },
        {
          "description": "Vm details in key/value pairs.",
          "name": "details",
          "type": "map"
        },
        {
          "description": "the ID of the ISO attached to the virtual machine",
          "name": "isoid",
          "type": "string"
        },
        {
          "description": "the hypervisor on which the template runs",
          "name": "hypervisor",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Type",
          "name": "boottype",
          "type": "string"
        },
        {
          "description": "the target memory in VM (KiB)",
          "name": "memorytargetkbs",
          "type": "long"
        },
        {
          "description": "the control state of the host for the virtual machine",
          "name": "hostcontrolstate",
          "type": "string"
        },
        {
          "description": "the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.",
          "name": "templateid",
          "type": "string"
        },
        {
          "description": "the date when this virtual machine was created",
          "name": "created",
          "type": "date"
        },
        {
          "description": "list of affinity groups associated with the virtual machine",
          "name": "affinitygroup",
          "response": [
            {
              "description": "the type of the affinity group",
              "name": "type",
              "type": "string"
            },
            {
              "description": "virtual machine IDs associated with this affinity group",
              "name": "virtualmachineIds",
              "type": "list"
            },
            {
              "description": "the ID of the affinity group",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the name of the affinity group",
              "name": "name",
              "type": "string"
            },
            {
              "description": "the account owning the affinity group",
              "name": "account",
              "type": "string"
            },
            {
              "description": "the description of the affinity group",
              "name": "description",
              "type": "string"
            },
            {
              "description": "the domain name of the affinity group",
              "name": "domain",
              "type": "string"
            },
            {
              "description": "the project ID of the affinity group",
              "name": "projectid",
              "type": "string"
            },
            {
              "description": "the domain ID of the affinity group",
              "name": "domainid",
              "type": "string"
            },
            {
              "description": "the project name of the affinity group",
              "name": "project",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "the name of the availability zone for the virtual machine",
          "name": "zonename",
          "type": "string"
        },
        {
          "description": "the name of the domain in which the virtual machine exists",
          "name": "domain",
          "type": "string"
        },
        {
          "description": "the name of the ISO attached to the virtual machine",
          "name": "isoname",
          "type": "string"
        },
        {
          "description": "the name of the template for the virtual machine",
          "name": "templatename",
          "type": "string"
        },
        {
          "description": "the name of the disk offering of the virtual machine",
          "name": "diskofferingname",
          "type": "string"
        },
        {
          "description": "the vGPU type used by the virtual machine",
          "name": "vgpu",
          "type": "string"
        },
        {
          "description": "instance name of the user vm; this parameter is returned to the ROOT admin only",
          "name": "instancename",
          "type": "string"
        },
        {
          "description": "the pool type of the virtual machine",
          "name": "pooltype",
          "type": "string"
        },
        {
          "description": "Base64 string containing the user data",
          "name": "userdata",
          "type": "string"
        },
        {
          "description": "true if the password rest feature is enabled, false otherwise",
          "name": "passwordenabled",
          "type": "boolean"
        },
        {
          "description": "the name of the host for the virtual machine",
          "name": "hostname",
          "type": "string"
        },
        {
          "description": "the VM's disk write in KiB",
          "name": "diskkbswrite",
          "type": "long"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "device type of the root volume",
          "name": "rootdevicetype",
          "type": "string"
        },
        {
          "description": "Guest vm Boot Mode",
          "name": "bootmode",
          "type": "string"
        },
        {
          "description": "the ID of the domain in which the virtual machine exists",
          "name": "domainid",
          "type": "string"
        },
        {
          "description": "the memory used by the VM in KiB",
          "name": "memorykbs",
          "type": "long"
        },
        {
          "description": "the project name of the vm",
          "name": "project",
          "type": "string"
        },
        {
          "description": "the ID of the virtual machine",
          "name": "id",
          "type": "string"
        },
        {
          "description": "true if the entity/resource has annotations",
          "name": "hasannotations",
          "type": "boolean"
        },
        {
          "description": "the total number of network traffic bytes sent",
          "name": "sentbytes",
          "type": "long"
        },
        {
          "description": "the speed of each vCPU",
          "name": "cpuspeed",
          "type": "integer"
        },
        {
          "description": "Name of AutoScale VM group",
          "name": "autoscalevmgroupname",
          "type": "string"
        },
        {
          "description": "OS type id of the vm",
          "name": "ostypeid",
          "type": "string"
        },
        {
          "description": "the ID of the service offering of the virtual machine",
          "name": "serviceofferingid",
          "type": "string"
        },
        {
          "description": "the ID of the backup offering of the virtual machine",
          "name": "backupofferingid",
          "type": "string"
        },
        {},
        {
          "description": "user generated name. The name of the virtual machine is returned if no displayname exists.",
          "name": "displayname",
          "type": "string"
        },
        {
          "description": "the number of vCPUs this virtual machine is using",
          "name": "cpunumber",
          "type": "integer"
        },
        {
          "description": "the VM's disk read in KiB",
          "name": "diskkbsread",
          "type": "long"
        },
        {
          "description": "the virtual network for the service offering",
          "name": "forvirtualnetwork",
          "type": "boolean"
        },
        {
          "description": "the state of the virtual machine",
          "name": "state",
          "type": "string"
        },
        {
          "description": "the internal memory (KiB) that's free in VM or zero if it can not be calculated",
          "name": "memoryintfreekbs",
          "type": "long"
        },
        {
          "description": "device ID of the root volume",
          "name": "rootdeviceid",
          "type": "long"
        },
        {
          "description": "the read (IO) of disk on the VM",
          "name": "diskioread",
          "type": "long"
        },
        {
          "description": "the outgoing network traffic on the host in KiB",
          "name": "networkkbswrite",
          "type": "long"
        },
        {
          "description": "the date when this virtual machine was updated last time",
          "name": "lastupdated",
          "type": "date"
        },
        {
          "description": "the id of userdata used for the VM",
          "name": "userdataid",
          "type": "string"
        },
        {
          "description": "State of the Service from LB rule",
          "name": "servicestate",
          "type": "string"
        },
        {
          "description": "ssh key-pairs",
          "name": "keypairs",
          "type": "string"
        },
        {
          "description": "the memory allocated for the virtual machine",
          "name": "memory",
          "type": "integer"
        },
        {
          "description": "the group name of the virtual machine",
          "name": "group",
          "type": "string"
        },
        {
          "description": "Base64 string representation of the resource icon",
          "name": "icon",
          "type": "resourceiconresponse"
        },
        {
          "description": "the list of nics associated with vm",
          "name": "nic",
          "response": [
            {
              "description": "Id of the NSX Logical Switch (if NSX based), null otherwise",
              "name": "nsxlogicalswitch",
              "type": "string"
            },
            {
              "description": "Id of the NSX Logical Switch Port (if NSX based), null otherwise",
              "name": "nsxlogicalswitchport",
              "type": "string"
            },
            {
              "description": "the type of the nic",
              "name": "type",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN if available",
              "name": "isolatedpvlan",
              "type": "integer"
            },
            {
              "description": "ID of the VLAN/VNI if available",
              "name": "vlanid",
              "type": "integer"
            },
            {
              "description": "Type of adapter if available",
              "name": "adaptertype",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "isdefault",
              "type": "boolean"
            },
            {
              "description": "MTU configured on the NIC",
              "name": "mtu",
              "type": "integer"
            },
            {
              "description": "name of the vpc to which the nic belongs",
              "name": "vpcname",
              "type": "string"
            },
            {
              "description": "the IPv6 address of network",
              "name": "ip6address",
              "type": "string"
            },
            {
              "description": "the gateway of the nic",
              "name": "gateway",
              "type": "string"
            },
            {
              "description": "Id of the vpc to which the nic belongs",
              "name": "vpcid",
              "type": "string"
            },
            {
              "description": "true if nic is default, false otherwise",
              "name": "macaddress",
              "type": "string"
            },
            {
              "description": "the name of the corresponding network",
              "name": "networkname",
              "type": "string"
            },
            {
              "description": "the traffic type of the nic",
              "name": "traffictype",
              "type": "string"
            },
            {
              "description": "the Secondary ipv4 addr of nic",
              "name": "secondaryip",
              "type": "list"
            },
            {
              "description": "IP addresses associated with NIC found for unmanaged VM",
              "name": "ipaddresses",
              "type": "list"
            },
            {
              "description": "the broadcast uri of the nic",
              "name": "broadcasturi",
              "type": "string"
            },
            {
              "description": "the gateway of IPv6 network",
              "name": "ip6gateway",
              "type": "string"
            },
            {
              "description": "the netmask of the nic",
              "name": "netmask",
              "type": "string"
            },
            {
              "description": "Id of the vm to which the nic belongs",
              "name": "virtualmachineid",
              "type": "string"
            },
            {
              "description": "the cidr of IPv6 network",
              "name": "ip6cidr",
              "type": "string"
            },
            {
              "description": "the isolated private VLAN type if available",
              "name": "isolatedpvlantype",
              "type": "string"
            },
            {
              "description": "device id for the network when plugged into the virtual machine",
              "name": "deviceid",
              "type": "string"
            },
            {
              "description": "the ID of the nic",
              "name": "id",
              "type": "string"
            },
            {
              "description": "the extra dhcp options on the nic",
              "name": "extradhcpoption",
              "type": "list"
            },
            {
              "description": "the ID of the corresponding network",
              "name": "networkid",
              "type": "string"
            },
            {
              "description": "the isolation uri of the nic",
              "name": "isolationuri",
              "type": "string"
            },
            {
              "description": "the ip address of the nic",
              "name": "ipaddress",
              "type": "string"
            }
          ],
          "type": "set"
        },
        {
          "description": "an optional field whether to the display the vm to the end user or not.",
          "name": "displayvm",
          "type": "boolean"
        },
        {
          "description": "the name of the service offering of the virtual machine",
          "name": "serviceofferingname",
          "type": "string"
        },
        {
          "description": "the incoming network traffic on the VM in KiB",
          "name": "networkkbsread",
          "type": "long"
        },
        {
          "description": "the write (IO) of disk on the VM",
          "name": "diskiowrite",
          "type": "long"
        },
        {
          "description": "ID of AutoScale VM group",
          "name": "autoscalevmgroupid",
          "type": "string"
        },
        {
          "description": "the ID of the disk offering of the virtual machine",
          "name": "diskofferingid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicipid",
          "type": "string"
        },
        {
          "description": "the ID of the availablility zone for the virtual machine",
          "name": "zoneid",
          "type": "string"
        },
        {
          "description": "the total number of network traffic bytes received",
          "name": "receivedbytes",
          "type": "long"
        },
        {},
        {
          "description": "the group ID of the virtual machine",
          "name": "groupid",
          "type": "string"
        },
        {
          "description": "the user's ID who deployed the virtual machine",
          "name": "userid",
          "type": "string"
        },
        {
          "description": "public IP address id associated with vm via Static nat rule",
          "name": "publicip",
          "type": "string"
        },
        {
          "description": "true if high-availability is enabled, false otherwise",
          "name": "haenable",
          "type": "boolean"
        },
        {
          "description": "List of read-only Vm details as comma separated string.",
          "name": "readonlydetails",
          "type": "string"
        },
        {},
        {
          "description": "list of variables and values for the variables declared in userdata",
          "name": "userdatadetails",
          "type": "string"
        },
        {
          "description": "the ID of the host for the virtual machine",
          "name": "hostid",
          "type": "string"
        },
        {
          "description": "the userdata override policy with the userdata provided while deploying VM",
          "name": "userdatapolicy",
          "type": "string"
        },
        {
          "description": "Os type ID of the virtual machine",
          "name": "guestosid",
          "type": "string"
        },
        {
          "description": "the name of the backup offering of the virtual machine",
          "name": "backupofferingname",
          "type": "string"
        },
        {
          "description": "the name of userdata used for the VM",
          "name": "userdataname",
          "type": "string"
        },
        {
          "description": "the account associated with the virtual machine",
          "name": "account",
          "type": "string"
        }
      ]
    },
    {
      "description": "Creates a network ACL for the given VPC",
      "isasync": true,
      "name": "createNetworkACLList",
      "params": [
        {
          "description": "Name of the network ACL list",
          "length": 255,
          "name": "name",
          "required": true,
          "type": "string"
        },
        {
          "description": "ID of the VPC associated with this network ACL list",
          "length": 255,
          "name": "vpcid",
          "related": "createVPC,listVPCs,updateVPC",
          "required": true,
          "type": "uuid"
        },
        {
          "description": "Description of the network ACL list",
          "length": 255,
          "name": "description",
          "required": false,
          "type": "string"
        },
        {
          "description": "an optional field, whether to the display the list to the end user or not",
          "length": 255,
          "name": "fordisplay",
          "required": false,
          "since": "4.4",
          "type": "boolean"
        }
      ],
      "related": "",
      "response": [
        {
          "description": "the Name of the ACL",
          "name": "name",
          "type": "string"
        },
        {},
        {
          "description": "the ID of the ACL",
          "name": "id",
          "type": "string"
        },
        {
          "description": "Name of the VPC this ACL is associated with",
          "name": "vpcname",
          "type": "string"
        },
        {
          "description": "the UUID of the latest async job acting on this object",
          "name": "jobid",
          "type": "string"
        },
        {
          "description": "the current status of the latest async job acting on this object",
          "name": "jobstatus",
          "type": "integer"
        },
        {
          "description": "Description of the ACL",
          "name": "description",
          "type": "string"
        },
        {
          "description": "is ACL for display to the regular user",
          "name": "fordisplay",
          "type": "boolean"
        },
        {},
        {
          "description": "Id of the VPC this ACL is associated with",
          "name": "vpcid",
          "type": "string"
        }
      ]
    }
  ],
  "count": 705
}
